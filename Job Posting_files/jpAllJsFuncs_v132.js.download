var monthminus=-1;
var yearminus=-1;
var yearplus=1;
var monthplus=1;
var date= new Date();
var month=(date.getMonth());
var day=(date.getDate());
var dayNm=(date.getDay());
var year=(date.getYear());
var calDiv1='calendar1'
var frameName1='';
var calendarNameG='';
// new change

var other_city =new Array();
var other_country=new Array();
var other_locality=new Array();

var previousFareaValue="Select";
var previousLocationValue="Select";
var browser=navigator.userAgent;
var browserName={'MSIE':'MSIE', 'Chrome':'Chrome', 'Firefox':'Firefox', 'Opera':'Opera', 'Safari':'Version'};
var browserVersion;
var browserName1;
function fetchBrowserName(){
    for(x in browserName){
        if((browser.indexOf(x))!=-1){
            if(x=='MSIE'){
                browser=browser.split('MSIE');
                browser1=browser[1].split(';')
                browserName1=x;
                browserVersion=browser1[0]
                break;
            }
            else{
                browser=browser.split(browserName[x]+'/');
                browser1=browser[1].split(' ');
                browserName1=x;
                browserVersion=browser1[0];
                break;
            }
        }
    }
    if(!browserName1) {
        browserName1='Other';
        browserVersion='Other';
    }
}
fetchBrowserName();

var getIE9 = (navigator.appName=='Microsoft Internet Explorer' && browserVersion>=9)
if(getIE9)
    year=year+1900;
else if((navigator.appName!='Microsoft Internet Explorer') && (navigator.appName!='Opera')) {

    year=year+1900;
}
// end new change
var monthArray=new Array('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec');

var dayArray=new Array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);

var dayName=new Array('Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa');
function incMonth(month1, year1) {
    var monthNew=parseInt(month1);
    if(monthNew<11) {
        month=monthNew+1;
        var yearNew=parseInt(year1);
        year=yearNew;
    }
    else {
        var yearNew=parseInt(year1);
        year=yearNew+1;
        month=0;
    }
}
function decMonth(month1, year1) {
    var monthNew=parseInt(month1);
    if(monthNew>0) {
        month=monthNew-1;
        var yearNew=parseInt(year1);
        year=yearNew;
    }
    else {
        var yearNew=parseInt(year1);
        year=yearNew-1;
        month=11
    }
}
function incYear(year1) {
    var yearNew=parseInt(year1);
    year=yearNew+1;
}
function decYear(year1) {
    year=(parseInt(year1))-1;
}
var obj;
var selectID=0;
var cal_new=0;
var dateNew1=new Date();
var dateNew_month=(dateNew1.getMonth());
var dateNew_day=(dateNew1.getDate());
var dateNew_dayNm=(dateNew1.getDay());

var dateNew_year=(dateNew1.getYear());
var dateRes;

if(navigator.appName!='Microsoft Internet Explorer') {
    dateNew_year=parseInt(dateNew_year)+1900;
}
function changeDate(resPeriod, resBase) {
    if(resBase=='m') {
        dateNew1.setMonth(parseInt(dateNew_month+parseInt(resPeriod)))
    }
    else if(resBase=='y') {
        dateNew1.setYear((parseInt(dateNew_year)+parseInt(resPeriod)))
    }
    else {
        dateNew1.setDate((parseInt(dateNew_day)+parseInt(resPeriod)))
    }
    dateRes = {"dp":dateNew1.getDate(), "mp":(parseInt(dateNew1.getMonth())+1), "yp":dateNew1.getYear()};
    if(navigator.appName!='Microsoft Internet Explorer') {
        dateRes["yp"]=dateRes["yp"]+1900;
    }
}
function showDate1(obj, calendarName, calNo, iframeName) {
    year=date.getFullYear();
    if(((document.getElementById(calendarName).style.display)=='block') && (calendarName==calendarNameG)) {
        hideDate();
    }
    else {
        hideDate();
        if((cal_new<calNo) && (calendarNameG!=calendarName)) {
            calendarNameG=calendarName;
            frameName1=iframeName;
            cal_new=cal_new+1;
            showDate(obj);
        }
        else {
            calendarNameG=calendarName;
            findPosCal(obj, calendarNameG);
            findPosCal(obj, frameName1);
            frameName1=iframeName;
        }
    }
}

function showDate(obj, calendarName) {
    obj=obj;
    var isleap1=Date.isleap(year);
    if(isleap1)
        dayArray[1]=29;
    else
        dayArray[1]=28;
    monthDay='';
    var firstDate = new Date(monthArray[month]+" 01, "+year+" 00:00:00");
    var firstDay=firstDate.getDay();
    findPosCal(obj, calendarNameG);
    findPosCal(obj, frameName1);
    var basicDiv1=document.createElement('div');
    var basicDiv=document.createElement('table');
    basicDiv.className="calClass";
    basicDiv.style.border="1px solid #63ceff";
    basicDiv.style.background="#e7f9fd";
    var basicTR_new=document.createElement('tr');
    var basicTd1=document.createElement('td');
    basicTd1.innerHTML="<a href='javascript:decYear(\""+year+"\"),showDate(\""+obj+"\");'>&lt;&lt;</a>";
    var basicTd2=document.createElement('td');
    basicTd2.innerHTML="<a href='javascript:decMonth(\""+month+"\", \""+year+"\"),showDate(\""+obj+"\");'>&lt;</a>";
    var basicTd3=document.createElement('td');
    basicTd3.setAttribute('colspan', 3);
    basicTd3.innerHTML="<strong>"+monthArray[month]+" "+year+"</strong>";
    var basicTd4=document.createElement('td');
    basicTd4.innerHTML="<a href='javascript:incMonth(\""+month+"\", \""+year+"\"),showDate(\""+obj+"\");'>&gt;</a>";
    var basicTd5=document.createElement('td');
    basicTd5.innerHTML="<a href='javascript:incYear(\""+year+"\"),showDate(\""+obj+"\")'>&gt;&gt;</a>";

    basicTR_new.appendChild(basicTd1);
    basicTR_new.appendChild(basicTd2);
    basicTR_new.appendChild(basicTd3);
    basicTR_new.appendChild(basicTd4);
    basicTR_new.appendChild(basicTd5);

    basicDiv.appendChild(basicTR_new);
    /*find day 1st*/
    var firstDayNo=dayNm%7;
    var basicTR=document.createElement('tr');
    for(var i=1; i<=dayName.length; i++) {
        var basicTD=document.createElement('td');
        basicTD.className="weekDay";
        basicTD.innerHTML=dayName[i-1];
        basicTR.appendChild(basicTD);
    }
    basicDiv.appendChild(basicTR);
    var k=1;
    var     loop=0;

    while(k<=dayArray[month]) {
        for(var i=1; i<=(((dayArray[month]+firstDayNo)/7)+1); i++) {
            basicTR=document.createElement('tr');
            for (var l=0; l<7; l++) {
                if(firstDay>0) {
                    var basicTD1=document.createElement('td');
                    basicTD1.align='right';
                    basicTD1.innerHTML='&nbsp';
                    basicTR.appendChild(basicTD1);
                    firstDay=firstDay-1;
                }
                else {
                    if(k<=dayArray[month]) {
                        var basicTD=document.createElement('td');
                        basicTD.align='right';

                        basicTD.innerHTML="<a id='"+calendarNameG+"date"+k+"' href='javascript:setDate1("+k+", \""+obj+"\", \""+calendarNameG+"date"+k+"\", \""+year+"\", \""+month+"\");' >"+k+"</a>";
                        basicTR.appendChild(basicTD);
                        k=k+1;
                    }
                    else
                        break;
                }
            }
            basicDiv.appendChild(basicTR);
        }
    }
    var close_new=document.createElement('tr');
    var closeTd1=document.createElement('td');
    closeTd1.setAttribute('colspan', 7);
    closeTd1.style.padding='4px';
    closeTd1.innerHTML="<a href='javascript:hideDate()' style='display:inline;'>Close</a>";
    close_new.appendChild(closeTd1);
    basicDiv.appendChild(close_new);

    basicDiv1.appendChild(basicDiv)
    document.getElementById(calendarNameG).innerHTML=basicDiv1.innerHTML;
}

function filterinstitute(contdd, checkbox, container, ddname, eleRel){
    if($n('.'+checkbox).length){
        //       $n("#"+contdd +" a").addEvent("click", function(){

        var currentRel = eleRel;
        if (!Array.prototype.indexOf) {
            Array.prototype.indexOf = function(currentRel, start) {
                for (var i = (start || 0), j = this.length; i < j; i++) {
                    if (this[i] === currentRel) { return i; }
                }
                return -1;
            }
        }
        else{
            var valueExist = ddname.selValue.indexOf(currentRel);
        }

        //var valueExist = ddname.selValue.indexOf(currentRel);

        if(valueExist >= 0){

            $n("."+checkbox).currObj().disabled = false;

            $n("#"+container).removeClass("clrGry");

        }

        else{

            $n("."+checkbox).currObj().disabled = true;

            $n("#"+container).addClass("clrGry");
            $n("."+checkbox).currObj().checked = false;

        }
    }
    //  })

}

function selectCal(selectOBJ) {
    for(var i=1; i<dayArray[month];i++) {
        document.getElementById(calendarNameG+'date'+i).className='';
    }
    var obj1=document.getElementById(selectOBJ);
    obj1.className='selDate';
    hideDate();
}
function splitDate(dateId) {
    var fieldVal=document.getElementById(dateId).value;
    if(fieldVal!='') {
        var splitVar=fieldVal.split('-');
        month=splitVar[1]-1;
        year=splitVar[0];
        date=splitVar[2];
        document.getElementById(calendarNameG+"date"+splitVar[2]).className='selDate';
        selectID=1;
    }
}
function hideDate() {
    var ij=1;
    cal_new = 0;
    while(document.getElementById('calendar'+ij)) {
        document.getElementById('calendar'+ij).style.display='none';
        document.getElementById('iframeLayer'+ij).style.display='none';
        ij=ij+1;
    }
}
function showDivDate() {
    document.getElementById(calendarNameG).style.display='block';
    document.getElementById(frameName1).style.display='block';
}
function setDate1(newDate, objNew, selectOBJ, curYear, curMonth) {
    var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "June",
        "July", "Aug", "Sept", "Oct", "Nov", "Dec"
    ];
    var newMonth=parseInt(curMonth)+1;
    var newYear=curYear;
    var obj1=document.getElementById(objNew);
    if(newMonth<10)
        newMonth="0"+String(newMonth);
    if(newDate<10)
        newDate="0"+String(newDate);
    obj1.value=newYear+"-"+newMonth+"-"+newDate;
    var formattedDate = newDate+"-"+monthNames[newMonth - 1]+"-"+newYear;
    selectCal(selectOBJ);
    if(objNew === "id_dateEnd") {
        var instruction = "This job would not be visible to the job seekers after the walk-in end date ("+formattedDate+")";
        document.getElementById("walkinInstruction").innerHTML=instruction;
    }
    if(typeof $ !='undefined') {
        $(obj1).trigger('change');
    } else {
        if ("createEvent" in document) {
            var evt = document.createEvent("HTMLEvents");
            evt.initEvent("change", false, true);
            obj1.dispatchEvent(evt);
        }
        else {
            obj1.fireEvent("onchange");
        }
    }
}
Date.isleap = function(year) {                                                                                                  //check the year is a leap year or not.
    return ((year % 400) == 0) ? 1 :((year % 100) == 0) ? 0 :((year % 4)   == 0) ? 1 :0;
}
function findPosCal(iframePos, divID) {
    obj=document.getElementById(iframePos);
    var curleft = curtop = 0;
    if (obj.offsetParent) {
        curleft = obj.offsetLeft
        curtop = obj.offsetTop
        while (obj = obj.offsetParent) {
            curleft += obj.offsetLeft
            curtop += obj.offsetTop
        }
    }
    document.getElementById(divID).style.top=curtop+20+"px";
    document.getElementById(divID).style.left=curleft+"px";
    showDivDate();
}
function calendarHide(e) {
    if (! e)
        e = window.event; // ie
    if (typeof e.target != 'undefined')
        srcEle = e.target; // firefox
    else if (typeof e.srcElement != 'undefined')
        srcEle = e.srcElement; // ie
    else
        return true;
    var tmpEle = srcEle;
    if(tmpEle.id != "cal1" && tmpEle.id != "cal2")
        hideDate();
}
function chgClass(layerID, selectClass, unSelectClass, linkID, linkContent) {
    var i=1;
    while(document.getElementById(linkID+i)) {
        document.getElementById(linkID+i).className=unSelectClass;
        document.getElementById(linkContent+i).style.display='none';
        i+=1;
    }
    document.getElementById(linkID+layerID).className=selectClass;
    document.getElementById(linkContent+layerID).style.display='block';
}
function showlayer(layerID, frameID) {
    document.getElementById(layerID).style.display='block';
    document.getElementById(frameID).style.display='block';
}
function hidelayer(layerID, frameID) {
    document.getElementById(layerID).style.display='none';
    document.getElementById(frameID).style.display='none';
}
function addppg(showLayerID) {
    if(document.getElementById(showLayerID).style.display=='none') {
        document.getElementById(showLayerID).style.display='block';
    }
    else {
        document.getElementById(showLayerID).style.display='none';
    }
}
function chgContent(content1, content2, layerid) {
    if(document.getElementById(layerid).innerHTML==content1) {
        document.getElementById(layerid).innerHTML=content2;
    }
    else {
        document.getElementById(layerid).innerHTML=content1;
    }
}
function changePM(clickLayerID) {
    if(document.getElementById(clickLayerID).className=='plus') {
        document.getElementById(clickLayerID).className='minus';
    }
    else {
        document.getElementById(clickLayerID).className='plus';
    }
}
function growArea(t) {
    a = t.value.split('\n');
    b=1;
    colsval=t.cols;
    for (x=0;x < a.length; x++) {
        if (a[x].length >=colsval) b+= Math.floor(a[x].length/colsval);
    }
    b+= a.length-1;
    if(b<6) {
        if (b > t.rows)
            t.style.height = (b+1)*11+'px';
    }
}
function changeTab(obj, buttons, clickName, container, classSel, classUnsel) {
    i=1;
    while(document.getElementById(clickName+i)) {
        document.getElementById(clickName+i).className=classUnsel;
        document.getElementById(container+i).style.display='none'
        i++;
    }
    document.getElementById(clickName+obj).className=classSel;
    document.getElementById(container+obj).style.display='block';
    document.getElementById(buttons).style.display='block';
    if((obj=="1") && (document.getElementById('refreshPattern').value!="disable"))
        document.getElementById('autoRefMsg').innerHTML="Manually refreshing this job will overwrite the Auto Refresh Settings for this job.<br />Are you sure you want to proceed?";
    else
        document.getElementById('autoRefMsg').innerHTML="Do you want to Refresh this job now?";
}
function click1(idname) {
    ArrTempClass = document.getElementById(idname).className.split(" ");
    document.getElementById(idname).className='dropdownin2';
    if(ArrTempClass[1] == "errfldd")
        document.getElementById(idname).className += " errfldd";
}
function change(idname) {
    ArrTempClass = document.getElementById(idname).className.split(" ");
    document.getElementById(idname).className='dropdownin1';
    if(ArrTempClass[1] == "errfldd")
        document.getElementById(idname).className += " errfldd";
}
function normal(idname) {
    ArrTempClass = document.getElementById(idname).className.split(" ");
    document.getElementById(idname).className='dropdownin';
    if(ArrTempClass[1] == "errfldd")
        document.getElementById(idname).className += " errfldd";
}
function showdrop(layerid) {
    document.getElementById(layerid).style.display='block';
}
function hidedrop(layerid) {
    document.getElementById(layerid).style.display='none';
}
function showhide(layerid1, layerid2) {
    showdrop(layerid1);
    hidedrop(layerid2);
    showdrop(layerid1+1);
    hidedrop(layerid2+1);
}
function filterchange(filterid) {
    i=1;
    while(document.getElementById("lev"+i))
    {
        document.getElementById("lev"+i).className='';
        document.getElementById("label"+i).style.fontWeight='normal';
        document.getElementById("label"+i).style.color='#000';
        document.getElementById('hard').style.display='none';
        i=i+1;
    }
    document.getElementById("lev"+filterid).className='filterchng';
    document.getElementById("label"+filterid).style.fontWeight='bold';
    document.getElementById("label"+filterid).style.color='#000fd5';
    if(filterid=='3')
        document.getElementById('hard').style.display='block';
}
/*start*/
var curtop1=0;
var inputid=new Array('email','autoFwdEmail');
var layershowid=new Array('emailArea','autoFwdEmailArea');
var iframeidarr=new Array('iframe1','iframe2');
function dropdiv(posdiv, idfield, iframeid) {       /////// To BE Removed Probably
    var l=0;
    for(l=0; l<layershowid.length; l++) {
        if(layershowid[l]==idfield) {}
        else {
            if(document.getElementById(layershowid[l])) {
                document.getElementById(layershowid[l]).style.display='none';
                document.getElementById(iframeidarr[l]).style.display='none';
            }
        }
    }

    obj=document.getElementById(idfield);
    if((obj.style.display)=='block') {
        obj.style.display='none'
        document.getElementById(iframeid).style.display='none';
    }
    else {
        dropdiv1(posdiv, idfield, iframeid)
    }
}
function dropdiv1(posdiv, idfield, iframeid) {        /////// To BE Removed Probably
    obj=document.getElementById(idfield);
    obj2=document.getElementById(posdiv);
    var curleft = curtop = 0;
    if (obj2.offsetParent) {
        curleft = curtop = 0;
        curleft = obj2.offsetLeft
        curtop = obj2.offsetTop
        while (obj2 = obj2.offsetParent) {
            curleft += obj2.offsetLeft
            curtop += obj2.offsetTop
        }
    }
    obj=document.getElementById(idfield);
    obj.style.top=curtop+18+"px";
    obj.style.left=curleft+"px";
    document.getElementById(iframeid).style.top=curtop+18+"px";
    document.getElementById(iframeid).style.left=curleft+"px";
    obj.style.display='block';
    document.getElementById(iframeid).style.display='block';
    document.getElementById(posdiv).focus();
}
function hidediv(iddiv, iframeid) {                           /////// To BE Removed Probably
    dropmenuobj=document.getElementById(iddiv)
    dropmenuobj.style.display="none";
    document.getElementById(iframeid).style.display='none';
}
var id1=0;
var id2=0;
function doSomething(e) {
    if (! e)
        e = window.event; // ie
    if (typeof e.target != 'undefined')
        srcEle = e.target; // firefox
    else if (typeof e.srcElement != 'undefined')
        srcEle = e.srcElement; // ie
    else
        return true;
    var tmpEle = srcEle;
    for(var j=0; j<inputid.length; j++) {
        if (tmpEle.id==inputid[j]) {
            id1=j;
            return true;
        }
    }
    for (i=0; i<7; ++i) {
        if (tmpEle) {
            for(var j=0; j<layershowid.length; j++) {
                if (tmpEle.id == layershowid[j]) {
                    id2=j;
                    return true;
                }
            }
        }
        try {
            tmpEle = tmpEle.parentNode;
        } catch (e2) {break;}
    }
    if((document.getElementById(layershowid[id1]))&&(document.getElementById(iframeidarr[id1])))
        hidediv(layershowid[id1], iframeidarr[id1]);
}
/*end*/

function output(layerid, checkid) {
    if(document.getElementById(checkid).checked) {
        document.getElementById(layerid).style.display='block';
        leapps = $n('#eappsContainerSelector2').length;
        lsm = $n('#SMContainerSelector2').length;
        if(leapps>0){
            if(document.getElementById('eappsContainerSelector2').innerHTML=="") {
                document.getElementById('autoFwdEmailContainer').style.display='none';
                document.getElementById('setFilterN').style.display="none";
            } else {
                document.getElementById('setFilterN').style.display="block";
            }

        }
        if(lsm>0){
            if(document.getElementById('SMContainerSelector2').innerHTML=="")
                document.getElementById('autoFwdSMContainer').style.display='none';
        }

    }
    else {
        document.getElementById(layerid).style.display='none';
        if(layerid == 'showemail') {
            document.getElementById('setFilterN').style.display="none";
        }
    }
}

function setFilterValue(filterValue) {
    document.getElementById('selectedFilter').value = filterValue;
}
function CheckCheckAll(fmobj,status) {
    if(fmobj == 'document.frmJobListing')
        var fmobj = document.frmJobListing;
    else if(fmobj == 'document.frmSavedJobs')
        var fmobj = document.frmSavedJobs;
    else if(fmobj == 'document.frmAutoSavedJobs')
        var fmobj = document.frmAutoSavedJobs;

    var TotalBoxes = 0;
    var TotalOn = 0;
    for (var i=0;i<fmobj.elements.length;i++) {
        var e = fmobj.elements[i];
        if (e.type=='checkbox' && e.getAttribute("checkAllGroup") == 1) {
            if(status==true) {
                e.checked = true;
                if(document.getElementById('checkAll1'))
                {
                    document.getElementById('checkAll1').checked=true;
                }
                if(document.getElementById('checkAll2'))
                {
                    document.getElementById('checkAll2').checked=true;
                }
            }
            else {
                e.checked = false;
                if(document.getElementById('checkAll1')) {
                    document.getElementById('checkAll1').checked=false;
                }
                if(document.getElementById('checkAll2')) {
                    document.getElementById('checkAll2').checked=false;
                }
            }
        }
    }
}
var regexp1= new RegExp ('<strong>|<em>|<b>|</b>|<u>|<ul>|<li>|<blockquote>|<div align="left">|<div align="right">|<div align="center">|<div align="justify">|<ol>|</strong>|</em>|</u>|</ul>|</li>|</blockquote>|</ol>|</div>|<p align="left">|<p align="right"|<p align="center"|<p align="justify"|<p>|</p>|&nbsp;</p>|<br />', "gi");

function cleanupString(stringVal) {
    var stringval = new String("");
    var subCategoryId = document.getElementById('subCategoryId').value;
    if(subCategoryId == 1 || subCategoryId == 3)
        stringval = removeWordChars(stringVal);
    else
        stringval = stringVal;

    stringval = stringval.replace(regexp1,"");
    regexp2=new RegExp ('&[^;]*;',"gi");
    stringval = stringval.replace(regexp2," ");
    stringval = stringval.replace(/<p [^>.]*>/gi,"");
    stringval = stringval.replace(/<ul [^>.]*>/gi,"");
    stringval = stringval.replace(/<ol [^>.]*>/gi,"");
    stringval = stringval.replace(/<li [^>.]*>/gi,"");
    stringval = trim(stringval);
    return stringval.length;    // original statement
}

function trim(stringToTrim) { //for removing first and last white space of the string
    if(stringToTrim)
        return stringToTrim.replace(/^\s+|\s+$/g,"");
    else
        return stringToTrim;
}
function trimAll(stringToTrim){
    if(stringToTrim)
        return stringToTrim.replace(/\s/g,'');
    else
        return stringToTrim;
}

function testHtmTag(stringval, removeFlag) {
    if(removeFlag == true) {
        stringval = removeWordChars(stringval);
        stringval = stringval.replace(regexp1,"");
        stringval = stringval.replace(/<p [^>.]*>/gi,"");
        stringval = stringval.replace(/<ul [^>.]*>/gi,"");
        stringval = stringval.replace(/<ol [^>.]*>/gi,"");
        stringval = stringval.replace(/<li [^>.]*>/gi,"");
    }
    var regexp = new RegExp("(<.*>)");
    var flag = false;
    flag = regexp.test(stringval);
    return flag;
}
function testHtmlCommentTag(stringToCheck) {
    var flag = false;
    var regexp = /(\<\!|\<\?)/;
    flag = regexp.test(stringToCheck);
    return flag ;
}
function removeWordChars(stringVal) {
    var stringval = stringVal.replace(/(style=\"[^\"]*\")/gi,"");
    stringval = stringval.replace(/(class=\"[^\"]*\")/gi,"");
    stringval = stringval.replace(/<font[\s]*[^>]*>/gi,"");
    stringval = stringval.replace(/<span[\s]*[^>]*>/gi,"");
    stringval = stringval.replace(/<\/font>/gi,"");
    stringval = stringval.replace(/<\/span>/gi,"");
    stringval = stringval.replace(/<![^<^>]*>/gi,"");
    return stringval;
}
function displayAddress() {
    var addrId = document.getElementById('address').value;
    if(addrId != "" && addrId != -1) {
        if(addrId.indexOf('|') > 0) {
            TempAddr = addrId.split("|");

            // Fix to handle | occuring in address.
            if(TempAddr.length > 2) {
                var tempTempAddr = new Array();
                for(j=0;j < (TempAddr.length - 1);j++) {
                    tempTempAddr[j] = TempAddr[j];
                }
                var tempAddrs1 = tempTempAddr.join("|");
                var tempAddrs2 = TempAddr[TempAddr.length - 1];
            }
            else {
                var tempAddrs1 = TempAddr[0];
                var tempAddrs2 = TempAddr[1];
            }

            if(tempAddrs2 != "") {
                document.getElementById("telephoneNumber").value = tempAddrs2;
            }

            else {
                document.getElementById("telephoneNumber").value = "";
            }
            //selAddrs = TempAddr[0];
            selAddrs = tempAddrs1;
        }
        else {
            selAddrs = addrId;
            document.getElementById("telephoneNumber").value = "";
        }

        document.getElementById("selectedAddr").style.display = 'block';
        if(document.getElementById("gglMapAdd") && (!(document.getElementById("collectresp_offl")) ||(document.getElementById("collectresp_offl") && !document.getElementById("collectresp_offl").checked))) {
            document.getElementById("gglMapAdd").style.display = "block";
        }

        if(selAddrs.indexOf('#') > 0 )
        {
            DispAddre = selAddrs.split("#")

            // Fix to handle # occuring in address.
            var tempDispAddre = new Array();
            for(i=1;i<DispAddre.length;i++)
                tempDispAddre[i-1] = DispAddre[i];
            var Addre = tempDispAddre.join('#');
            if(Addre)
            {
                Addre = map_htmlentities(Addre);
                document.getElementById("selectedAddr").innerHTML = Addre;
            }
            else
                document.getElementById("selectedAddr").innerHTML = "";
        }
        else
        {
            selAddrs = map_htmlentities(selAddrs);
            document.getElementById("selectedAddr").innerHTML = selAddrs;
        }
    }
    else
    {
        document.getElementById("telephoneNumber").value = "";
        document.getElementById("selectedAddr").style.display = 'none';
        if(document.getElementById("gglMapAdd")) {
            document.getElementById("gglMapAdd").style.display = "none";
        }

        document.getElementById("selectedAddr").innerHTML = "";
    }
}

function map_htmlentities(str) {
    str = str.replace(/</gi,'&lt;');
    str = str.replace(/>/gi,'&gt;');
    return str;
}

function submitForm(gEvent, functionName, paramName1, paramName2) {
    var id = document.getElementById('id').value;
    if(gEvent.keyCode == 13) {
        if(trim(paramName1) == '' || paramName1 == undefined)
            eval(functionName+"(id" + (paramName2 ? (",'" + paramName2 + "'") : "")  + ")");
        else
            eval(functionName+"('"+ paramName1 + (paramName2 ? ("','" + paramName2) : "") + "')");
    }
}
function throwRdx() {
    window.location = devJPListing + "/CrossSeller/goToRdx";
}
var exp_array=new Array();
exp_array[0]=  5;
exp_array[1]=  6;
exp_array[2]=  7;
exp_array[3]=  8;
exp_array[4]=  9;
exp_array[5]=  10;
exp_array[6]=  11;
exp_array[7]=  12;
exp_array[8]=  13;
exp_array[9]=  14;
exp_array[10]= 20;
exp_array[11]= 21;
exp_array[12]= 22;
exp_array[13]= 23;
exp_array[14]= 24;
exp_array[15]= 25;
exp_array[16]= 26;
exp_array[17]= 27;
exp_array[18]= 28;
exp_array[19]= 29;
exp_array[20]= 30;
exp_array[21]= 31;
exp_array[22]= 32;
exp_array[23]= 33;
exp_array[24]= 34;
exp_array[25]= 35;
exp_array[26]= 36;
exp_array[27]= 37;
exp_array[28]= 38;
exp_array[29]= 39;
exp_array[30]= '30 and above';

function chkCntr()
{
    if (document.getElementById('loc_count_span').innerHTML>=3)
        document.getElementById('jobIndicator').style.display='block';
    else
        document.getElementById('jobIndicator').style.display='none';
}
function removeSpn(id1Val, appendDiv, locationType, prefLocSpan) {     //// To be removed Probably

    prefLocSpan = (prefLocSpan == undefined) ? '' : prefLocSpan;

    if(prefLocSpan == '')
        removeId1 = 'span'+id1Val;
    else if(prefLocSpan == 'prefspan')
        removeId1 = 'prefspan'+id1Val;

    var i, removeObj=document.getElementById(removeId1);

    if(removeObj)
        document.getElementById(appendDiv).removeChild(removeObj);

    var selEle = document.getElementById(locationType);
    for (i=0; i<selEle.length; ++i) {
        if (selEle[i].value == id1Val) {
            if(locationType == 'otherCntryDD' || locationType == 'otherCityDD')
                document.getElementById(locationType).removeChild(selEle[i]);
            else
                selEle[i].selected=false;
            countSelectedLocations(true);
            var containerType = appendDiv.substring(0,appendDiv.length-4);
            if(document.getElementById(appendDiv).innerHTML != '')
                document.getElementById(containerType+'Container').style.display='block';
            else
                document.getElementById(containerType+'Container').style.display='none';

            chkCntr();
            return;
        }
    }
}

function saveCancelLoc(operation, otherloctext, otherloclist, loc) {
    var otherlocl = document.getElementById(otherloclist);
    var otherloct = document.getElementById(otherloctext);
    var i = 0;
    for(i = 0; i < otherloct.value.length; i++) {
        var choped_char = otherloct.value.charAt(i);
        if( choped_char == " " || ( choped_char >= "A" && choped_char <= "Z") || ( choped_char >= "a" && choped_char <= "z" ));
        else { // first character is other than . and character
            alert("No Special Characters allowed. Use only Alphabets (A-Z, a-z) or Space.");
            return;
        }
    }
    if(operation == "save") {
        if (otherloct.value!="Enter other Location")
        {
            if(otherloclist == "otherCntryDD" && (otherloct.value.toLowerCase() == "india" || otherloct.value.toLowerCase() == "ind" || otherloct.value.toLowerCase() == "indya")) {
                alert("Please specify an International Location.");
                return;
            }
            if(otherloct.value != "" && trim(otherloct.value) != "") {
                pntr = otherlocl.options.length;
                otherlocl.options[pntr] = new Option(otherloct.value, otherloct.value, true);
                otherlocl.options[pntr].selected = true;
                showSelected('', 'locationdisp', otherloclist, otherloct.value);
                otherloct.value = "";
            }
        }
    }
    else if(operation == "cancel") {
        otherloct.value = "";
    }
    countSelectedLocations();
}
function copyLocToPrefLoc() {    //////// To Be Removed Probably
    chk_obj = document.getElementById("copyLocation");
    var cntrydd = document.getElementById("CntryDD");
    var citydd = document.getElementById("CityDD");
    var locfilter = document.getElementById("locfilter_sel");

    var arr_selectedLoc = new Array(), j=0;

    for( i=0; i<cntrydd.length; i++ )  { // loop through the country dropdown
        if(cntrydd.options[i].selected == true && cntrydd.options[i].value != '-1')  {  // if selectable and selected
            arr_selectedLoc.push(cntrydd.options[i].value);
        }
    }
    for( i=0; i<citydd.length; i++ )  { // loop through the country dropdown
        if(citydd.options[i].selected == true && citydd.options[i].value != '-1')  {  // if selectable and selected
            arr_selectedLoc.push(citydd.options[i].value);
        }
    }
    if(chk_obj.checked == true) {
        for(i=0;i<locfilter.length;++i) {
            for(j=0;j<arr_selectedLoc.length;++j) {
                if(locfilter.options[i].value == arr_selectedLoc[j]) {
                    locfilter.options[i].selected = true;
                }
            }
        }
        jpMakePrefLocString();
        document.getElementById("respFilter_loc").checked = true;
        locfilter.disabled = false;
    }
}
function MM_goToURL() { //v3.0
    var i, args=MM_goToURL.arguments;
    document.MM_returnValue = false;
    for (i=0; i<(args.length-1); i+=2) {
        eval(args[i]+".location='"+args[i+1]+"'");
    }
}
function check_all() {
    for(var i=0;i<document.form1.elements.length;i++) {
        var e=document.form1.elements[i];
        if(e.type=="checkbox" && e.name!="jobcounter") {
            e.checked=document.form1.checkall.checked;
        }
    }
}
function confirmDel() {
    if(confirm('Are you sure to delete the selected Job(s)'))
        return true;
    else
        return false;
}

function validateSMProjectNew(responseType){
    var errorMsg = 'smNewProj: ';
    if(responseType !='SM'){
        return errorMsg;
    }
    if(document.getElementById('rd_nwPro').checked ==true){
        if(trim(document.getElementById('smNewProj').value) == '' || trim(document.getElementById('smNewProj').value) == 'Enter a name for the Requirement'){
            errorMsg += "Please provide a valid Requirement name.<br />";
        }
    }else{
        return errorMsg;
    }
    return errorMsg;
}

function validateSMProjectSelect(responseType){
    var errorMsg = 'smSelectProjects: ';
    if(responseType !='SM'){
        return errorMsg;
    }

    if(document.getElementById('rd_exPro').checked ==true){
        if(document.getElementById('smSelectProjects').value == -1){
            errorMsg += "Please select a valid Existing Requirement <br />";
        }else
            return errorMsg;
    }else
        return errorMsg;
    return errorMsg;
}
function validateCMProjectNew(responseType){
    var companyUrl_AI = document.getElementById('companyUrl_AI');
    var errorMsg = 'cmNewProj: ';
    if(responseType =='SM'){
        return errorMsg;
    }
    if(responseType =='companyUrl'){ // these condition will skip the Apply integration
        if($n('#companyUrl').length == 0 || $n('#companyUrl').getCss('display') == 'none'){

            return errorMsg;

        }
    }

    if(document.getElementById('rd_nwPro1').checked && document.getElementById('careersiteChkId').checked){
        if(trim(document.getElementById('cmNewProj').value) == '' || trim(document.getElementById('cmNewProj').value) == 'Enter a name for the Requirement'){
            document.getElementById('cmNewProj').value = document.getElementById("desig").value;
        }
    }
    return errorMsg;
}


function validateCMProjectSelect(responseType){
    var companyUrl_AI = document.getElementById('companyUrl_AI');
    var errorMsg = 'cmSelectProjects: ';
    if(responseType =='SM'){
        return errorMsg;
    }
    if(responseType =='companyUrl'){ // these condition will skip the Apply integration
        if($n('#companyUrl').length == 0 || $n('#companyUrl').getCss('display') == 'none'){

            return errorMsg;
        }
    }
    if(document.getElementById('rd_exPro1').checked && document.getElementById('careersiteChkId').checked){
        if(document.getElementById('cmSelectProjects').value == -1){
            errorMsg += "Please select a valid Existing Requirement <br />";
        }else
            return errorMsg;
    }else
        return errorMsg;
    return errorMsg;
}

function checkPage(isPV) {
    try {
        var designation = document.getElementById("desig").value;
        var posOpen = document.getElementById("posOpen").value;
        //var description = document.getElementById("iddescription").value; // get the text of the text area
        if (FCKeditorAPI != undefined)
            var description =  getEditorHTML($editor);
        else
            var description = document.getElementById("iddescription").value;   // Description
        var farea = '';
        var role = '';
        var industry = '';

        //farea = document.getElementById("farea").options[document.getElementById("farea").selectedIndex].value;
        //if(document.getElementById("role") && document.getElementById("role").length > 0)
        // role = document.getElementById("role").options[document.getElementById("role").selectedIndex].value;

        //industry = document.getElementById("indType").options[document.getElementById("indType").selectedIndex].value;

        //ArrUgCourse  = document.getElementById("ug").getElementsByTagName("option");      // ug course drop down
        //ArrUgSpec    = document.getElementById("ugspec").getElementsByTagName("option");        // ug spec dropdown
        // ArrPgCourse  = document.getElementById("pg").getElementsByTagName("option");      // pg course drop down
        // ArrPgSpec    = document.getElementById("pgspec").getElementsByTagName("option");        // pg spec dropdown

        try {
            if(document.getElementById("microsite"))
                ArrMicrosite = document.getElementById("microsite").getElementsByTagName("option");
        } catch(e){ }
        if(document.getElementById("tagValArr")){
            var keywords        = document.getElementById("tagValArr").value;      // keywords
        }
        else{
            var keywords        = document.getElementById("keyword").value;
        }
        var currency        = document.getElementById("currency").value;      //currency
        var mincompensation = document.getElementById("MinimumSalary").value;     // minimum compensation
        var maxcompensation = document.getElementById("MaximumSalary").value;     // maximum compensation
        var additionaldata  = document.getElementById("otherDetails").value;    // additional compensation details
        //var profile         = document.getElementById("candidateProfile").value;        // candidate profile
        if(FCKeditorAPI != undefined){
            if(isPV != "1"){
                var profile   = getEditorHTML($editorCP);
            }
        }
        else
            var profile     = document.getElementById("candidateProfile").value;        // candidate profile
        var minworkexp      = document.getElementById("MinimumExperience").value;        // min work exp dropdown
        var maxworkexp      = document.getElementById("MaximumExperience").value;        // max work exp dropdown

        var compname            = document.getElementById("compName").value;
        // ark007
        var hiringFor            = document.getElementById("hiringFor").value;
        // ark007 ends
        //        var comprof             = document.getElementById("companyProfile").value;
        var comprof             = document.getElementById("companyProfile").value;
        var website             = document.getElementById("website").value;
        var contname            = document.getElementById("contactPerson").value;     // name of contact person
        var reference           = document.getElementById("referenceCode").value;               //reference code
        var contno              = document.getElementById("telephoneNumber").value;       //telephone no
        // Check when these fields doesn't exists.
        if(document.getElementById("refreshPattern") && document.getElementById("recurrenceEndOn"))
        {
            var refreshDisable      = document.getElementById("refreshPattern").value;
            var radEndOnDate           = document.getElementById("recurrenceEndOn");
            if(refreshDisable != "disable") {
                var endOnDate = document.getElementById("date").value;
            }
        }
        var filter = new String("");
        filter = gbi('respFilter').value;
        var resp_email = document.getElementById("collectresp_email");      // email response method
        var eapps = false;
        if(document.getElementById("collectresp_eapps")) {
            eapps = true;
            var resp_eapps = document.getElementById("collectresp_eapps");  // eapps response method
        }
        var SM = false;
        if(document.getElementById("collectresp_SM")) {
            SM = true;
            var resp_SM = document.getElementById("collectresp_SM");  // SM response method
        }

        var custurl = false;
        if(document.getElementById("collectresp_custurl")) {
            custurl = true; // cwebsite2
            var resp_custurl = document.getElementById("collectresp_custurl");// company url response method
        }
        var resp_offl = document.getElementById("collectresp_offl");        // offline response method
        var responsemethod = new String("");

        // populate the value of response method to catch error
        // value  of response method is stored in variable response method
        if(resp_email && resp_email.checked == true)
            responsemethod = resp_email.value;
        else if(eapps && eapps == true && resp_eapps.checked == true)
            responsemethod = resp_eapps.value;
        else if(SM && SM == true && resp_SM.checked == true)
            responsemethod = resp_SM.value;
        else if(custurl && custurl == true && resp_custurl.checked == true)
            responsemethod = resp_custurl.value;
        else if(resp_offl && resp_offl.checked == true)
            responsemethod = resp_offl.value;
        //var location = document.getElementById("CityDD").options;
        // var country = document.getElementById("CntryDD").options;
        //var otherlocation = document.getElementById("otherCityDD").options;
        //var othercountry = document.getElementById("otherCntryDD").options;
    } catch(e){
    }
    try {
        var errMsg          = new Array();                  // master error message string
        var tempErr         = new String("");                   // temporary error string
        var errCount        = 0;                        // count of errors for each field
        var selectedloc     = 0;                        // count of selected location
        var i               = 0;
        var j               = 0;
    } catch(e) {}
    try {
        errCount = 0;
        tempErr  = "";
        //designation = trim(designation);    // remove extra spaces from start and end
        errMsg[errMsg.length] = validateDesignation(designation);} catch(e){}
    try {
        errCount = 0;
        tempErr  = "";
        description = description ? trim(description) : '';
        errMsg[errMsg.length] = validateJobDesc(description);
    } catch(e){}
    try {
        errCount = 0;
        tempErr  = "";
        if(document.getElementById("tagValArr")){
            errMsg[errMsg.length] = validateKeywords(keywords);
        }
        else{
            errMsg[errMsg.length] = validateNormalKeywords(keywords);
        }
    } catch(e) {}
    try {
        errMsgMinExp = validateExperience(minworkexp,maxworkexp);
    } catch(e) {}
    try {
        if(errMsgMinExp == 'experience:')
            errMsg[errMsg.length]= validateTopMgmt(farea, minworkexp);
        else
            errMsg[errMsg.length] = errMsgMinExp;
    } catch(e) {}

    try {
        errCount = 0;
        tempErr  = "";
        errMsg[errMsg.length] = validateCompensation(currency, mincompensation,maxcompensation);
    } catch(e) {}

    try {
        errCount = 0;
        errMsg[errMsg.length]= validateSalaryDetails(additionaldata);
    } catch(e) {}

    try {
        errMsg[errMsg.length]= validateJobLoc();
    } catch(e) {}

    try {
        errMsg[errMsg.length]= validateJobLocality();
    } catch(e) {}

    try {
        errCount = 0;
        tempErr  = "";
        errMsg[errMsg.length]= validateIndustry();
    } catch(e){}

    try {
        errCount = 0;
        tempErr  = "";
        errMsg[errMsg.length] = validateFarea();
    } catch(e){}
    try {
        errCount = 0;
        tempErr  = "";
        if(document.getElementById("rowarea").style.display != "none")
            errMsg[errMsg.length] = validateRole();
    } catch(e) {}

    try {
        errMsg[errMsg.length]= validateCandProf(profile);
    } catch(e){}

    try {
        errCount = 0;
        errMsg[errMsg.length]= validatePosOpen(posOpen);
    } catch(e) {}

    // ark007 ends

    try {
        errMsg[errMsg.length]= validateUGCourse();
    } catch(e) {}
    try {
        errMsg[errMsg.length]= validatePGCourse();
    } catch(e) {}
    try {
        if(isPV != "1"){
            errMsg[errMsg.length]= validateDoctorateCourse();
        }
    } catch(e) {}
    try {
        errormessage = validateCompName(compname,'compName');
        errMsg[errMsg.length] = errormessage;
    } catch(e) {}
    // ark007
    try {
        errormessage = validateHiringFor(hiringFor,'hiringFor');
        errMsg[errMsg.length] = errormessage;
    } catch(e) {}

    try {
        if(hiringFor == "Enter the name/description of the company you are hiring for")
            hiringFor = "";
    } catch(e) {}

    // ark007 ends
    try {
        errormessage  = validateComProfile(comprof);
        errMsg[errMsg.length]= errormessage;
    } catch(e) {}
    try {
        errormessage = validateWebsite(website);
        errMsg[errMsg.length]= errormessage;
    } catch(e) {}
    try {
        errormessage= validateContName(contname);
        errMsg[errMsg.length]= errormessage;
    } catch(e) {}
    try {
        errormessage = validateReference(reference);

        errMsg[errMsg.length]= errormessage;
    } catch(e) {}
    try {
        errormessage = validateCollectResponse(responsemethod);
        errMsg[errMsg.length]= errormessage;
    } catch(e) {}
    try{
        errormessage = validateSMProjectSelect(responsemethod);
        errMsg[errMsg.length] = errormessage;
    }catch(e){}
    try{
        errormessage = validateSMProjectNew(responsemethod);
        errMsg[errMsg.length] = errormessage;
    }catch(e){}
    try{
        errormessage = validateCMProjectSelect(responsemethod);
        errMsg[errMsg.length] = errormessage;
    }catch(e){}
    try{
        errormessage = validateCMProjectNew(responsemethod);
        errMsg[errMsg.length] = errormessage;
    }catch(e){}
    try {
        errormessage = validateWalkinDate();
        errMsg[errMsg.length]= errormessage;
    } catch(e) {}
    try {
        errormessage = validateVenueUrl();
        errMsg[errMsg.length] = errormessage;
    } catch (e) {}
    try {
        errormessage = validateWalkinTime();
        errMsg[errMsg.length]= errormessage;
    } catch(e) {}
    try {
        errormessage = validateContNo(contno, false);
        errMsg[errMsg.length]= errormessage;
    } catch(e) {}
    try {
        errormessage = validateRPEmail();
        errMsg[errMsg.length]= errormessage;
    } catch(e) {}
    try {

        if(document.getElementById("microsite")) {
            errormessage = validateMicrosite(ArrMicrosite);
            errMsg[errMsg.length]= errormessage;
        }
    } catch(e) {}
    if (isPV == 1)
    {
        try {
            if(document.getElementById("emptyLogo")) {
                if(document.getElementById("emptyLogo").innerHTML) {
                    document.getElementById('emptyLogo').className = 'error';
                    document.getElementById('emptyLogo').style.display = 'block';
                    errMsg[errMsg.length] = 'logosel:'+document.getElementById("emptyLogo").innerHTML;
                }
            }
            else if(document.getElementById("logosel")) {
                if(!isPV) {
                    errormessage = validateLogo();
                    errMsg[errMsg.length]= errormessage;
                }
            }
        } catch(e) {}
        try {
            errMsg[errMsg.length] = validatePremiumJob();
        } catch(e){}
    }
    try {
        if(responsemethod == "email" || responsemethod == "eapps" || responsemethod == "SM") {
            errormessage = validateFilter(filter);
            errMsg[errMsg.length] = errormessage;
        }
    } catch(e){}
    /*
     try {
     errormessage = validateJobLoc(ArrLocation);
     errMsg[errMsg.length] = errormessage;
     } catch(e){
     alert(e);
     }
     */
    try {
        errCount = 0;
        tempErr  = "";
        if(refreshDisable != undefined  )
        {
            if(document.getElementById("refreshPattern").value !="disable")
            {
                errormessage = validateRefreshStartDate(document.getElementById('stDate').value);
                errMsg[errMsg.length] = errormessage;
            }
            else{
                document.getElementById('stDate_err').style.display='none';
            }
            errormessage = validateRefreshDate(endOnDate,radEndOnDate);
            errMsg[errMsg.length] = errormessage;
            if(document.getElementById('loc_count_span')) {
                errormessage = validateTotalRefreshCredit();
                errMsg[errMsg.length] = errormessage;
            }
        }
        //  else
        //  errMsg[errMsg.length]= 0;
    } catch(e) {}
    return errMsg;
}
function checkIfPostedValIsToolTip() {
    if(document.getElementById("desig").value == "Use Complete words Eg: Type Senior Manager, not Sr. Mgr.") {
        document.getElementById("desig").value = "";
    }
    if(document.getElementById("keyword").value == "Use Complete words. Eg: Type Customer Executive, not Cust. Exec.") {
        document.getElementById("keyword").value = "";
    }
}
//function to create tags on submit
function validateTags(){
    var keyLen = document.getElementById('keyword').value.length;
    if(keyLen !=0) {
        document.getElementById('keyword').focus();
        document.getElementById('keyword').blur();
    }

}

function setPremiumFilterCheck(){
    if($n('#ugPremiumCheck').length && $n('#pgPremiumCheck').length){
        if($n('#ugPremiumCheck').isChecked() || $n('#pgPremiumCheck').isChecked()){
            if(!($n("#setFilter").currObj().style.display == "none")){
                $n("#respFilter_loc_chkbox3").currObj().checked = true;
            }
        }
    }
}

function validatePJPForm(){

}

function validateForm(isPV)
{
    if(typeof(newflag) !="undefined" && newflag == "DOWN")
        return false;
    setPremiumFilterCheck();
    var msg = new String("");
    var ArrMsg = new Array();
    var StrDivIndex = new String('');
    var IntIndexOfColon = new String('');
    var i ;
    var ErrFlag = false ;
    var ErrFlagPg2 = false;
    var ErrNoCnt = 0;
    var dirtyCollectResp = "";
    // Before checking for errors check if any of the fields have the tool tip value populated in them......
    //checkIfPostedValIsToolTip();
    if (document.getElementById('isJSEnabled'))
        document.getElementById('isJSEnabled').value = 'yes';
    if(document.getElementById('address_err')){
        document.getElementById('address_err').style.display='none';
    }

    setTimeout(function(){document.getElementById('keyword').focus()},10);
    document.getElementById('keyword').blur();

    ArrMsg = checkPage(isPV);
    if(ArrMsg.length > 0)
    {
        //Send erorr to TNM plugin
        (function () {
            var tnmErrorObject = {};
            ArrMsg.forEach(function (value) {
                var _val = value.split(':');
                var key = trim(_val[0]);
                var val = trim(_val[1]);
                val = trim(val && val.replace(/\<br \/\>/g, ''));
                if (key && val) return tnmErrorObject[key] = val;
            });
            var errorObject = {
                err: tnmErrorObject, // error object
                // node: Error_Field_Dom_Node,
                formName: "jpFirstPage",
                isSubmit: false, // By default false
                isFormValid: false // By default false
            };
            if (window.logger && window.logger.tnm) {
                logger.tnm.fn.logError(errorObject);
            }
        })();
        //End of TNM code

        var FirstErrFIeld = new String('');
        for( i=0; i<ArrMsg.length; i++ )
        {
            IntIndexOfColon = ArrMsg[i].indexOf(':');

            if(ArrMsg[i]!= '' && ArrMsg[i].indexOf(':') != -1)
            {
                StrDivIndex = trim(ArrMsg[i].substr(0,IntIndexOfColon));
                msg = ArrMsg[i].substr(IntIndexOfColon+1);
            }
            try
            {
                var DivIdErr = StrDivIndex+'_err';
                var DivIdField = '';
                var arrFlag=false;
                // Condition Creating DivIdField for special cases.
                if(StrDivIndex == 'experience') {
                    DivIdField = new Array();
                    DivIdField[0] = 'MinimumExperience';
                    DivIdField[1] = 'MaximumExperience';
                    arrFlag = true;
                }
                else if(StrDivIndex == 'recProfEmail'){
                    if($n("div[data-rel=aNrc]").length && $n("div[data-rel=aNrc]").hasClass("clpse")){
                        $n("div[data-rel=aNrc]").currObj().click();
                        DivIdField = "recProfEmail";
                    }
                }
                else if(StrDivIndex == 'logosel'){
                    if($n("div[data-rel=jbo]").length && $n("div[data-rel=jbo]").hasClass("clpse")){
                        $n("div[data-rel=jbo]").currObj().click();
                        DivIdField = "logosel";
                    }
                }
                else if(StrDivIndex == 'currency')
                {
                    DivIdField = new Array();
                    DivIdField[0] = "currency";
                    DivIdField[1] = "MinimumSalary";
                    DivIdField[2] = "MaximumSalary";
                    arrFlag = true;
                }
                else if(StrDivIndex == 'location')
                {
                    DivIdField = new Array();
                    DivIdField[0] = "inpNaukContainerDD2";
                    DivIdField[1] = "inpIntLocContainerDD";
                    arrFlag = true;
                }
                else if(StrDivIndex.substr(0,11) == 'collectresp')
                {
                    if(StrDivIndex.substr(StrDivIndex.length-4,StrDivIndex.length) == 'mail') {
                        if(insta!=1)
                            DivIdField = 'emailContainerDD2';
                        else
                            DivIdField = 'email';
                        DivIdErr = 'collectresp_err';
                        dirtyCollectResp = "email";

                    }
                    else if(StrDivIndex.substr(StrDivIndex.length-5,StrDivIndex.length) == 'eapps')
                    {
                        DivIdField = 'eappsContainerDD2';
                        dirtyCollectResp = "eapps";
                    }
                    else if(StrDivIndex.substr(StrDivIndex.length-2,StrDivIndex.length) == 'SM')
                    {
                        DivIdField = 'SMContainerDD2';
                        dirtyCollectResp = "SM";
                    }
                    else if(StrDivIndex.substr(StrDivIndex.length-7,StrDivIndex.length) == 'custurl')
                    {
                        DivIdField = 'companyUrlSection';
                        dirtyCollectResp = "custurl";
                    } else if (StrDivIndex.substr(StrDivIndex.length - 4, StrDivIndex.length) == 'offl') {
                        //DivIdField = new Array();
                        //DivIdField[0] = "address";
                        //DivIdField[1] = "telephoneNumber";
                        //DivIdErr = 'offline_err';
                        DivIdField = 'txtAreaVenue';
                        DivIdErr = 'txtAreaVenue_err';
                        arrFlag = true;
                        dirtyCollectResp = "offl";
                    }
                    if($n("div[data-rel=manageRsp]").length && $n("div[data-rel=manageRsp]").hasClass("clpse")){
                        $n("div[data-rel=manageRsp]").currObj().click();

                    }
                }
                else if (StrDivIndex == 'inputVenue') {
                    DivIdField = new Array();
                    DivIdField[0] = "inputVenue";
                    DivIdErr = "inputVenue_err";
                    arrFlag = true;
                }
                else if (StrDivIndex == 'inputVenueAdd') {
                    DivIdField = new Array();
                    DivIdField[0] = "inputVenueAdd";
                    DivIdErr = "inputVenueAdd_err";
                    arrFlag = true;
                }
                else if(StrDivIndex == 'walkinDate')
                {
                    DivIdField = new Array();
                    DivIdField[0] = "id_dateStart";
                    DivIdField[1] = "id_dateEnd";
                    arrFlag = true;
                }
                else if(StrDivIndex == 'walkinTime')
                {
                    DivIdField = new Array();
                    DivIdField[0] = "walkin_hours";
                    DivIdField[1] = "walkin_meridiem";
                    arrFlag = true;
                }
                else if(StrDivIndex == 'indType'){
                    DivIdField = "inpIndContainerDD2";
                }
                else if(StrDivIndex == 'farea'){
                    DivIdField = "inpFareaContainerDD2";
                }
                else if(StrDivIndex == 'role'){
                    DivIdField="inpRoleContainerDD2";
                }

                else if(StrDivIndex == 'ug')
                {
                    DivIdField="inpUgContainerDD2";

                }
                else if(StrDivIndex == 'pj')
                {
                    DivIdField="premTech";

                }
                else if(StrDivIndex == 'ug2')
                {
                    DivIdField="inpUgContDD2";

                }

                else if(StrDivIndex == 'pg')
                {
                    DivIdField="inpPgContainerDD2";

                }
                else if(StrDivIndex == 'pg2')
                {
                    DivIdField="inpPgContDD2";

                }

                else if(StrDivIndex == 'doctorate')
                {
                    DivIdField="inpPPgContainerDD2";

                }else if(StrDivIndex == 'smSelectProjects'){
                    DivIdField = 'SMProjectDiv';
                }
                else if(StrDivIndex == 'smNewProj'){
                    DivIdField = 'SMProjectDiv';
                    //arrFlag = true;
                }else if(StrDivIndex == 'cmSelectProjects'){
                    DivIdField = 'CommonProjectDiv';
                }
                else if(StrDivIndex == 'cmNewProj'){
                    DivIdField = 'CommonProjectDiv';
                    //arrFlag = true;
                }
                else if(StrDivIndex == 'locality'){
                    DivIdField="inpLocalitiesContainerDD2";
                }
                else{
                    DivIdField = StrDivIndex;
                }

                if(trim(msg) != '')
                {// Condition setting error
                    ErrFlag = true ;
                    ErrNoCnt = ErrNoCnt+1 ;
                    if(FirstErrFIeld == '')
                    {

                        FirstErrFIeld = StrDivIndex;
                        if(FirstErrFIeld == 'desig')
                        {
                            FirstErrFIeld = 'desig';
                        }
                        else if(FirstErrFIeld == 'iddescription')
                        {
                            FirstErrFIeld = 'iddescription';
                        }
                        else if(FirstErrFIeld == 'farea')
                        {
                            FirstErrFIeld = 'inpFareaContainerDD2';
                        }
                        else if(FirstErrFIeld == 'role')
                        {
                            FirstErrFIeld = 'inpRoleContainerDD2';
                        }
                        else if(FirstErrFIeld == 'indType')
                        {
                            FirstErrFIeld = 'inpIndContainerDD2';
                        }
                        else if(FirstErrFIeld == 'keyword')
                        {
                            FirstErrFIeld = 'hlpTxtTag';
                        }
                        else if(FirstErrFIeld == 'location')
                        {
                            FirstErrFIeld = 'inpNaukContainerDD2';
                        }
                        else if(FirstErrFIeld == 'currency')
                        {
                            FirstErrFIeld = 'currency';
                        }
                        else if(FirstErrFIeld == 'otherDetails')
                        {
                            FirstErrFIeld = 'otherDetails';
                        }
                        else if(FirstErrFIeld == 'candprof')
                        {
                            FirstErrFIeld = 'candprof';
                        }
                        else if(FirstErrFIeld == 'experience')
                        {
                            FirstErrFIeld = 'MinimumExperience';
                        }
                        else if(FirstErrFIeld == 'ug')
                        {
                            FirstErrFIeld = 'inpUgContainerDD2';
                        }
                        else if(FirstErrFIeld == 'pg')
                        {
                            FirstErrFIeld = 'inpPgContainerDD2';
                        }
                        else if(FirstErrFIeld == 'doctorate')
                        {
                            FirstErrFIeld = 'inpPPgContainerDD2';
                        }
                        else if(FirstErrFIeld == 'companyName')
                        {
                            FirstErrFIeld = 'companyName';
                        }
                        else if(FirstErrFIeld == 'companyProfile')
                        {
                            FirstErrFIeld = 'companyProfile';
                        }
                        else if(FirstErrFIeld == 'website')
                        {
                            FirstErrFIeld = 'website';
                        }
                        else if(FirstErrFIeld == 'contactPerson')
                        {
                            FirstErrFIeld = 'contactPerson';
                        }
                        else if(FirstErrFIeld.substr(0,11) == "collectresp")
                        {
                            FirstErrFIeld = 'collectresp';
                        }
                        else if(FirstErrFIeld == 'smNewProj')
                        {
                            FirstErrFIeld = 'smNewProj';
                        }
                        else if(FirstErrFIeld == 'smSelectProjects')
                        {
                            FirstErrFIeld = 'smSelectProjects';
                        }else if(FirstErrFIeld == 'cmNewProj')
                        {
                            FirstErrFIeld = 'cmNewProj';
                        }
                        else if(FirstErrFIeld == 'cmSelectProjects')
                        {
                            FirstErrFIeld = 'cmSelectProjects';
                        }
                        else if(FirstErrFIeld == 'telephoneNumber')
                        {
                            FirstErrFIeld = 'telephoneNumber';
                        }
                        else if(FirstErrFIeld == 'microsite')
                        {
                            FirstErrFIeld = 'microsite';
                        }
                        else if(FirstErrFIeld == 'logosel')
                        {
                            FirstErrFIeld = 'logosel';
                        }
                        else if(FirstErrFIeld == 'referenceCode')
                        {
                            FirstErrFIeld = 'referenceCode';
                        }
                        else if(FirstErrFIeld == 'locfilter_sel')
                        {
                            FirstErrFIeld = 'inpPrefLocContainerDD2';
                        }
                        else if(FirstErrFIeld == 'date')
                        {
                            FirstErrFIeld = 'date';
                        }
                        else if(FirstErrFIeld == 'walkinDate' || FirstErrFIeld == 'walkinTime')
                        {
                            FirstErrFIeld = 'collectresp';
                        }
                        else if(FirstErrFIeld == 'locality')
                        {
                            FirstErrFIeld = 'inpLocalitiesContainerDD2';
                        }
                        else if (FirstErrFIeld == 'inputVenue') {
                            FirstErrFIeld = 'inputVenue';
                        }
                        else if (FirstErrFIeld == 'inputVenueAdd') {
                            FirstErrFIeld = 'inputVenueAdd';
                        }

                    }

                    if(arrFlag)
                    {
                        for(var errCntr=0;errCntr<DivIdField.length;errCntr++)
                        {
                            if(document.getElementById(DivIdField[errCntr]).className.substr(0,8) == 'textarea')
                                document.getElementById(DivIdField[errCntr]).className ='textarea errfldd';
                            else if(document.getElementById(DivIdField[errCntr]).className.substr(0,10) == 'dropdownin')
                                document.getElementById(DivIdField[errCntr]).className ='dropdownin errfldd';
                            else
                                document.getElementById(DivIdField[errCntr]).className +=' errfldd';
                        }
                    }
                    else
                    {
                        if(document.getElementById(DivIdField).className.substr(0,8) == 'textarea')
                            document.getElementById(DivIdField).className ='textarea errfldd';
                        else if(document.getElementById(DivIdField).className.substr(0,10) == 'dropdownin')
                            document.getElementById(DivIdField).className ='dropdownin errfldd';
                        else
                            document.getElementById(DivIdField).className +=' errfldd';
                    }
                    document.getElementById(DivIdErr).innerHTML = msg;
                    document.getElementById(DivIdErr).className = 'error';

                    if(DivIdErr=='keyword_err'){
                        //document.getElementById(DivIdErr).className='error2';
                        $n('#tagCont').addClass('errfldd');
                        $n('#keyword').addClass('errfldd');
                    }
                    if(DivIdErr!='keyword_err'){
                        document.getElementById(DivIdErr).style.display = 'block';
                    }
                    if(document.getElementById('errLabelKeyword').style.display=='block'){
                        $n('#keyword_err').hide();
                    }
                }
                else
                {// Condition unsetting error.
                    document.getElementById(DivIdErr).style.display = 'none';
                    if(DivIdErr=='keyword_err'){
                        $n('#tagCont').removeClass('errfldd');
                        $n('#keyword').removeClass('errfldd');
                    }
                    if(arrFlag)
                    {
                        if(dirtyCollectResp != "offl")
                        {
                            for(var errCntr=0;errCntr<DivIdField.length;errCntr++)
                            {
                                if(document.getElementById(DivIdField[errCntr]).className.substr(0,8) == 'textarea')
                                    document.getElementById(DivIdField[errCntr]).className = 'textarea';
                                else if(document.getElementById(DivIdField[errCntr]).className.substr(0,10) == 'dropdownin')
                                    document.getElementById(DivIdField[errCntr]).className ='dropdownin';
                                else
                                {
                                    //    document.getElementById(DivIdField[errCntr]).className ='';
                                    var errregEx1 = new RegExp('errfldd', 'gi');
                                    var checkClass1 = document.getElementById(DivIdField).className;
                                    var getClass1 = checkClass1.replace(errregEx1, '');
                                    document.getElementById(DivIdField).className = getClass1;

                                }
                            }
                        }
                    }
                    else
                    {
                        if(document.getElementById(DivIdField).className.substr(0,8) == 'textarea')
                            document.getElementById(DivIdField).className = 'textarea';
                        else if(document.getElementById(DivIdField).className.substr(0,10) == 'dropdownin')
                            document.getElementById(DivIdField).className ='dropdownin';
                        else
                        {
                            var errregEx=new RegExp('errfldd', 'gi');
                            var checkClass=document.getElementById(DivIdField).className;
                            var getClass=checkClass.replace(errregEx, '');
                            document.getElementById(DivIdField).className =getClass;
                        }
                    }
                }
            }
            catch(e){ }
        }

    }

    if(ErrFlag == true)
    {
        try{

            var ErrMsgFinal = String('');
            ErrMsgFinal = 'There are '+ErrNoCnt+' error(s) in the form.<br> Please correct the information as per  instructions provided in RED and re-submit the page.';
            document.getElementById('global_errMsg').parentNode.style.display = 'block';
            document.getElementById('global_errMsg').innerHTML = ErrMsgFinal;

            if (document.getElementById('isJSEnabled')) {
                document.getElementById('isJSEnabled').value = 'no';
            }
            try{
                if(FirstErrFIeld != 'iddescription' && FirstErrFIeld != 'candidateProfile')
                {
                    if(document.getElementById(FirstErrFIeld))
                    {
                        document.getElementById(FirstErrFIeld).blur();
                        setTimeout('document.getElementById("'+FirstErrFIeld+'").focus()', 500);
                    }
                    if (FirstErrFIeld == "collectresp" || FirstErrFIeld=="website")
                    {
                        if (jpAppName == 'Online') {
                            document.getElementById('moreContOpt').style.display='block';
                            document.getElementById('moreOpt').className='minus';
                        }
                        ErrField = FirstErrFIeld + "_" + dirtyCollectResp;


                        document.getElementById(ErrField).blur();
                        document.getElementById(ErrField).focus();
                    }
                }
                else{
                    if(FirstErrFIeld == 'iddescription'){
                        document.getElementById('posOpen').blur();
                        document.getElementById('posOpen').focus();
                    }
                    else if(FirstErrFIeld == 'candidateProfile') {
                        document.getElementById('checkCandProf').blur();
                        document.getElementById('checkCandProf').focus();
                    }
                }
            }
            catch(e)
            {
                if(document.getElementById(FirstErrFIeld))
                {
                    document.getElementById(FirstErrFIeld).blur();
                    document.getElementById(FirstErrFIeld).focus();
                }
                if (FirstErrFIeld == "collectresp")
                {
                    ErrField = FirstErrFIeld + "_" + dirtyCollectResp;
                    document.getElementById(ErrField).blur();
                    document.getElementById(ErrField).focus();
                }
            }
            return false;
        }

        catch(e)
        {
            return false;
        }
    }
    else
    {
        try{
            ub.track("jpFormClick", {
                actionType: "click",
                recruiterId: getRecruiterId(),
                companyId: $("#id_companyId").val(),
                jobType: checkForInsta(),
                timespent: getTimeSpent(),
                status: "Post Job"
            });
        }catch(e){}

        try{
            document.getElementById('v_nscript').value=0;
            if(document.getElementById("error_msg_table"))
            {
                document.getElementById("error_msg_table").style.display = "none";
            }
            if(document.getElementById("error_msg_id"))
            {
                document.getElementById("error_msg_id").innerHTML = "";
            }
            if(showQuestionnaireLB(dirtyCollectResp)){
                modalwin('850','552','autoQuest', this);
                setTimeout(function(){document.getElementById('saveQuesAs').focus()},30);
                $n("#questwrap").html('');
                quest_start_time = new Date();
                try{
                    ub.track("questionnaireView", {
                        actionType: "view",
                        recruiterId: gnb_variables.userId,
                        companyId: companyId.value,
                        jobType: getParameterByName("subCategoryId")
                    });
                }catch(e){}
                generateQuestionnaire();
            }else{
                submitJPForm(subcat);
            }
        }
        catch(e)
        {
            if(showQuestionnaireLB(dirtyCollectResp)){
                modalwin('850','552','autoQuest', this);
                setTimeout(function(){document.getElementById('saveQuesAs').focus()},30);
                $n("#questwrap").html('');
                generateQuestionnaire();
            }else{
                submitJPForm(subcat);
            }
        }
    }

    return false;
}

function checkReplacePage()
{
    var errMsg = '';                  // master error message string

    try
    {
        try
        {
            document.getElementById('desig_err').innerHTML = "";
            document.getElementById('iddescription_err').innerHTML = "";
            document.getElementById('farea_err').innerHTML = "";
            document.getElementById('role_err').innerHTML = "";
            document.getElementById('indType_err').innerHTML = "";
            document.getElementById('keyword_err').innerHTML = "";
            document.getElementById('website_err').innerHTML = "";
            document.getElementById('referenceCode_err').innerHTML = "";
            document.getElementById('contactPerson_err').innerHTML = "";
            document.getElementById('address_err').innerHTML = "";
            document.getElementById('telephoneNumber_err').innerHTML = "";
            document.getElementById('template_err').innerHTML = "";
            document.getElementById('logosel').innerHTML = "";
            document.getElementById('emailFrom_err').innerHTML = "";
            document.getElementById('emailTo_err').innerHTML = "";
            document.getElementById('smNewProj_err').innerHTML = "";
            document.getElementById('smSelectProjects_err').innerHTML = "";
            document.getElementById('cmNewProj_err').innerHTML = "";
            document.getElementById('cmSelectProjects_err').innerHTML = "";
        }catch(e){}
        try
        {
            var farea = '';
            farea = document.getElementById("farea").options[document.getElementById("farea").selectedIndex].value;
            var minworkexp      = document.getElementById("MinimumExperience").value;        // min work exp dropdown
            errMsg += validateTopMgmt(farea, minworkexp);
        }
        catch(e){}
        try
        {
            var website             = document.getElementById("website").value;
            var deleteWebsite   = document.getElementById("deleteWebsite");

            if(website != '' && deleteWebsite.checked == true)
                errMsg += "website: You can not replace and delete website simultaneously.\n";
        }
        catch(e){}

        try
        {
            var referenceCode   = document.getElementById("referenceCode").value;
            var deleteRefCode   = document.getElementById("deleteRefCode");

            if(referenceCode != '' && deleteRefCode.checked == true)
                errMsg += "referenceCode: You can not replace and delete referenceCode simultaneously.\n";
        }
        catch(e){}

        try
        {
            var contname             = document.getElementById("contactPerson").value;     // name of contact person
            var deleteContPerson = document.getElementById("deleteContPerson");

            if(contname != '' && deleteContPerson.checked == true)
                errMsg += "contactPerson: You can not replace and delete contactPerson simultaneously.\n";
        }
        catch(e){}
        try
        {
            var displayCompName = document.getElementById("displayCompName").value;
            var deleteDispCompName = document.getElementById("deleteDispCompName");

            if(displayCompName.checked == true && deleteDispCompName.checked == true)
                errMsg += "dispCompName: You can not check both the check boxes simultaneously.\n";
        }
        catch(e){}
        try
        {
            var address = document.getElementById("address").value;       //telephone no
            var deleteAddress    = document.getElementById("deleteAddress");
            if((address != '' && address != -1 ) && deleteAddress.checked == true){
                errMsg += "Address: You can not replace and delete Address simultaneously.\n";
                document.getElementById('address_err').innerHTML = 'You can not replace and delete Address simultaneously.';
                document.getElementById('address_err').className = 'error';
            }
        }
        catch(e){}
        try
        {
            var contno = document.getElementById("telephoneNumber").value;       //telephone no
            var deleteTelNum    = document.getElementById("deleteTelNum");

            if(contno != '' && deleteTelNum.checked == true)
                errMsg += "telephoneNumbers: You can not replace and delete telephoneNumbers simultaneously.\n";
        }
        catch(e){}

        try
        {
            var logo = document.getElementById("logosel").options[document.getElementById("logosel").selectedIndex].value;
            var deleteLogo = document.getElementById("deleteLogo");


            if(logo != '' && logo != -1 && deleteLogo.checked == true)
                errMsg += "logo: You can not replace and delete logo simultaneously.\n";
        }
        catch(e){}
        try
        {
            var template = document.getElementById("templatesel").options[document.getElementById("templatesel").selectedIndex].value;
            var deleteTemplate = document.getElementById("deleteTemplate");

            if(template != '' && template != -1 && deleteTemplate.checked == true)
                errMsg += "template: You can not replace and delete template simultaneously.\n";

        }
        catch(e){}
        try
        {
            //email validation
            var emailFrom = document.getElementById("emailFrom").value;
            var emailTo = document.getElementById("emailTo").value;
            var emailDelete = document.getElementById("deleteEmail");
            var resultFrom = true;
            var fromEmailLength = false;
            var toEmailLength = false;
            if(emailFrom!=""){
                resultFrom = validateEmailAddr(emailFrom);
                if(resultFrom){
                    if(emailFrom.length > 50){
                        resultFrom = false;
                        fromEmailLength = true;
                    }
                }
            }


            var resultTo = true;
            if(emailTo!=""){
                resultTo = validateEmailAddr(emailTo);
                if(resultTo){
                    if(emailTo.length > 50){
                        resultTo = false;
                        toEmailLength = true;
                    }
                }
            }

            if(resultFrom == false){
                //add from email error
                if(fromEmailLength){
                    document.getElementById('email_err').innerHTML = 'From email address cannot be more than 50 characters.';
                } else {
                    document.getElementById('email_err').innerHTML = 'Please enter a valid From email.';
                }
                document.getElementById('email_err').className = 'error';
                document.getElementById("toEmail").style.paddingLeft = '0px'
                errMsg +="email: Please enter a valid From email.";
            }
            if(resultTo==false ){
                //add to email error
                if(toEmailLength){
                    document.getElementById('email_err').innerHTML = 'To email address cannot be more than 50 characters.';
                } else {
                    document.getElementById('email_err').innerHTML = 'Please enter a valid To email.';
                }
                document.getElementById('email_err').className = 'error';
                document.getElementById("toEmail").style.paddingLeft = '340px'
                errMsg +="email: Please enter a valid To email.";
            }
            if(emailFrom!=""){
                if(emailTo=="" && emailDelete.checked == false){
                    document.getElementById('email_err').innerHTML = 'Please enter To email.';
                    document.getElementById('email_err').className = 'error';
                    document.getElementById("toEmail").style.paddingLeft = '340px'
                    errMsg +="email: Please enter To email.";
                }

            }

            //   if(emailFrom=="" && (emailTo!="" || emailDelete.checked)){
            //       document.getElementById('email_err').innerHTML = 'Please enter From email.';
            //       document.getElementById('email_err').className = 'error';
            //       document.getElementById("toEmail").style.paddingLeft = '0px'
            //       errMsg +="email: Please enter From email.";
            //}
            //  if(emailFrom!="" && emailTo!=""){
            //     if(emailFrom == emailTo){
            //         document.getElementById('email_err').innerHTML = 'From and To emails cannot be same.';
            //         document.getElementById('email_err').className = 'error';
            //         document.getElementById("toEmail").style.paddingLeft = '340px'
            //         errMsg +="email: From and To emails cannot be same.";
            //     }
            // }


        }
        catch(e){}

    }
    catch(e){}

    if(errMsg.length > 0)
    {
        return false;
    }
    return true;
}
function markFieldReadonly(obj,field){
    if(obj.checked){
        field.value = "";
        field.readOnly = true;
    } else {
        field.value = "";
        field.readOnly = false;
    }
}

function checkNSplit(classes)
{
    var arrclass = classes.split(' '), cName = "";
    for(var i=0; i<arrclass.length; i++)
    {
        if(arrclass[i] != 'errfldd')
            cName += arrclass[i] + " ";
    }
    return cName;
}
function validateSaveNPostLater()
{
    var divElements = document.getElementsByTagName('div');
    for(i=0; i<divElements.length; i++)
    {
        if(divElements[i].className == 'error')
        {
            divElements[i].className = 'noerror';
            divElements[i].style.display = 'none';
        }
    }
    var inputElements = document.getElementsByTagName('input');
    for(i=0; i<inputElements.length; i++)
    {
        inputElements[i].className = checkNSplit(inputElements[i].className);
    }
    var selectElements = document.getElementsByTagName('select');
    for(i=0; i<selectElements.length; i++)
    {
        selectElements[i].className = checkNSplit(selectElements[i].className);
    }
    var textElements = document.getElementsByTagName('textarea');
    for(i=0; i<textElements.length; i++)
    {
        textElements[i].className = checkNSplit(textElements[i].className);
    }

    var ErrFlag = false;
    var ErrNoCnt = 0;
    var StrDivIndex = new String('');
    var IntIndexOfColon = new String('');
    try
    {
        var designation       = trim(document.getElementById("desig").value);
        if (FCKeditorAPI != undefined){
            var description =  getEditorHTML($editor);
            var profile   = getEditorHTML($editorCP);
        } else{
            var description = document.getElementById("iddescription").value;
            var profile     = document.getElementById("candidateProfile").value;
        }


        var ArrMsg            = new Array();
        ArrMsg[ArrMsg.length] = validateDesignation(designation);
        ArrMsg[ArrMsg.length] = validateJobDesc(description);
        ArrMsg[ArrMsg.length] = validateCandProf(profile);
    }
    catch(e){}

    if(ArrMsg && ArrMsg.length > 0)
    {
        var FirstErrFIeld = new String('');
        for( i=0; i<ArrMsg.length; i++ )
        {
            IntIndexOfColon = ArrMsg[i].indexOf(':');
            if(ArrMsg[i]!= '' && ArrMsg[i].indexOf(':') != -1)
            {
                StrDivIndex = trim(ArrMsg[i].substr(0,IntIndexOfColon));
                msg = ArrMsg[i].substr(IntIndexOfColon+1);
            }
            try
            {
                var DivIdErr = StrDivIndex+'_err';
                var DivIdField = '';
                var arrFlag = false;
                DivIdField = StrDivIndex;
                if(trim(msg) != '')
                {
                    ErrNoCnt = ErrNoCnt+1 ;
                    ErrFlag = true ;
                    if(FirstErrFIeld == '')
                    {
                        FirstErrFIeld = StrDivIndex;
                        if(FirstErrFIeld == 'desig')
                        {
                            FirstErrFIeld = 'desig';
                        }
                    }
                    if(arrFlag)
                    {
                        for(var errCntr=0;errCntr<DivIdField.length;errCntr++)
                        {
                            if(document.getElementById(DivIdField[errCntr]).className.substr(0,8) == 'textarea')
                                document.getElementById(DivIdField[errCntr]).className ='textarea errfldd';
                            else if(document.getElementById(DivIdField[errCntr]).className.substr(0,10) == 'dropdownin')
                                document.getElementById(DivIdField[errCntr]).className ='dropdownin errfldd';
                            else
                                document.getElementById(DivIdField[errCntr]).className +=' errfldd';
                        }
                    }
                    else
                    {
                        if(document.getElementById(DivIdField).className.substr(0,8) == 'textarea')
                            document.getElementById(DivIdField).className ='textarea errfldd';
                        else if(document.getElementById(DivIdField).className.substr(0,10) == 'dropdownin')
                            document.getElementById(DivIdField).className ='dropdownin errfldd';
                        else
                            document.getElementById(DivIdField).className ='errfldd';
                    }
                    document.getElementById(DivIdErr).innerHTML = msg;
                    document.getElementById(DivIdErr).className = 'error';
                    document.getElementById(DivIdErr).style.display = 'block';
                }
                else
                {// Condition unsetting error.
                    document.getElementById(DivIdErr).style.display = 'none';
                    if(arrFlag)
                    {
                        for(var errCntr=0;errCntr<DivIdField.length;errCntr++)
                        {
                            if(document.getElementById(DivIdField[errCntr]).className.substr(0,8) == 'textarea')
                                document.getElementById(DivIdField[errCntr]).className = 'textarea';
                            else if(document.getElementById(DivIdField[errCntr]).className.substr(0,10) == 'dropdownin')
                                document.getElementById(DivIdField[errCntr]).className ='dropdownin';
                            else
                                document.getElementById(DivIdField[errCntr]).className ='';
                        }
                    }
                    else
                    {
                        if(document.getElementById(DivIdField).className.substr(0,8) == 'textarea')
                            document.getElementById(DivIdField).className = 'textarea';
                        else if(document.getElementById(DivIdField).className.substr(0,10) == 'dropdownin')
                            document.getElementById(DivIdField).className ='dropdownin';
                        else
                            document.getElementById(DivIdField).className ='';
                    }
                }
            }
            catch(e){}

        }
    }
    if(ErrFlag == true)
    {
        try{
            var ErrMsgFinal = String('');
            ErrMsgFinal = 'There are '+ErrNoCnt+' error(s) in the form.<br> Please correct the information as per instructions provided in RED and re-submit the page.';
            document.getElementById('global_errMsg').parentNode.style.display = 'block';
            document.getElementById('global_errMsg').innerHTML = ErrMsgFinal;
            ErrMsgFinal = 'There are '+ErrNoCnt+' error(s) in the form.<br/>Please correct the information as per instructions provided in RED and re-submit the page.';

            try{
                if(FirstErrFIeld == 'candidateProfile') {
                    document.getElementById('checkCandProf').blur();
                    document.getElementById('checkCandProf').focus();
                }else{
                    document.getElementById('desig').blur();
                    document.getElementById('desig').focus();
                }
            }
            catch(e)
            {
                if(FirstErrFIeld == 'candidateProfile') {
                    document.getElementById('checkCandProf').blur();
                    document.getElementById('checkCandProf').focus();
                }else{
                    document.getElementById('desig').blur();
                    document.getElementById('desig').focus();
                }
            }
            return false;
        }

        catch(e)
        {
            return false;
        }
    }
    else
    {
        try
        {
            if(document.getElementById("error_msg_table"))
            {
                document.getElementById("error_msg_table").style.display = "none";
                document.getElementById("error_msg_id").innerHTML = "";
            }
            document.getElementById('global_errMsg').innerHTML = "";
            document.getElementById('global_errMsg').parentNode.style.display = 'none'
            return true;
        }
        catch(e)
        {return true;}
    }
    return false;
}
var responseErrFdID = new String('');
function validateDesignation(designation)
{
    var errorMsg = new String('');
    tempErr  = "";
    errCount = 0;
    designation=trim(designation);
    var tempErr  = String('');
    if(designation == "Use Complete words Eg: Type Senior Manager, not Sr. Mgr.") {
        designation = "";
    }
    if( designation.length == 0 ) // if designation is empty
    {
        tempErr += "Please enter a Job Title / Designation.<br />";
    }
    else if(designation.length  > 70)
    {
        errCount++;
        tempErr += "You have exceeded the maximum limit of 70 characters. <br />";
    }

    else // if designation is not empty
    {
        var firstchar = designation.charAt(0); // get the first character of designation specified

        if( firstchar == "." || ( firstchar >= "A" && firstchar <= "Z") || ( firstchar >= "a" && firstchar <= "z" ) || ( firstchar >= 0 && firstchar <= 9 ));
        else // first character is other than . and character
        {
            if( errCount > 0 )
                tempErr += "\t";
            tempErr += "This field should begin with a letter (A-Z) or a number (0-9) or a dot (.). <br />";
        }
        if(testHtmTag(designation, false) == true || testHtmlCommentTag(designation) == true)
        {
            tempErr += "HTML tags are not supported in this field.<br />";
            errCount++;
        }else{
            if(designation.match(/[0-9]/gi) && designation.match(/[0-9]/gi).length >= window["jobTitleCharLimit"])
            {
                tempErr += "You seemed to have typed Job Title which includes numbers. Correct the same and retry. In case you are trying to add mobile number, use ‘Contact Number‘ field. Contact Naukri support team for any queries.<br />";
                errCount++;
            }
        }
    }
    if(tempErr.length > 0)
    {
        errorMsg = "desig: "+tempErr;
    }
    else
    {
        errorMsg = 'desig:';
    }
    return errorMsg;
}
function validateJobDesc(description)
{
    var errorMsg = new String('');
    tempErr  = "";
    errCount = 0;
    var setErr = false;
    var tempErr  = String('');
    var tempDescription = new String("");
    tempDescription = description;
    tempDescription = tempDescription.replace(/\n/g," ");
    tempDescription = tempDescription.replace(/<br \/>/ig," ");
    tempDescription = trim(tempDescription);

    description = description.replace(/\r\n/g,"\n");
    var desclength = cleanupString(description);
    if(!description || description=="undefined" || tempDescription.length  == 0)
    {
        tempErr += "Please enter a valid Description. <br />";
    }
    else
    {
        var subCategoryId = document.getElementById('subCategoryId').value;
        if(subCategoryId == '2' && desclength  > 250)
        {
            errCount++;
            tempErr += "You have exceeded the maximum limit of 250 characters. Please edit the text and try again <br />";
        }
        if(testHtmTag(description, false) == true || testHtmlCommentTag(description) == true)
        {
            if(errCount > 0)
                tempErr += "\t";
            tempErr += "HTML tags are not supported in this field. <br />";
        }
        var tempArrStr = tempDescription.replace(/\s+/g," ").split(" "),
            errorWords = [];
        for(sCntr=0;sCntr<tempArrStr.length;sCntr++)
        {
            if(tempArrStr[sCntr].length > 32) {
                if (!setErr) {
                    errCount++;
                }
                setErr = true;
                errorWords.push(tempArrStr[sCntr]);
            }
        }
        if (setErr) {
            var errorWordsString = '( ';
            for (var i = 0; i < errorWords.length; i++) {
                if (i != errorWords.length - 1) {
                    errorWordsString += errorWords[i] + ', ';
                } else {
                    errorWordsString += errorWords[i] + ' ) ';
                }
            }
            tempErr += errorWordsString + "are words having more than 32 characters, Please insert spaces atleast after every 32 characters.";
        }
    }
    if(tempErr.length > 0)
    {
        errorMsg = "iddescription: "+tempErr;
    }
    else
    {
        errorMsg = 'iddescription:';
    }

    return errorMsg;
}

function validateFarea()
{
    var errorMsg = new String('');
    tempErrFunc  = "";
    tempErrRole  = "";
    errCount = 0;
    var tempErr  = String('');
    if( fAreaDD.selValue.length!=1 ||fAreaDD.selValue=='#' )
    {
        tempErr += "Please select a Functional Area from the list. <br />";
        errCount++;
    }
    if( tempErr.length > 0 )
    {
        errorMsg = "farea: "+tempErr;
    }
    else
    {
        errorMsg = 'farea:';
    }

    return errorMsg;
}

function validateRole()
{
    var errorMsg = new String('');
    var tempErr  = "";
    var errCount = 0;
    var tempErr  = String('');
    //if(role == '' || role == -1 || role == -2)
    if(fAreaDD.selValue.length==1){
        if(roleDD.selValue.length!=1){
            tempErr += "Please select a Role from the list. <br />";
            errCount++;
        }
    }

    if( tempErr.length > 0 )
    {
        errorMsg = "role: "+tempErr;
    }
    else
    {
        errorMsg = 'role:';
    }
    return errorMsg;
}

function validateIndustry()
{
    var errorMsg = new String('');
    tempErr  = "";
    errCount = 0;
    var tempErr  = String('');
    // if( industry == '' || industry == -1 )
    if(indDD.selValue.length!=1 || indDD.selValue=='#')
    {
        tempErr += "Please select an Industry from the list. <br />";
        errCount++;
    }
    if( tempErr.length > 0 )
    {
        errorMsg= "indType: "+tempErr;
    }
    else
    {
        errorMsg = 'indType:';
    }
    return errorMsg;

}

function validateTotalRefreshCredit() {
    document.getElementById('stDate_err').style.display='none';
    var errorMsg = String('');
    tempErr  = "";
    errCount = 0;
    var tempErr  = String('');
    var totalRefCreditUsed = document.getElementById('total_credit_span').innerHTML;
    var toalCredit = document.getElementById('jobQtyLeft').value;
    if (parseInt(totalRefCreditUsed) > parseInt(toalCredit)) {
        tempErr+='You do not have sufficient credits in your account. Choose Refresh frequency accordingly.';
    }
    if( tempErr.length > 0 )
    {
        errorMsg= "creditDate: " + tempErr;
    }
    else
    {
        errorMsg = 'creditDate:';
    }
    return errorMsg;
}

function validateRefreshStartDate(stDate)
{
    document.getElementById('stDate_err').style.display='none';
    var errorMsg = String('');
    tempErr  = "";
    errCount = 0;
    var tempErr  = String('');
    if (stDate=='')
    {
        document.getElementById('stDate_err').style.display='block';
        tempErr += "This field can not be left blank. <br />";
    }
    else
    {
        stDate = document.getElementById('stDate').value;
        stYear = stDate.substring(0,4);
        stMonth = stDate.slice(5,7);
        stMonth = (stMonth-1);
        stDay = stDate.slice(8,10);
        next_date = new Date(stYear,stMonth,stDay,0,0,0);
        tdyDate = new Date();
        jobEndDate = document.getElementById('jobEndDate').value;
        if (next_date.getTime()<=tdyDate.getTime())
        {
            document.getElementById('stDate_err').style.display='block';
            tempErr += "The Start/Next Refresh date should be after current date. Please select a valid date";
        }
        else if(jobEndDate<(next_date.getTime()/1000))
        {
            document.getElementById('stDate_err').style.display='block';
            //tempErr += "The Start/Next Refresh date should not exceed the permissible limits. Please select a valid date.";
            // Fix for bug id 38502 -- Change in the error message
            tempErr += "This date should not exceed the expiry date of the job. Please select a valid date.";
        }
    }

    if( tempErr.length > 0 )
    {
        errorMsg= "stDate: " + tempErr;
    }
    else
    {
        errorMsg = 'stDate:';
    }
    return errorMsg;
}
function validateRefreshDate(endOnDate,radEndOnDate)
{
    document.getElementById('date_err').style.display='none';
    var errorMsg = String('');
    tempErr  = "";
    errCount = 0;
    var tempErr  = String('');
    if(endOnDate.length == 0 && radEndOnDate.checked == true)
    {
        document.getElementById('date_err').style.display='block';
        tempErr += "This field cannot be left blank. <br />";
    }

    else if (endOnDate.length!=0 && radEndOnDate.checked == true)
    {
        if( document.getElementById('date').value)
        {
            /*
             var target_week_day = document.getElementById('every').value;
             var today = new Date();
             var day = today.getDate();
             var month = today.getMonth()+1;//January is 0!
             var year = today.getFullYear();
             if(document.getElementById("refreshPattern").value != "Monthly")
             {
             var week_day = today.getDay();
             week_day =parseInt(week_day);
             if (week_day == 0)
             week_day = 7;
             target_week_day = parseInt(target_week_day);
             if(week_day <= target_week_day)
             {
             var days_left = target_week_day - week_day;
             }
             else
             {
             var days_left = 7 - (week_day - target_week_day);
             }
             days_left = parseInt(days_left);
             var next_date= new Date(year,month-1,day+days_left,0,0,0);

             var yy_next=next_date.getFullYear();
             var month_next = next_date.getMonth()+1;
             var day_next = next_date.getDate();
             if ((yy_next == year) && (month_next == month) && (day == day_next))
             {
             next_date = new Date(year,month-1,day+days_left+7,0,0,0);
             }
             }
             else
             {
             next_date = new Date(year,month-1,day+30,0,0,0);
             }
             */
            stDate = document.getElementById('stDate').value;
            stYear = stDate.substring(0,4);
            stMonth = stDate.slice(5,7);
            stMonth = (stMonth-1);
            stDay = stDate.slice(8,10);
            next_date = new Date(stYear,stMonth,stDay,0,0,0);

            endDate = document.getElementById('date').value;
            endYear = endDate.substring(0,4);
            endMonth = endDate.slice(5,7);
            endMonth = (endMonth-1);
            endDay = endDate.slice(8,10);
            endDate = new Date(endYear,endMonth,endDay,0,0,0);
            if (next_date.getTime()>endDate.getTime())
            {
                document.getElementById('date_err').style.display='block';
                tempErr += "End date cannot be before the Start Date. Please select a valid date. <br />";
            }
        }
    }
    document.getElementById("endOnDate").value=endOnDate;
    if( tempErr.length > 0 )
    {
        errorMsg= "date: " + tempErr;
    }
    else
    {
        errorMsg = 'date:';
    }
    return errorMsg;
}
function validateKeywords(keywords)
{
    var setErr = false;
    var errorMsg = String('');
    tempErr  = "";
    errCount = 0;
    var tempErr  = String('');
    keywords = trim(keywords);
    var tempKeyword = new String("");
    if(keywords == "Use Complete words. Eg: Type Customer Executive, not Cust. Exec." ) {
        keywords = "";
    }
    tempKeyword = keywords;
    tempKeyword = tempKeyword.replace(/\r\n/gi,"");
    tempKeyword = tempKeyword.replace(/<br \/>/ig,"");
    tempKeyword = trim(tempKeyword);
    inpVal=$n('#keyword').val();
    if( tempKeyword.length == 0 && inpVal.length==0)
    {
        tempErr += "Please enter some keywords for this job. <br />";
    }
    else
    {
        if(testHtmTag(keywords, false) == true || testHtmlCommentTag(keywords) == true)
        {
            tempErr += "HTML tags are not supported in this field. <br />";
            errCount++;
        }
        if( keywords.length > 250 )
        {
            if( errCount > 0 )
                tempErr += "\t";
            tempErr += "You have exceeded the maximum limit of 250 characters. <br />";
        }

        var regEx = /[;$^?*()|\\@'<>%!="{}\[\]~`:]/; //invalid characters
        inpValue=($n('#keyword').val());
        inpValArr =inpValue.split(",");

        if($n('#tagValArr')){
            tagInpStr=$n('#tagValArr').val();
            tagInpArr=tagInpStr.split(",");
        }

        if(regEx.test(inpValue) == true){
            tempErr +=""
            $n('#errLabelKeyword').hide();
            errCount++;
        }

        for(var i=0;i<tagInpArr.length;i++){
            var check=0;
            for(var j=0; j<inpValArr.length; j++){
                if($n.trim(tagInpArr[i])==$n.trim((inpValArr[j])) && $n.trim(tagInpArr[i])!=''){
                    tempErr +="";
                    $n('#errLabelKeyword').hide();
                    errCount++;
                    check=1;
                    break;
                }
            }
            if(check==1){
                break;
            }
        }
    }
    var tempArrStr = keywords.replace(/\s+/g," ").split(",");
    for(sCntr=0;sCntr<tempArrStr.length;sCntr++)
    {
        var tempArr=tempArrStr[sCntr].split(" ");
        for(i=0;i<tempArr.length;i++){
            if(tempArr[i].length > 32 && !setErr)
            {
                setErr = true;
                errCount++;
                tempErr +="Please insert spaces atleast after every 32 characters.";
                continue;
            }
        }
    }
    if( tempErr.length > 0 )
    {
        errorMsg= "keyword: " + tempErr;
    }
    else
    {
        var keyString=$n('#keyword').val();
        var x=[];
        keyArr=keyString.split(",");
        for(var i=0;i<keyArr.length;i++){
            x[i]=" "+keyArr[i]+" ";
        }
        keyString=x.toString();
        if(keyString.replace(/^\s+|\s+$/g,"")!=''){
            var str=$n('#tagValArr').val()+ ","+keyString;
            $n('#tagValArr').val(str)
        }
        errorMsg = 'keyword:';
    }
    return errorMsg;
}

function validateNormalKeywords(keywords){
    var setErr = false;
    var errorMsg = String('');
    tempErr  = "";
    errCount = 0;
    var tempErr  = String('');
    keywords = trim(keywords);
    var tempKeyword = new String("");
    if(keywords == "Use Complete words. Eg: Type Customer Executive, not Cust. Exec.") {
        keywords = "";
    }
    tempKeyword = keywords;
    tempKeyword = tempKeyword.replace(/\r\n/gi,"");
    tempKeyword = tempKeyword.replace(/<br \/>/ig,"");
    tempKeyword = trim(tempKeyword);
    if( tempKeyword.length == 0)
    {
        tempErr += "Please enter some keywords for this job. <br />";
    }
    else
    {
        if(testHtmTag(keywords, false) == true || testHtmlCommentTag(keywords) == true)
        {
            tempErr += "HTML tags are not supported in this field. <br />";
            errCount++;
        }
        if( keywords.length > 250 )
        {
            if( errCount > 0 )
                tempErr += "\t";
            tempErr += "You have exceeded the maximum limit of 250 characters. <br />";
        }
    }
    var tempArrStr = keywords.replace(/\s+/g," ").split(",");
    for(sCntr=0;sCntr<tempArrStr.length;sCntr++)
    {
        var tempArr=tempArrStr[sCntr].split(" ");
        for(i=0;i<tempArr.length;i++){
            if(tempArr[i].length > 32 && !setErr)
            {
                setErr = true;
                errCount++;
                tempErr +="Please insert spaces atleast after every 32 characters.";
                continue;
            }
        }
    }


    if( tempErr.length > 0 )
    {
        errorMsg= "keyword: " + tempErr;
    }
    else
    {
        errorMsg = 'keyword:';
    }
    return errorMsg;
}


function validateCompensation(currency, mincompensation,maxcompensation){
    var errorMsg = new String('');
    tempErr  = "";
    errCount = 0;
    var tempErr  = String('');
    var allnumeric = false;
    if(currency == -1)
    {
        tempErr += "Please specify a valid compensation. <br />";
        errCount++;
    }
    else
    {
        if(trim(mincompensation).length == 0 && trim(maxcompensation).length == 0 )
        {
            tempErr += "Please specify a valid numeric range. <br />";
            errCount++;
        }
        else
        {
            for( i=0; i<mincompensation.length; i++ )
            {
                if( mincompensation.charAt(i) < "0" || mincompensation.charAt(i) > "9" )
                {
                    tempErr += "Please select a minimum salary for this job. <br />";
                    allnumeric = false;
                    errCount++;
                    break;
                }
                else
                    allnumeric = true;
            }
            if(allnumeric == true)
            {
                for( i=0; i<maxcompensation.length; i++ )
                {
                    if( maxcompensation.charAt(i) < "0" || maxcompensation.charAt(i) > "9" )
                    {
                        if( errCount > 0 );
                        else
                            tempErr += "Please select a maximum salary for this job. <br />";
                        errCount++;
                        allnumeric = false;
                        break;
                    }
                    else
                        allnumeric = true;
                }
            }
            if(allnumeric == true )//&& mincompensation.length == maxcompensation.length)
            {

                if( parseInt(mincompensation) > parseInt(maxcompensation) )
                    tempErr += "The minimum (From) value cannot be greater than maximum (To) value. <br />";
            }
            if( mincompensation.length == 0 ||  maxcompensation.length == 0 )
            {
                if( errCount > 0 )
                    tempErr = "\t" + tempErr;
                tempErr = "Please specify a valid numeric range. <br />" + tempErr;
            }

        }
    }
    if( tempErr.length > 0 )
    {
        errorMsg= "currency: "+tempErr;
    }
    else
    {
        errorMsg = 'currency:';
    }
    return errorMsg;
}
function isInteger1(x) {
    var y=parseInt(x);
    if (isNaN(y)) return false;
    return x==y && x.toString()==y.toString();
}
// ark007

function validatePosOpen(pos)
{
    var errorMsg = String('');
    tempErr  = "";
    errCount = 0;
    tempErr  = "";
    if(pos.length > 0 )
    {
        pos = pos * 1;
        if(!(pos>0 && pos <9999 && isInteger1(pos)))
        {
            errCount++;
            tempErr += "Please enter a valid value .";
        }
    }
    else if (pos.length == 0)
    {
        // do nothing
    }
    else
    {
        tempErr += "This field cannot be left blank.<br />";
    }
    if( tempErr.length > 0 )
    {
        errorMsg= "posOpen: "+tempErr;
    }
    else
    {
        errorMsg = 'posOpen:';
    }
    return errorMsg;
}

//ark007 ends
function validateSalaryDetails(additionaldata)
{
    var errorMsg = String('');
    tempErr  = "";
    errCount = 0;
    tempErr  = "";
    additionaldata = trim(additionaldata);
    var lenghtSalDet = cleanupString(additionaldata);
    if( lenghtSalDet > 0 && lenghtSalDet > 250)
    {
        tempErr += "You have exceeded the maximum limit of 250 characters. <br />";
    }

    if(testHtmTag(additionaldata, false) == true || testHtmlCommentTag(additionaldata) == true)
    {
        errCount++;
        tempErr += "HTML tags are not supported in this field. <br />";
    }
    if( tempErr.length > 0 )
    {
        errorMsg= "otherDetails: "+tempErr;
    }
    else
    {
        errorMsg = 'otherDetails:';
    }
    return errorMsg;
}
function validateJobLoc()
{
    var errorMsg = new String('');
    var tempErr = "";
    var errCount = 0;
    var LocCount = 0;
    var jobQtyLeft = document.getElementById('jobQtyLeft').value != '' ? parseInt(document.getElementById('jobQtyLeft').value) : 0;
    var jobCount = parseInt(document.getElementById('addjob_count').value);
    var locErrorCnt=0;
    //var commonCities=intersection(cusNew2.selValue,other_city,1);
    //var uncommonCities=intersection(cusNew2.selValue,other_city,0);
    //var commonCountries=intersection(intLoc.selValue,other_country,1);
    //var uncommonCountries=intersection(intLoc.selValue,other_country,0);
    LocCount=document.getElementById("naukContainerSelector2").getElementsByTagName("span").length;
    if(LocCount <= 0)
    {
        if(locErrorCnt==0)
        {
            locErrorCnt++;
            tempErr += "Please select atleast one Location from the list. <br />";
        }
    }
    else if(LocCount > 9)
    {
        tempErr += "You cannot select more than 9 locations.  <br />";
        errCount++;
    }
    else if(jobCount > 0 && jobCount > jobQtyLeft && subcat != 3)
    {
        tempErr += "You have insufficient number of Job Posting credits left to carry out this operation. Please reduce number of locations or buy more Job Postings. <br />";
        errCount++;
    }

    else if(document.getElementById('CityStrSpan').style.display == 'block' && other_city.length <= 0){

        tempErr +="Please enter the national location in the text box. ";
        errCount++;
    }

    else if(document.getElementById('OtherCountrySpan').style.display == 'block' && other_country.length<=0){
        tempErr += "Please enter the international location in the text box. "
        errCount++;
    }


    if( tempErr.length > 0 )
    {

        errorMsg= "location: "+tempErr;


    }
    else
    {
        errorMsg = 'location:';
    }
    return errorMsg;
}
function validateCandProf(profile)
{
    var errorMsg = String('');
    var tempErr  = "";
    errCount = 0;
    var setErr = false;
    var tempErr  = String('');
    var tempProfile = new String("");
    tempProfile = profile;
    tempProfile = tempProfile.replace(/\n/g," ");
    tempProfile = tempProfile.replace(/<br \/>/ig," ");
    tempProfile = trim(tempProfile);


    profile = profile.replace(/\r\n/g,"\n");
    var lengthprof = cleanupString(profile);

    /* if(tempProfile.length == 0)
     {
     tempErr += "Please enter the profile of the candidate best suited for this job. <br />";
     }*/
    //else
    // {
    var subCategoryId = document.getElementById('subCategoryId').value;
    if(subCategoryId == '2' && lengthprof > 250)
    {
        errCount++;
        tempErr += "You have exceeded the maximum limit of 250 characters. <br />";
    }
    else if(testHtmTag(profile,false) == true || testHtmlCommentTag(profile) == true)
    {
        if(errCount > 0)
            tempErr += "\t";
        tempErr += "HTML tags are not supported in this field. <br />";
    }
    var tempArrStr = tempProfile.replace(/\s+/g," ").split(" ");
    for(sCntr=0;sCntr<tempArrStr.length;sCntr++)
    {
        if(tempArrStr[sCntr].length > 32 && !setErr)
        {
            setErr = true;
            errCount++;
            tempErr +="Please insert spaces atleast after every 32 characters.";
            continue;
        }
    }
    //}
    if(tempErr.length > 0 )
    {
        errorMsg= "candidateProfile: "+tempErr;
        if(jpAppName == "Online"){
            document.getElementById('profileCont').style.display='block';
            document.getElementById('checkCandProf').checked="checked" ;
        }
    }
    else
    {
        //if(jpAppName == "Online"){
        //document.getElementById('profileCont').style.display='none';
        //document.getElementById('checkCandProf').checked=false ;
        //}
        errorMsg = 'candidateProfile:';
    }
    return errorMsg;
}

function validateExperience(minworkexp,maxworkexp)
{
    var errorMsg = String('');
    tempErr  = "";
    errCount = 0;

    if(( minworkexp =='' || minworkexp == -1) && ( maxworkexp == '' || maxworkexp == -1 ) )
    {

        tempErr += "Please specify the experience range for this job. <br />";
        errCount++;;
    }
    else
    {
        if( minworkexp == '' || minworkexp == -1)
        {
            tempErr += "Please specify the experience range for this job. <br />";
            errCount++;
        }
        else if( maxworkexp == '' || maxworkexp == -1 )
        {
            if( errCount > 0 )
                tempErr += "\t";
            tempErr += "Please specify the experience range for this job. <br />";
            errCount++;
        }
        if(minworkexp > -1 && maxworkexp > -1 && parseInt(minworkexp) > parseInt(maxworkexp))
        {
            if( errCount == 0) {
                tempErr += "Minimum work experience cannot be greater than maximum work experience. <br />";
                errCount++;
            }
        }
    }
    if(tempErr.length > 0)
    {
        errorMsg= "experience: " + tempErr;
    }
    else
    {
        errorMsg = 'experience:';
    }
    return errorMsg;
}

function validateTopMgmt(farea, minexp)
{
    var errorMsg = String('');

    if(farea == '39' && minexp < 7)
        tempErr += "Minimum Experience for Top Management Job must be greater than equal to 7 years. Please specify the Experience range again.";

    if(tempErr.length > 0)
    {
        errorMsg= "experience: " + tempErr;
    }
    else
    {
        errorMsg = 'experience:';
    }
    return errorMsg;
}

function validateUGCourse()
{
    var errorMsg = String('');
    tempErr  = "";
    errCount = 0;
    tempErr  = "";
    j = 0;
    var ugcid = new Array();                // array to hold ug courses
    var ugcindex = new Array();             // array to hold indexes of selected courses
    var ugcerrstr = new String("");         // string to hold courses for which spec have not been selected
    var ugscount = 0;                       // count of ug specializations selected
    var anyugflag = false;                  // flag to mark if any / not reqd. has been selected
    /*for( i=0; i<ugcourse.length; i++ )      // loop over the course dropdown
     {
     if(ugcourse[i].selected == true && ugcourse[i].value != -1)
     {       // if selected and is a selectable item
     ugcid[j] = ugcourse[i].value;
     ugcindex[j] = i;
     j++;
     }
     }*/


    if(isPV != "1"){
        if(ugDD.selValue.length == 0)           // if no course has been selected
        {
            tempErr += "Please select at least 1 value from the list. <br />";
            errCount++;
        }if(tempErr.length > 0 )
        {
            errorMsg= "ug: "+ tempErr;
        }
        else
        {
            errorMsg = 'ug:';
        }
    }
    else{
        if(gbi("premTech").checked){
            if(typeof ugDD2 != "undefined" && ugDD2.selValue.length == 0){
                tempErr += "Please select at least 1 value from the list. <br />";
                errCount++;
            }
            if(tempErr.length > 0 )
            {
                errorMsg= "ug2: "+ tempErr;
            }
            else
            {
                errorMsg = 'ug2:';
            }
        }


    }
    return errorMsg;

}

function validatePGCourse(pgcourse,pgs)
{
    var errorMsg = String('');
    tempErr  = "";
    errCount = 0;
    var j = 0;
    var pgcid = new Array();
    var pgcindex = new Array();
    var pgcerrstr = new String("");
    var pgscount = 0;
    var anypgflag = false;

    /*for( i=0; i<pgcourse.length; i++ )
     {
     if(pgcourse[i].selected == true && pgcourse[i].value != -1)
     {
     pgcid[j] = pgcourse[i].value;
     pgcindex[j] = i;
     j++;
     }
     }*/
    if(isPV !="1"){
        if(pgDD.selValue.length ==0)
        {
            tempErr += "Please select at least 1 value from the list. <br />";
            errCount++;
        }
        if(tempErr.length > 0 )
        {
            errorMsg= "pg: "+ tempErr;
        }
        else
        {
            errorMsg = 'pg:';
        }
    }
    else{
        if(gbi("premMBA").checked){
            if(typeof pgDD2 != "undefined" && pgDD2.selValue.length == 0){
                tempErr += "Please select at least 1 value from the list. <br />";
                errCount++;
            }
            if(tempErr.length > 0 )
            {
                errorMsg= "pg2: "+ tempErr;
            }
            else
            {
                errorMsg = 'pg2:';
            }
        }
    }

    return errorMsg;

}

function validateDoctorateCourse(pgcourse,pgs)
{
    var errorMsg = String('');
    tempErr  = "";
    errCount = 0;
    var j = 0;
    var pgcid = new Array();
    var pgcindex = new Array();
    var pgcerrstr = new String("");
    var pgscount = 0;
    var anypgflag = false;

    if(ppgDD.selValue.length ==0)
    {
        tempErr += "Please select at least 1 value from the list. <br />";
        errCount++;
    }
    if(tempErr.length > 0 )
    {
        errorMsg= "doctorate: "+ tempErr;
    }
    else
    {
        errorMsg = 'doctorate:';
    }

    return errorMsg;

}
function validateHiringFor(hiringFor,label) {
    errCount = 0;
    tempErr = "";
    var errorMsg = '';
    hiringFor = trim(hiringFor);
    var tempCompName = new String("");
    temphiringFor = hiringFor;
    temphiringFor = temphiringFor.replace(/\n/gi,"");
    temphiringFor = temphiringFor.replace(/\n/gi,"");
    temphiringFor = temphiringFor.replace(/<br \/>/ig,"");
    temphiringFor = trim(temphiringFor);
    if(hiringFor.match(/[0-9]/gi) && hiringFor.match(/[0-9]/gi).length >= window["compCharLimit"] && isConsultant) {
        tempErr += "You seemed to have typed incorrect 'Hiring For'. Correct the same and retry. Contact support in case of issues. <br />";
        errCount++;
    }
    if(tempErr.length > 0 )
    {
        errorMsg = label+": "+tempErr;
    }
    else
    {
        errorMsg = label+':';
    }
    return errorMsg;
}

function validateCompName(compname,label)
{
    errCount = 0;
    tempErr = "";
    var errorMsg = '';
    compname = trim(compname);
    var tempCompName = new String("");
    tempCompName = compname;
    tempCompName = tempCompName.replace(/\n/gi,"");
    tempCompName = tempCompName.replace(/\n/gi,"");
    tempCompName = tempCompName.replace(/<br \/>/ig,"");
    tempCompName = trim(tempCompName);

    if(tempCompName.length == 0)  // if company name is blank
    {
        tempErr += "This field cannot be left blank. <br />";
    }
    else
    {
        if(testHtmTag(compname, false) == true || testHtmlCommentTag(compname) == true)
        {
            tempErr += "HTML tags are not supported in this field. <br />";
            errCount++;
        }
        if(compname.length > 80)
        {
            if( errCount > 0 )
                tempErr += "\t";
            tempErr += "You have exceeded the maximum limit of 80 characters. <br />";
            errCount++;
        }
        if(compname.match(/[0-9]/gi) && compname.match(/[0-9]/gi).length >= window["compCharLimit"] && !(window["isConsultant"])) {
            tempErr += "You seemed to have typed incorrect company name. Correct the same and retry. Contact support in case of issues. <br />";
            errCount++;
        }
    }
    if(tempErr.length > 0 )
    {
        errorMsg = label+": "+tempErr;
    }
    else
    {
        errorMsg = label+':';
    }

    return errorMsg;
}

function html_entity_decode(str) {
    try {
        var tarea=document.createElement('textarea');
        tarea.innerHTML = str;return tarea.value;
        tarea.parentNode.removeChild(tarea);
    } catch(e) {
        try {
            var darea = document.createElement('div');
            darea.innerHTML="";
            darea.innerHTML = "<textarea id='htmlconverter'>"+str+"</textarea>";
            var content = darea.firstChild.value;
            darea.parentNode.removeChild(darea);
            return content;
        }catch(e) {}
    }
}

function validateComProfile(comprof)
{
    if(FCKeditorAPI == undefined)
        comprof = html_entity_decode(comprof);
    var errorMsg = new String('');
    tempErr  = "";
    errCount = 0;
    var setErr = false;
    var tempErr = String("");
    var tempComprof = new String("");
    tempComprof = comprof;
    tempComprof =  tempComprof.replace(/\n/g," ");
    tempComprof =  tempComprof.replace(/<br \/>/ig," ");
    tempComprof =  trim(tempComprof);

    comprof = comprof.replace(/\r\n/g,"\n");
    var comproflength = cleanupString(comprof);

    if(tempComprof.length == 0 || tempComprof=="Enter details about your company and/or the company you are hiring for")     // if profile is left blank
    {
        tempErr += "This field cannot be left blank. <br />";
    }
    else
    {
        var subCategoryId = document.getElementById('subCategoryId').value;
        if(subCategoryId == 2 && comproflength > 250 ) // if job category is classified and profile length greater than 250
        {
            errCount++;
            tempErr += "You have exceeded the maximum limit of 250 characters. <br />";
        }

        if(testHtmTag(comprof, false) == true || testHtmlCommentTag(comprof) == true)
        {
            if(errCount > 0)
                tempErr +="\t";
            tempErr += "HTML tags are not supported in this field. <br />";
        }
        var tempArrStr = tempComprof.replace(/\s+/g," ").split(" ");
        for(sCntr=0;sCntr<tempArrStr.length;sCntr++)
        {
            if(tempArrStr[sCntr].length > 32 && !setErr)
            {
                setErr = true;
                errCount++;
                tempErr +="Please insert spaces atleast after every 32 characters.";
                continue;
            }
        }
    }
    if(tempErr.length  > 0)
    {
        errorMsg= "companyProfile: "+tempErr;
    }
    else
    {
        errorMsg = 'companyProfile:';
    }
    return errorMsg;
}


//OFFLINE PHASE II starts
function validateWeb(website)
{
    if(website) {
        errormessage = validateWebsite(website);
        errormessage = errormessage.replace(/<br\s*[\/]?>/gi, "\n");
        if(errormessage != 'website:') {
            alert(errormessage);
            return false;
        }
    }
}
//OFFLINE PHASE II ends

function validateWebsite(website)
{
    var errorMsg = '';
    errCount = 0;
    tempErr = "";
    singleQuote="\'";
    doubleQuote="\"";
    website = trim(website);
    var lenghtWebsite= cleanupString(website);
    if(website.indexOf(singleQuote)!=-1 || website.indexOf(doubleQuote)!=-1 )
    {
        tempErr +="Single/Double quotes are not supported in this field.<br /> ";
        errCount++;
    }
    if( lenghtWebsite > 0 && lenghtWebsite > 75)
    {
        tempErr += "You have exceeded the maximum limit of 75 characters. <br />";
        errCount++;
    }
    if(testHtmTag(website, false) == true || testHtmlCommentTag(website) == true)
    {
        tempErr += "HTML tags are not supported in this field. <br />";
    }
    if(lenghtWebsite > 0 && website.substr(0,7) != "http://" && website.substr(0,8) != "https://")
    {
        tempErr += "Please prefix http:// or https:// to the URL. <br />";
    }
    if(tempErr.length > 0)
    {
        errorMsg= "website: "+tempErr;
    }
    else
    {
        errorMsg = 'website:';
    }
    if(errorMsg!="website:"){
        if (jpAppName == 'Online') {
            document.getElementById('moreContOpt').style.display='block';
            document.getElementById('moreOpt').className='minus';
        }
    }

    return errorMsg;
}

function validateContName(contname)
{
    var errorMsg = '';
    errCount = 0;
    tempErr = "";
    contname = trim(contname);
    var lenghtContName = cleanupString(contname);
    if(lenghtContName > 0 && lenghtContName > 35)
    {
        tempErr += "You have exceeded the maximum limit of 35 characters. <br />";
        errCount++;
    }
    if(testHtmTag(contname, false) == true || testHtmlCommentTag(contname) == true)
    {
        tempErr += "HTML tags are not supported in this field. <br />";
    }

    if(tempErr.length > 0)
    {
        errorMsg= "contactPerson: "+tempErr;
    }
    else
    {
        errorMsg = 'contactPerson:';
    }
    if(errorMsg != 'contactPerson:')  {
        if (jpAppName == 'Online') {
            document.getElementById('moreContOpt').style.display='block';
            document.getElementById('moreOpt').className='minus';
        }

    }
    return errorMsg;

}

function validateContNo(contno, checkflag)
{
    var errorMsg = '';
    tempErr = "";
    errCount = 0;
    contno = trim(contno);
    var lengthContNo = cleanupString(contno);
    try
    {
        var expression;
        if (checkflag == false)
        {
            expression = "^[0-9\-,+]*$";
        }
        else
        {
            expression = "^[0-9\-]*$";
        }
        expressionReg = new RegExp(expression);
        if (!expressionReg.test(contno))
        {
            tempErr += "Please specify a valid contact number. <br />";
            errCount++;
        }
        if(lengthContNo > 0 && lengthContNo > 40)
        {
            tempErr += "You have exceeded the maximum limit of 40 characters. <br />";
            errCount++;
        }
        if(testHtmTag(contno, false) == true || testHtmlCommentTag(contno) == true)
        {
            tempErr += "HTML tags are not supported in this field. <br />";
        }

        if(tempErr.length > 0)
        {
            errorMsg= "telephoneNumber:"+tempErr;
        }
        else
        {
            errorMsg = 'telephoneNumber:';
        }
        if(errorMsg != 'telephoneNumber:') {
            if (jpAppName == 'Online') {
                document.getElementById('moreContOpt').style.display='block';
                document.getElementById('moreOpt').className='minus';
            }

        }

        return errorMsg;
    }
    catch(e){}
}
function validateMicrosite(microsite)
{
    var errorMsg = new String('');
    var tempErr = "";
    var errCount = 0;
    var micrositeCount = 0;

    for(i=0; i<microsite.length; i++)
    {
        if(microsite[i].selected==true && microsite[i].value != -1)
        {
            micrositeCount++;
        }
    }

    var tempErr  = String('');
    if(micrositeCount == 0) {
        tempErr += "Please select atleast one option from the list. <br />";
    }

    if( tempErr.length > 0 )
    {
        errorMsg= "microsite:"+tempErr;
    }
    else
    {
        errorMsg = 'microsite:';
    }

    return errorMsg;
}

function validatePremiumJob(){
    var anyChcked = $n("#premTech").currObj().checked || $n("#premMBA").currObj().checked,
        bothChckd = $n("#premTech").currObj().checked && $n("#premMBA").currObj().checked,
        bothUnchcked = !$n("#premTech").currObj().checked && !$n("#premMBA").currObj().checked;
    var errorMsg='';
    if(bothChckd){
        if(!ugDD2.selValue.length){
            errorMsg = "ug2: Please select atleast one course from the list";
        }
        else if(!pgDD2.selValue.length){
            errorMsg = "pg2: Please select atleast one course from the list";
        }
    }
    else if(bothUnchcked){
        errorMsg = "pj: Please select atleast one premier education";
    }
    else if(anyChcked){
        if($n("#premTech").currObj().checked && !ugDD2.selValue.length){
            errorMsg = "ug2: Please select atleast one course from the list";
        }
        else if($n("#premMBA").currObj().checked && !pgDD2.selValue.length){
            errorMsg = "pg2: Please select atleast one course from the list";
        }
    }
    return errorMsg;
}
function validateLogo()
{
    var errorMsg = new String('');
    var tempErr = "";
    var errCount = 0;

    var tempErr  = String('');
    var logoValue = document.getElementById("logosel").options[document.getElementById("logosel").selectedIndex].value;
    if(logoValue <= 0) {
        tempErr += "Attaching a logo is mandatory for Premium Job, please select a logo to be displayed with the job. <br />";
    }
    if( tempErr.length > 0 )
    {
        errorMsg= "logosel:"+tempErr;
    }
    else
    {
        errorMsg = 'logosel:';
    }

    return errorMsg;
}
function validateCollectResponse(responsemethod)
{

    if(document.getElementById('collectresp_err'))
        document.getElementById('collectresp_err').style.display="none";
    if(document.getElementById('addEmailChkBx_err'))
        document.getElementById('addEmailChkBx_err').style.display="none";
    // document.getElementById('addautoFwdEmailChkBx_err').style.display='none';
    if(document.getElementById('msg_autoFwdEmailChkBx'))
        document.getElementById('msg_autoFwdEmailChkBx').style.display="none";
    if(document.getElementById('msg_autoFwdEmailChkBxSM'))
        document.getElementById('msg_autoFwdEmailChkBxSM').style.display="none";
    // document.getElementById('msg_emailChkBx').style.display="none";
    var errorMsg = '';
    errCount = 0;
    tempErr = "";

    if(responsemethod == "email")   // if response method is email
    {
        if(document.getElementById('offline_err')){
            document.getElementById('offline_err').style.display="none";
        }
        responseErrFdID = 'email';
        if(insta == "1")
        {
            var EmailRegEx = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,8}$/;
            expressionReg = new RegExp(EmailRegEx);
            var emaillbl = document.getElementById('email').value;
            if (trim(emaillbl) == "" || trim(emaillbl)=="Add another Email Id" || trim(emaillbl)=="Specify new email id" )
            {
                tempErr = "Please specify an email address.";
            }
            else if(!validateEmailAddr(emaillbl))
            {
                tempErr = "Please enter a valid email address.";
            }
            else if (emaillbl.length > 50)
            {
                tempErr = "The email address cannot be more than 50 characters.";
            }
            else if (!expressionReg.test(emaillbl))
            {
                tempErr = "Please enter a valid email address";
            }
        }
        else
        {
            var emailCount = 0;
            try{
                objEmail=document.getElementById('email_1');
                if(emailDD.selValue.length == 0){
                    document.getElementById('collectresp_err').style.display="none";
                    document.getElementById('addEmailChkBx_err').style.display="none";
                    tempErr += "Please select atleast one E-mail ID from the list. <br />";
                }
                else if(emailDD.selValue.length > 2)
                {
                    document.getElementById('collectresp_err').style.display="none";
                    document.getElementById('addEmailChkBx_err').style.display="none";

                    errCount++;
                    tempErr += "You cannot select more than two E-mail Ids. <br />";
                }
            }

            catch(e){}
        }

    }
    else if(responsemethod == "eapps")      // if response method is eapps
    {
        if(document.getElementById('offline_err')){
            document.getElementById('offline_err').style.display="none";
        }

        responseErrFdID = 'eapps';
        if(document.getElementById("autofwdeml_chk").checked == true)
        {
            var emailCount = 0;
            try{
                if(eappsEmailDD.selValue.length == 0){
                    errCount++;
                    tempErr += "Please select atleast one E-mail ID from the list. <br />";
                }
                else if(eappsEmailDD.selValue.length > 2)
                {
                    errCount++;
                    tempErr += "You cannot select more than 2 E-mail Ids. <br />";
                }
            }

            catch(e){}
        }
    }else if(responsemethod == "SM"){

        if(document.getElementById('offline_err')){
            document.getElementById('offline_err').style.display="none";
        }
        responseErrFdID = 'SM';
        if(document.getElementById("autofwdemlSM_chk").checked == true)
        {
            try{
                if(SMEmailDD.selValue.length == 0){
                    errCount++;
                    tempErr += "Please select atleast one E-mail ID from the list. <br />";
                }
                else if(SMEmailDD.selValue.length > 2)
                {
                    errCount++;
                    tempErr += "You cannot select more than 2 E-mail Ids. <br />";
                }
            }
            catch(e){}
        }/*
         if(document.getElementById('rd_nwPro').checked ==true){
         if(trim(document.getElementById('smNewProj').value) == ''){
         errCount++;
         tempErr += "Please provide a valid Project name.<br />";
         }else{
         validateSMProject(trim(document.getElementById('smNewProj').value));
         }
         }else{
         if(document.getElementById('smSelectProjects').value == -1){
         errCount++;
         tempErr += "Please select a valid Project <br />";
         }
         }*/
    }
    else if(responsemethod == "companyUrl")    // if response method is custumised url
    {
        if(document.getElementById('offline_err')){
            document.getElementById('offline_err').style.display="none";
        }

        responseErrFdID = 'companyUrlSection';

        if(applyIntegrationType == 'CU_OR_AI' || applyIntegrationType == 'CU_AND_AI'){
            if(!($n('#companyUrl_CU').isChecked() || $n('#companyUrl_AI').isChecked())) {
                // responseErrFdID = 'companyUrlSection';
                tempErr += "Please select a response type. <br />";
            }
        }
        if(!hasApplyIntegration || ($n('#companyUrl_CU').length > 0 && $n('#companyUrl_CU').isChecked())){
            responseErrFdID = 'custurl';
            if(String(trim(document.getElementById("cwebsite2").value)).length == 0)       // if no url is provided
            {
                tempErr += "This field cannot be left blank. <br />";
            }
            if(testHtmTag(trim(document.getElementById("cwebsite2").value), false) || testHtmlCommentTag(trim(document.getElementById("cwebsite2").value)) == true)
            {
                tempErr += "HTML tags are not supported in this field. <br />";
            }
            if (String(trim(document.getElementById("cwebsite2").value)).length > 550)
            {
                tempErr += "The URL cannot be more than 550 characters <br />";
            }
            if(document.getElementById("cwebsite2").value.substr(0,7) != "http://" && document.getElementById("cwebsite2").value.substr(0,8) != "https://")
            {
                tempErr += "Please prefix http:// or https:// to the URL. <br />";
            }
        }

    }
    else if(responsemethod == "offline")       // if response method is none
    {
        responseErrFdID = 'txtAreaVenue';
        if (document.getElementById("txtAreaVenue").value == "") {
            tempErr += "Mention venue details for the walk-in";
        } else if (String(trim(document.getElementById("txtAreaVenue").value)).length > 500) {
            tempErr += "Venue details cannot exceed more than 500 characters <br />";
        } else if (RegExp(/<[^>]*>/i).test(document.getElementById("txtAreaVenue").value)) {
            tempErr += "HTML tags are not supported in this field. <br />";
        }
    }
    else
    {
        tempErr += "Please select a response method. <br />";
    }

    if (tempErr.length > 0) {
        if (responsemethod == "offline") {
            errorMsg = responseErrFdID + ':' + tempErr;
        } else {
            errorMsg= 'collectresp_'+responseErrFdID+':'+tempErr;
        }
    }
    else
    {
        if (responsemethod == "offline") {
            errorMsg = responseErrFdID + ':';
        } else {
            errorMsg = 'collectresp_' + responseErrFdID + ':';
        }
    }
    return errorMsg;
}

function validateVenueUrl() {
    // number of characters
    var errorMsg = new String('');
    tempErr = "";
    errCount = 0;
    var tempErr = String('');
    responseMR = getManageResponseLabel();
    var str = document.getElementById("inputVenue") && document.getElementById("inputVenue").value;
    var strAddress = document.getElementById("inputVenueAdd") && document.getElementById("inputVenueAdd").value;
    if (responseMR == 'offlineMR') {
        if (String(trim(document.getElementById("inputVenue").value)).length > 700) {
            errCount++;
            tempErr += "Map URL cannot exceed more than 700 characters <br />";
        } else if (str.length && !(str.match(/google.co.in\/maps\/place/g) != null || str.match(/google.co.in\/maps\/search/g) != null || str.match(/google.co.in\/maps/g) != null || str.match(/goo.gl\/maps/g) != null || str.match(/maps.google.co.in/g) != null)) {
            errCount++;
            tempErr += "Enter a valid Google map URL <br />";

        } else if (RegExp(/<[^>]*>/i).test(str)) {
            errCount++;
            tempErr += "HTML tags are not supported in this field. <br />";
        }

        if (tempErr.length > 0) {
            errorMsg = "inputVenue: " + tempErr;
        } else {
            errorMsg = 'inputVenue:';
        }
    } else {
        if(document.getElementById('gglMapAdd') && document.getElementById('gglMapAdd').style.display =='block') {
            if (String(trim(strAddress)).length > 700) {
                errCount++;
                tempErr += "Map URL cannot exceed more than 700 characters <br />";
            } else if (strAddress.length && !(strAddress.match(/google.co.in\/maps\/place/g) != null || strAddress.match(/google.co.in\/maps\/search/g) != null || strAddress.match(/google.co.in\/maps/g) != null || strAddress.match(/goo.gl\/maps/g) != null || strAddress.match(/maps.google.co.in/g) != null)) {
                errCount++;
                tempErr += "Enter a valid Google map URL <br />";

            } else if (RegExp(/<[^>]*>/i).test(strAddress)) {
                errCount++;
                tempErr += "HTML tags are not supported in this field. <br />";
            }

            if (tempErr.length > 0) {
                errorMsg = "inputVenueAdd: " + tempErr;
            } else {
                errorMsg = 'inputVenueAdd:';
            }
            if(errorMsg != 'inputVenueAdd:') {
                if (jpAppName == 'Online') {
                    document.getElementById('moreContOpt').style.display='block';
                    document.getElementById('moreOpt').className='minus';
                }
            }
        }
    }

    return errorMsg;

}

function validateWalkinDate()
{
    var errorMsg = new String('');
    tempErr  = "";
    errCount = 0;
    var tempErr  = String('');
    responseMR = getManageResponseLabel();
    todayDateVal = todayDate.split(' ');
    if(responseMR == 'offlineMR')
    {
        var walkinDateStart              = document.getElementById("id_dateStart").value;       //walk-in start date
        var walkinDateEnd              = document.getElementById("id_dateEnd").value;       //walk-in end date

        retvalue = compareDates(walkinDateStart,'y-MM-dd',walkinDateEnd,'y-MM-dd');


        if(retvalue == '-1')
        {
            errCount++;
            tempErr += "Please select valid date range.<br/>";
        }
        else if(retvalue == '1')
        {
            errCount++;
            tempErr += "'From' Date cannot be later than 'To' date. Please specify valid date range.<br/>";
        }
        else if(walkinDateEnd <  todayDateVal[0] || walkinDateStart < todayDateVal[0])
        {
            tempErr += "You cannot select Date range earlier than today. Please specify valid date range.<br/>";
        }
        if(tempErr.length > 0)
        {
            errorMsg = "walkinDate: "+tempErr;
        }
        else
        {
            errorMsg = 'walkinDate:';
        }

    }
    return errorMsg;

}

function validateWalkinTime()
{
    var errorMsg = new String('');
    tempErr  = "";
    errCount = 0;
    var tempErr  = String('');
    responseMR = getManageResponseLabel();
    todayDateVal = todayDate.split(' ');;
    todayTimeVal = todayDateVal[1].split(':');


    if(responseMR == 'offlineMR')
    {
        var walkinTime              = document.getElementById("walkin_hours").value;       //walk-in start time
        var walkinMeridiem              = document.getElementById("walkin_meridiem").value;       //walk-in start time Meridiem
        if(walkinMeridiem == 'PM')
        {
            selectedtime = parseInt(walkinTime) + 12;
        }
        else
        {
            selectedtime = parseInt(walkinTime);
        }

        if(walkinTime == '' || walkinMeridiem == '')
        {
            errCount++;
            tempErr += "Please select valid time.<br/>";
        }
        else if(parseInt(walkinTime) > 12 || parseInt(walkinTime) < 1 || (walkinMeridiem != 'AM' && walkinMeridiem != 'PM') )
        {
            errCount++;
            tempErr += "The time selected by you are not valid. Please select valid time.";
        }
        else if(selectedtime <= todayTimeVal[0] && todayDateVal[0] == document.getElementById("id_dateStart").value)
        {
            errCount++;
            tempErr += "You cannot select Walk-inTime earlier than the current time. Please specify valid Walk-in time.";
        }

        if(tempErr.length > 0)
        {
            errorMsg = "walkinTime: "+tempErr;
        }
        else
        {
            errorMsg = 'walkinTime:';
        }

    }
    return errorMsg;

}

function validateReference(reference)
{
    var errorMsg = '';
    errCount = 0;
    tempErr = "";
    reference = trim(reference);
    var lengthReference = cleanupString(reference);
    if(lengthReference > 0 && lengthReference > 250)
    {
        tempErr += "You have exceeded the maximum limit of 250 characters. <br />";
        errCount++;
    }

    if(testHtmTag(reference, false) == true || testHtmlCommentTag(reference) == true)
    {
        tempErr += "HTML tags are not supported in this field. <br />";
    }

    if(tempErr.length > 0)
    {
        errorMsg= "referenceCode: "+tempErr;
    }
    else
    {
        errorMsg = 'referenceCode:';
    }
    return errorMsg;
}

function validateFilter(filter)
{
    var errorMsg = new String('');
    var tempErr = "";
    var errCount = 0;
    try
    {
        if(filter == "locFilter")
        {var countSpan = document.getElementById('prefLocContainerSelector2').getElementsByTagName("span");
            /*if(countSpan.length <= 0)
             {
             document.getElementById("locfilter_sel_err").style.display="block";
             document.getElementById("locfilter_sel_err").className = 'error2';
             document.getElementById("locfilter_sel_err").innerHTML ="Please select atleast one Location from the list.";
             tempErr +="Please select atleast one Location from the list.";
             errCount++;
             }*/
            // else  if (countSpan.length > 9){
            if (countSpan.length > 9){
                document.getElementById("locfilter_sel_err").style.display="block";
                document.getElementById("locfilter_sel_err").className = 'error2';
                document.getElementById("locfilter_sel_err").innerHTML ="You cannot select more than 9 locations";
                tempErr +="You cannot select more than 9 locations";
                errCount++;
            }


        }
        else if(filter == "noFilter" || filter == "pafFilter")
        {

        }
    }
    catch(e){}

    if(tempErr.length > 0)
    {
        errorMsg= "locfilter_sel : "+tempErr;
    }
    else
    {
        errorMsg = 'locfilter_sel :';
    }

    return errorMsg;
}

function isURL(argvalue) {

    if (argvalue.indexOf(" ") != -1)
        return false;
    else if (argvalue.indexOf("http://") == -1 && argvalue.indexOf("https://") == -1)
    {
        return isURL("http://"+argvalue);
    }
    else if (argvalue == "http://" || argvalue == "https://")
        return false;
    else if (argvalue.indexOf("http://") > 0 && argvalue.indexOf("https://") > 0)
    {
        return false;
    }

    argvalue = argvalue.substring(7, argvalue.length);
    if (argvalue.indexOf(".") == -1)
        return false;

    else if (argvalue.indexOf(".") == 0)
        return false;
    else if (argvalue.charAt(argvalue.length - 1) == ".")
        return false;

    if (argvalue.indexOf("/") != -1) {
        argvalue = argvalue.substring(0, argvalue.indexOf("/"));

        if (argvalue.charAt(argvalue.length - 1) == ".")
            return false;
    }

    if (argvalue.indexOf(":") != -1) {
        if (argvalue.indexOf(":") == (argvalue.length - 1))
            if (argvalue.indexOf(":") == (argvalue.length - 1))
                return false;

            else if (argvalue.charAt(argvalue.indexOf(":") + 1) == ".")
                return false;
        argvalue = argvalue.substring(0, argvalue.indexOf(":"));
        if (argvalue.charAt(argvalue.length - 1) == ".")

            return false;
    }

    return true;

}
function validateEmailAddr(email)
{
    var emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,64}$/;
    return emailPattern.test(email);
}
function validateDelete()
{
    var arrDeleteEle = document.getElementById('checkBoxes').getElementsByTagName('input');
    var checkCount = 0;
    for(i=0;i<arrDeleteEle.length;i++)
    {
        if(arrDeleteEle[i].type == "checkbox" && arrDeleteEle[i].checked == true && arrDeleteEle[i].value != "checkbox") {
            checkCount++;
        }
    }

    if(checkCount > 0)
        return true;
    else
    {
        if(document.getElementById('greenmess'))
            document.getElementById('greenmess').style.display = "none";
        document.getElementById('errormess').style.display = "block";
        document.getElementById('error_delete').innerHTML = "Please select atleast 1 job to delete.";
        //                alert("Please select atleast 1 job to delete.");
        return false;
    }
}
function checkJobTypeSelected()
{
    var arrJobType = document.getElementById('chkbx_jobtype').getElementsByTagName('input');
    var checkCount = 0;

    for(i=0; i<arrJobType.length; i++)
    {
        if(arrJobType[i].type == "checkbox" && arrJobType[i].checked == true)
        {
            if(arrJobType[i].value == "hv")
            {
                document.getElementById('hid_hotjobs').value = "hv";
            }

            if (arrJobType[i].value == "cl")
            {
                document.getElementById('hid_classified').value = "cl";
            }
        }
    }

}
function execSearch()
{
    document.getElementById('id_srchFilter').value = "no";
    document.frmJobListing.action = devJPListing + "/JobListing/search"
    document.frmJobListing.method = "post";
    document.frmJobListing.submit();
}
function changeEmailPage(obj){

    if(obj){
        document.getElementById("id_ToppageChange").value=obj.value;
        document.getElementById("id_BottompageChange").value = obj.value;
        document.frmAutoSavedJobs.action = devJPListing + "/JobListing/emails";
        document.frmAutoSavedJobs.method = "post";
        document.frmAutoSavedJobs.submit();
    }
}
function changeEmailPageOMJ(obj){
    if(obj){
        document.getElementById("id_ToppageChange").value=obj.value;
        document.getElementById("id_BottompageChange").value = obj.value;
        document.frmJobListing.action = devJPListing + "/JobListing/offline";
        document.frmJobListing.method = "post";
        document.frmJobListing.submit();
    }
}
function changePage(obj, sid, fromWhere, tab)
{
    if(obj)
    {
        if(obj.id == "id_ToppageChange")
        {
            if(document.getElementById("id_pageChange"))
            {
                document.getElementById("id_pageChange").value = obj.value;
            }
            if(document.getElementById("id_BottompageChange"))
            {
                document.getElementById("id_BottompageChange").value = obj.value;
            }
        }
        else if (obj.id == "id_BottompageChange")
        {
            if(document.getElementById("id_pageChange"))
            {
                document.getElementById("id_pageChange").value = obj.value;
            }
            if(document.getElementById("id_ToppageChange"))
            {
                document.getElementById("id_ToppageChange").value = obj.value;
            }
        }
        if(document.getElementById('id_srchFilter'))
            document.getElementById('id_srchFilter').value = "yes";
    }

    if(fromWhere == "posted")
    {
        document.frmJobListing.action = devJPListing + "/JobListing/search?sessionId="+sid+"&tab="+tab;
        document.frmJobListing.method = "post";
        document.frmJobListing.submit();
    }
    else if(fromWhere == "saved")
    {
        document.frmSavedJobs.action = devJPListing + "/JobListing/saved?sessionId="+sid+"&tab="+tab;
        document.frmSavedJobs.method = "post";
        document.frmSavedJobs.submit();
    }
    else if(fromWhere == "autoSaved")
    {
        document.frmAutoSavedJobs.action = devJPListing + "/JobListing/autoSaved?sessionId="+sid+"&tab="+tab;
        document.frmAutoSavedJobs.method = "post";
        document.frmAutoSavedJobs.submit();
    }



}
function changeJobState(obj, sid)
{
    if(obj)
    {
        if(obj.id == "id_Topalljobs")
        {
            document.getElementById("id_Bottomalljobs").value = obj.value;
        }
        else if (obj.id == "id_Bottomalljobs")
        {
            document.getElementById("id_Topalljobs").value = obj.value;
        }
        document.getElementById('id_srchFilter').value = "yes";
    }

    document.frmJobListing.action = devJPListing + "/JobListing/search";
    document.frmJobListing.method = "post";
    document.frmJobListing.submit();
}

function validateTestimonialText(no, mode){
    text = document.getElementById('testimonial'+mode+no).value;
    res = testHtmTag(text,false);
    document.getElementById('testimonialVal').value = text;
    if(res == true){
        return false;
    }
    return true;
}

function deleteJob(sid, currPg, totalPg, formName, tab, rdname)
{
    if(currPg=="") currPg = 1;
    currPg = parseInt(currPg);
    totalPg = parseInt(totalPg);
    valid = true;
    if(currPg > totalPg)
        currPg = totalPg;
    else if ( currPg == totalPg)
        currPg = totalPg - 1;

    if(currPg == 0)
        currPg = 1;

    document.getElementById('id_pageno').value = currPg;

    if(tab == null)
        tab = '';
    if (formName == 'frmJobListing') {
        var radVal = '';
        if (rdname == 'delrd')
        {
            for (i=0; i < document.frmJobListing.delrd.length; i++)
            {
                if (i < 7 && document.frmJobListing.delrd[i].checked )
                {
                    if(i<2){
                        valid = validateTestimonialText(i+1, 'other');
                    }
                    radVal = document.frmJobListing.delrd[i].value;
                    break;
                }
                else if(document.frmJobListing.delrd[7].checked)
                {
                    radVal = document.getElementById('other').value;
                    if (radVal == 'Please mention a reason')
                        radVal = '';
                }
            }

        }
        if (rdname == 'delrdmul')
        {
            for (i=0; i < document.frmJobListing.delrdmul.length; i++)
            {
                if (i < 7 && document.frmJobListing.delrdmul[i].checked)
                {
                    if(i<2){
                        valid = validateTestimonialText(i+1, 'othermul');
                    }

                    radVal = document.frmJobListing.delrdmul[i].value;
                    break;
                }
                else if(document.frmJobListing.delrdmul[7].checked)
                {
                    radVal = document.getElementById('othermul').value;
                    if (radVal == 'Please mention a reason')
                        radVal = '';
                }
            }
        }
        if(testHtmTag(radVal,false)){
            valid = false;
        }
        if(!valid){
            var errMessName = getPageElementReference('errormess', rdname);
            errMessName.innerHTML = "HTML tags are not supported in this field.";
            errMessName.style.display = 'block';
            return false;
        }

    }

    if(formName == 'frmJobListing')
    {
        if(tab=='rmjJob'){
            var hiddenField = document.createElement("input");
            hiddenField.setAttribute("type", "hidden");
            hiddenField.setAttribute("name", "jobAction");
            hiddenField.setAttribute("value", "delete");
            document.frmJobListing.appendChild(hiddenField);
            document.forms[formName].action = devJPListing + "/JobListing/rMJJobs?sessionId="+sid;
        }else{
            document.forms[formName].action = devJPListing + "/JobListing/delete?sessionId="+sid+"&tab="+tab;
        }
    }
    else if(formName == 'frmSavedJobs')
        document.forms[formName].action = devJPListing + "/JobListing/deleteSaved?sessionId="+sid+"&tab="+tab;
    else if(formName == 'frmAutoSavedJobs')
        document.forms[formName].action = devJPListing + "/JobListing/deleteAutoSaved?sessionId="+sid+"&tab="+tab;

    if (formName == 'frmJobListing') {
        if(radVal == ''){
            var errMessName = getPageElementReference('errormess', rdname);
            errMessName.innerHTML = "Please mention a reason before you remove this job.";
            errMessName.style.display = 'block';
            return false;
        } else {
            document.getElementById('feedbackSrc').value = radVal;
        }
    }
    document.forms[formName].method = "post";
    document.forms[formName].submit();
    return false;
}
function getPageElementReference(elementName, rdname)
{
    if (rdname == 'delrdmul')
        var elemErr = gbi('spanErrorMess').getElementsByTagName('span');
    else if (rdname == 'delrd')
        var elemErr = gbi('spanErrorMess1').getElementsByTagName('span');
    for(var i=0;i < elemErr.length;i++)
    {
        if(elemErr[i].id == elementName)
            return elemErr[i];
    }
}

function otherTxtEnable (mode) {
    resetTestimonial(mode);
    if (mode == 'othermul') {
        document.getElementById('othermul').disabled = !(document.frmJobListing.delrdmul[7].checked);

    } else if (mode == 'other') {
        document.getElementById('other').disabled = !(document.frmJobListing.delrd[7].checked);
    }

    if (document.frmJobListing.delrd[7].checked)
        document.getElementById('other').style.cursor = 'auto';
    else
        document.getElementById('other').style.cursor = "default";

    resetStyle(mode);
}

function resetTestimonial(mode){
    if((document.frmJobListing.delrd[0].checked && mode=='other') || (document.frmJobListing.delrdmul[0].checked && mode=='othermul')){
        document.getElementById('showTestimonial'+mode+'1').style.display = "block";
        document.getElementById('testimonial'+mode+'2').value = '';
        document.getElementById('showTestimonial'+mode+'2').style.display = "none";
    }else if((document.frmJobListing.delrd[1].checked && mode=='other')||(document.frmJobListing.delrdmul[1].checked && mode=='othermul')){
        document.getElementById('testimonial'+mode+'1').value = '';
        document.getElementById('showTestimonial'+mode+'1').style.display = "none";
        document.getElementById('showTestimonial'+mode+'2').style.display = "block";
    }else{
        document.getElementById('testimonialother2').value = '';
        document.getElementById('testimonialother1').value = '';
        document.getElementById('showTestimonialother1').style.display = "none";
        document.getElementById('showTestimonialother2').style.display = "none";
        document.getElementById('testimonialothermul2').value = '';
        document.getElementById('testimonialothermul1').value = '';
        document.getElementById('showTestimonialothermul1').style.display = "none";
        document.getElementById('showTestimonialothermul2').style.display = "none";


    }
}

function resetStyle(mode) {
    if (mode == 'othermul') {
        document.getElementById('othermul').value = 'Please mention a reason';
        document.getElementById('othermul').style.color = '#999';
    } else if (mode == 'other') {
        document.getElementById('other').value = 'Please mention a reason';
        document.getElementById('other').style.color = '#999';
    }

}
function resetStyleIfNull(mode) {
    if (mode == 'othermul' && trim(document.getElementById('othermul').value) == '') {
        resetStyle(mode);
    }
    else if (mode == 'other' && trim(document.getElementById('other').value) == '') {
        resetStyle(mode);
    }

}

function setResetStyle(mode)
{

    if (mode == 'mul') {
        if (document.getElementById('othermul').value == 'Please mention a reason')
        {
            document.getElementById('othermul').value = '';
            document.getElementById('othermul').style.color = '#000';
        }
    }

    if (mode == 'single') {
        if (document.getElementById('other').value == 'Please mention a reason')
        {
            document.getElementById('other').value = '';
            document.getElementById('other').style.color = '#000';
        }
    }
}

function disableRadioOptionNewJob()
{
    if (document.getElementById('recurrenceEndOn').checked == true)
    {
        document.getElementById("after").value="1";
        document.getElementById("after").disabled="disabled";
        document.getElementById("calDisable").style.visibility = "";
    }
    else
    {
        document.getElementById("after").disabled="";
        document.getElementById("date").value="";
        document.getElementById("calDisable").style.visibility = "hidden";}
}


function checkAutoRefreshOptions()
{
    var refreshOption=document.getElementById("refreshPattern").value;
    document.getElementById('submitRefresh').disabled = "";
    if (refreshOption=="disable")
    {
        document.getElementById('autoRefMsg').innerHTML="Do you want to Refresh this job now?";

        document.getElementById('date_err').style.display ="none";
        document.getElementById("refCount").disabled="disabled";
        //    document.getElementById("every").disabled="disabled";
        //  document.getElementById("every").value="1";
        document.getElementById("recurrenceEndAfter").disabled="disabled";
        document.getElementById("recurrenceEndOn").disabled="disabled";
        document.getElementById("date").disabled="disabled";
        document.getElementById("date").value="";
        document.getElementById("checkRefresh").disabled="disabled";
        document.getElementById("checkRefresh").checked=false;
        document.getElementById("recurrenceEndAfter").checked = true;
        document.getElementById("calDisable").style.visibility = "hidden";
        document.getElementById("cal4Disable").style.visibility = "hidden";
        document.getElementById("stDate").value="";

    }
    else
    {
        document.getElementById('autoRefMsg').innerHTML="Manually refreshing this job will overwrite the Auto Refresh Settings for this job.<br />Are you sure you want to proceed?";

        if (document.getElementById("recurrenceEndAfter").checked == true)
            document.getElementById("calDisable").style.visibility = "hidden";
        else
            document.getElementById("calDisable").style.visibility = "";

        document.getElementById("refCount").disabled="";
        document.getElementById("cal4Disable").style.visibility = "";
        //    document.getElementById("every").disabled="";
        document.getElementById("recurrenceEndAfter").disabled="";
        document.getElementById("recurrenceEndOn").disabled="";
        //       document.getElementById("date").disabled="";
        document.getElementById("checkRefresh").disabled="";
    }
    if (refreshOption=="Monthly")
    {
        //    document.getElementById("every").disabled="disabled";
        //    document.getElementById("every").value="1";
    }
    if (document.getElementById("recurrenceEndOn").checked == true)
    {
        document.getElementById("refCount").disabled="disabled";
    }
    else
        document.getElementById("refCount").disabled="";

}

function checkAutoRefNewJob()
{
    var refreshOption=document.getElementById("refreshPattern").value;
    if (refreshOption=="disable")
    {
        //   document.getElementById("every").disabled="disabled";
        document.getElementById("after").disabled="disabled";
        document.getElementById("recurrenceEndAfter").disabled="disabled";
        document.getElementById("recurrenceEndOn").disabled="disabled";
        document.getElementById("date").disabled="disabled";
        document.getElementById("cal4Disable").style.visibility = "hidden";
        document.getElementById("calDisable").style.visibility = "hidden";
        document.getElementById("date").value = "";
        document.getElementById("stDate").value = "";

    }
    else
    {
        if (document.getElementById("recurrenceEndAfter").checked == true)
            document.getElementById("calDisable").style.visibility = "hidden";
        else
            document.getElementById("calDisable").style.visibility = "";
        document.getElementById("cal4Disable").style.visibility = "";
        //    document.getElementById("every").disabled="";
        document.getElementById("after").disabled="";
        document.getElementById("recurrenceEndAfter").disabled="";
        document.getElementById("recurrenceEndOn").disabled="";
        //          document.getElementById("date").disabled="";

    }
    if (refreshOption=="Monthly")
    {
        //    document.getElementById("every").disabled="disabled";
    }
}


function datevalid()
{
    var stdate = document.getElementById('keyword5').value;
    var endate = document.getElementById('keyword6666').value;
    if(stdate && endate)
    {
        var currentDate = new Date();
        var month = currentDate.getMonth() + 1;
        if(String(month).length == 1)
            month = '0' + month;

        dte = currentDate.getDate();
        if(String(dte).length == 1)
            dte = '0' + dte
        var date = currentDate.getFullYear() + "-"+month + "-" + dte;
        if(endate > date || stdate > date)
        {
            alert("You can not select dates greater than the today's date. Please specify the valid dates.");
            return false;
        }
        var retvalue = compareDates(stdate,'y-MM-dd',endate,'y-MM-dd');
        if(retvalue == '-1')
        {
            alert("The dates do not seem valid. Please specify again.");
            return false;
        }
        else if(retvalue == '1')
        {
            alert("The 'To' date can not be less than 'From' date. Please specify the valid dates.");
            return false;
        }
        else
        {
            document.getElementById('id_srchFilter').value = "no";
            document.getElementById('id_isValid').value = "no";
            execSearch();
        }
    }
    else
    {
        if((stdate && !endate) || (!stdate && endate))
        {
            alert("The dates do not seem valid. Please specify again.");
            document.getElementById('id_isValid').value = "yes";
            return false;
        }
        else
        {
            document.getElementById('id_srchFilter').value = "no";
            document.getElementById('id_isValid').value = "no";
            execSearch();
        }
    }

    document.getElementById('id_srchFilter').value = "no";
    document.getElementById('id_isValid').value = "no";
    execSearch();
}

/* tooltip.js */
var myWin='';
var content=0;
var idfield=0;
var leftpos=0;
var iframeH=10;
function getWindowWidth() {
    var windowWidth = 0;
    if (typeof(window.innerWidth) == 'number') {
        windowWidth = document.documentElement.scrollWidth;
    }
    else {
        if (document.documentElement && document.documentElement.clientWidth) {
            windowWidth = document.documentElement.scrollWidth;
        }
        else {
            if (document.body && document.body.clientWidth) {
                windowWidth = document.body.clientWidth;
            }
        }
    }
    return windowWidth;
}

function tooltip(content, idfield, leftpos, iframeHeight) {
    if(content!='')
    {
        var iframeH1=iframeHeight || iframeH ;
        var curleft = curtop = 0;
        obj=document.getElementById(idfield);
        obj4=document.getElementsByClassName('bodyWrap')
        var clientW=getWindowWidth();
        if (obj.offsetParent) {
            curleft = obj.offsetLeft
            curtop = obj.offsetTop
            while (obj = obj.offsetParent) {
                curleft += obj.offsetLeft
                curtop += obj.offsetTop
            }
        }

        var obj2=document.getElementById('hintbox');
        var objFrame=document.getElementById('toolFrame');
        var leftP=0;
        if(leftpos){
            leftpos=leftpos.split('px')
            leftP=leftpos[0];
        }
        obj2.style.top=objFrame.style.top=curtop+"px";
        obj2.style.left=objFrame.style.left=((clientW-obj4[0].offsetWidth)/2)+parseInt(leftP)+"px";
        obj1=document.getElementById('new_');
        obj1.innerHTML="<div id='forarrow'>&nbsp;</div>"+content;
        document.getElementById('iframeTool').height=obj2.offsetHeight+'px';
        document.getElementById('iframeTool').width='200px';
        obj2.style.visibility=objFrame.style.visibility='visible';
        content=content;
        idfield=idfield;
        leftpos=leftpos;
        obj=document.getElementById(idfield);
    }
}
function hidetip(){
    dropmenuobj=document.getElementById("hintbox")
    dropmenuFrame=document.getElementById("toolFrame")
    dropmenuobj.style.visibility=dropmenuFrame.style.visibility="hidden"
    dropmenuobj.style.left=dropmenuFrame.style.left="-500px"
}
var documentwidth=document.width;
var documentheight=document.height;
var getheight=0;
var layerid1='';
var closeid1='';
var clickEventID1='';
function modalwin(width1, height1, layerid, clickEventID)
{
    var modal1=document.getElementById('modal1');
    var iebody=(document.compatMode && document.compatMode != "BackCompat")? document.documentElement : document.body;
    var dsocleft=document.all? iebody.scrollLeft : pageXOffset;
    var dsoctop=document.all? iebody.scrollTop : pageYOffset;
    findPos();
    newheight=alertSize();
    if(getheight<newheight)
    {getheight=newheight;}
    modal1.style.height=getheight+'px';
    function getWindowWidth() {
        var windowWidth = 0;
        if (typeof(window.innerWidth) == 'number') {
            //  windowWidth = window.innerWidth;
            windowWidth = document.documentElement.scrollWidth;
        }
        else {
            if (document.documentElement && document.documentElement.clientWidth) {
                windowWidth = document.documentElement.scrollWidth;
            }
            else {
                if (document.body && document.body.clientWidth) {
                    windowWidth = document.body.clientWidth;
                }
            }
        }
        return windowWidth;
    }
    var clientW=getWindowWidth();

    modal1.style.width=clientW+'px';
    modal1.style.background='#fff';     //set color of background layer
    document.getElementById(layerid).style.width=width1+'px';
    document.getElementById(layerid).style.height=height1+'px';
    document.getElementById("framelayer").style.width=clientW+'px';
    document.getElementById("framelayer").style.height=getheight+'px';
    document.getElementById("lFrame1").style.width=clientW+'px';
    document.getElementById("lFrame1").style.height=getheight+'px';
    var clientheight=getheight;
    //var clientwidth=document.body.clientWidth;
    var clientwidth=clientW;
    var layershowobj=document.getElementById(layerid);
    clientwidth1=(clientwidth/2)-(width1/2);
    clientheight1= dsoctop+(newheight/2)-(height1/2);
    layershowobj.style.left=clientwidth1+'px';
    layershowobj.style.top=clientheight1+'px';
    closewidthpos=parseInt(clientwidth1, 10)+parseInt(width1, 10)-60;
    document.getElementById('modal1').style.display='block';
    document.getElementById(layerid).style.display='block';
    if(navigator.appName=='Microsoft Internet Explorer')
    {document.getElementById("framelayer").style.display='block';}
    layerid1=layerid;
    clickEventID1=clickEventID;
    focuschangeNew2(layerid);
}

function hidemodal(resetValues) {
    try {
        resetValues = (resetValues == undefined) ? '' : resetValues;
        if(resetValues == '') {
            refreshLighBox();
        }
        document.getElementById('modal1').style.display='none';
        document.getElementById(layerid1).style.display='none';
        document.getElementById("framelayer").style.display='none';
        if(clickEventID1) {
            try {clickEventID1.focus();}
            catch(e) {document.getElementById(clickEventID1).focus();}
        }
    }
    catch(e) {}
}
var bool=false;
function focuschange(layerid)
{
    var byTag=document.getElementById(layerid).getElementsByTagName('a');
    byTag[0].focus();
}

function focuschangeNew2(layerid)
{
    var byTag1=document.getElementById(layerid);
    for(i=0; i<byTag1.childNodes.length; i++)
    {
        var byTag2=byTag1.childNodes[i];
        if(byTag2)
            recursive1(byTag2);
        if(bool)
            break;
        else
        {focuschangeNew1(layerid)};

    }
}
function recursive1(nodeOBJ)
{bool=false;
    for(var j=0; j<nodeOBJ.childNodes.length; j++)
    {
        if(((nodeOBJ.childNodes[j].parentNode.style.display)=='none')||((nodeOBJ.childNodes[j].parentNode.parentNode.style.display)=='none')||((nodeOBJ.childNodes[j].parentNode.parentNode.parentNode.style.display)=='none')||((nodeOBJ.childNodes[j].parentNode.parentNode.parentNode.parentNode.style.display)=='none'))
        {}
        else
        {
            if(((nodeOBJ.childNodes[j].nodeName)=='INPUT') && ((nodeOBJ.childNodes[j].type)!='hidden') && ((nodeOBJ.childNodes[j].style.display)!='none'))
            {
                nodeOBJ.childNodes[j].focus();
                bool=true;
            }
            else if(((nodeOBJ.childNodes[j].nodeName)=='TEXTAREA') && ((nodeOBJ.childNodes[j].type)!='hidden') && ((nodeOBJ.childNodes[j].style.display)!='none'))
            {nodeOBJ.childNodes[j].focus();
                bool=true;
            }
            else if(((nodeOBJ.childNodes[j].nodeName)=='SELECT') && ((nodeOBJ.childNodes[j].type)!='hidden') && ((nodeOBJ.childNodes[j].style.display)!='none'))
            {nodeOBJ.childNodes[j].focus();
                bool=true;
            }
            else
            {if(nodeOBJ.childNodes[j])
                recursive1(nodeOBJ.childNodes[j]);}
            if(bool)
                break;
        }
    }
}

function focuschangeNew1(layerid)
{
    var byTag=document.getElementById(layerid).getElementsByTagName('a');
    byTag[1].focus();
}
function focuschangeNew(layerid)
{
    var objNew=document.getElementById(layerid);

    if(((objNew.parentNode.style.display)=='none') || ((objNew.parentNode.parentNode.style.display)=='none') || ((objNew.parentNode.parentNode.parentNode.style.display)=='none'))
    {
        var inputnew=document.getElementById(layerid1).getElementsByTagName('input');
        inputnew[inputnew.length-1].focus();
    }
    else
    {objNew.focus();}
}
function alertSize() {
    var myWidth = 0, myHeight = 0;
    if( typeof( window.innerWidth ) == 'number' ) {
        //Non-IE
        myWidth = window.innerWidth;
        myHeight = window.innerHeight;
    } else if( document.documentElement && ( document.documentElement.clientWidth || document.documentElement.clientHeight ) ) {
        myWidth = document.documentElement.clientWidth;
        myHeight = document.documentElement.clientHeight;
    } else if( document.body && ( document.body.clientWidth || document.body.clientHeight ) ) {
        //IE 4 compatible
        myWidth = document.body.clientWidth;
        myHeight = document.body.clientHeight;
    }
    return myHeight;
}
function findPos() {
    obj=document.getElementById('lastDiv1');
    var curleft = curtop = 0;
    if (obj.offsetParent) {
        curleft = obj.offsetLeft
        curtop = obj.offsetTop
        while (obj = obj.offsetParent) {
            curleft += obj.offsetLeft
            curtop += obj.offsetTop
        }
    }
    getheight=curtop;
}
function refreshLighBox()
{
    var objNew=document.getElementById(layerid1);
    var inputTypes= objNew.getElementsByTagName('INPUT');
    for(i=0; i<inputTypes.length; i++)
    {
        if((inputTypes[i].type)=='checkbox')
        {
            inputTypes[i].checked=false;
        }
        else if(((inputTypes[i].type)=='text') || ((inputTypes[i].type)=='password') || ((inputTypes[i].type)=='file'))
        {
            inputTypes[i].value='';
        }

    }
    var tArea=      objNew.getElementsByTagName('TEXTAREA');
    for(i=0; i<tArea.length; i++)
    {
        tArea[i].innerHTML='';
    }
    var selectType= objNew.getElementsByTagName('SELECT');
    for(i=0; i<selectType.length; i++)
    {
        selectType[i].selectedIndex=0;
    }
    checkError('div', 'error');
    checkError('span', 'error');
    checkError('INPUT', 'errfldd');
    checkError('TEXTAREA', 'errfldd');
    checkError('SELECT', 'errfldd');
}
function checkError(divName)
{
    var objNew=document.getElementById(layerid1);
    var divType=objNew.getElementsByTagName(divName);
    for(var i=0; i<divType.length; i++)
    {
        var classNew= divType[i].className;
        classNew = String(classNew);
        var classNew1=classNew.match('errfldd');
        if(classNew1==null)
        {
            if(((classNew)=='error') || ((classNew)=='error1') || ((classNew)=='error2') || ((classNew)=='error3'))
            {
                if((divType[i].style.display)!='none')
                {
                    if((divType[i].style.display)=='block')
                    {
                        divType[i].style.display='none';
                    }
                    else if((divType[i].style.display)=='')
                    {
                        divType[i].style.display='none';
                    }
                    else {divType[i].className='noerror';
                    }
                }
            }
        }
        else
        {
            var classNew2=classNew.split(' ');
            var newClass='';
            for (var j=0; j<classNew2.length; j++)
            {
                if(classNew2[j]!='errfldd')
                    newClass+=classNew2[j]+" ";
            }
            divType[i].className=newClass;
        }
    }
}
function UnsetMsg(prefix)
{
    if(document.getElementById("msg_email"))
        if(document.getElementById("msg_email").innerHTML != "")
            document.getElementById("msg_email").innerHTML = "";

    if(document.getElementById("msg_farea"))
        if(document.getElementById("msg_farea").innerHTML != "")
            document.getElementById("msg_farea").innerHTML = "";

    if(document.getElementById("msg_ind"))
        if(document.getElementById("msg_ind").innerHTML != "")
            document.getElementById("msg_ind").innerHTML = "";

    if(document.getElementById("msg_address"))
        if(document.getElementById("msg_address").innerHTML != "")
            document.getElementById("msg_address").innerHTML = "";

    if(trim(prefix) != '' && prefix)
    {
        document.getElementById(prefix+"success").style.display = "none";
        document.getElementById(prefix+"entry").style.display = "block";
        document.getElementById("msg_"+prefix).style.display = "none";
    }
}
function SetMsg(prefix)
{
    document.getElementById(prefix+"success").style.display = "block";
    document.getElementById(prefix+"entry").style.display = "none";
}

function getManageResponseLabel()
{
    objRadio = document.getElementById('mr_segment').getElementsByTagName('input');
    if(objRadio) {
        for(i=0;i<objRadio.length;i++)
            if(objRadio[i].checked == true)
            {
                if(objRadio[i].value == 'email' || objRadio[i].value == 'eapps'|| objRadio[i].value == 'offline'|| objRadio[i].value == 'SM')
                    label = objRadio[i].value+'MR';
                else if(objRadio[i].value == 'companyUrl')
                    label = 'compurlMR';
            }
    }
    return label;
}
function compareDates(date1,dateformat1,date2,dateformat2) {
    var d1 = getDateFromFormat(date1, dateformat1);
    var d2 = getDateFromFormat(date2, dateformat2);
    if (d1 == 0 || d2 == 0)
        return -1;
    else if (d1 > d2)
        return 1;
    return 0;
}
function getDateFromFormat(val,format) {
    val = val+"";
    format = format+"";
    var i_val = 0;
    var i_format = 0;
    var c = "";
    var token="";
    var token2="";
    var x,y;
    var now=new Date();
    var year=now.getYear();
    var month=now.getMonth()+1;
    var date=1;
    var hh=now.getHours();
    var mm=now.getMinutes();
    var ss=now.getSeconds();
    var ampm="";

    while (i_format < format.length) {
        c=format.charAt(i_format);
        token="";
        while ((format.charAt(i_format)==c) && (i_format < format.length)) {
            token += format.charAt(i_format++);
        }
        if (token=="yyyy" || token=="yy" || token=="y") {
            if (token=="yyyy") {x=4;y=4;}
            if (token=="yy")   {x=2;y=2;}
            if (token=="y")    {x=2;y=4;}
            year=_getInt(val,i_val,x,y);
            if (year==null) {return 0;}
            i_val += year.length;
            if (year.length==2) {
                if (year > 70) {year=1900+(year-0);}
                else {year=2000+(year-0);}
            }
        }
        else if (token=="MMM"||token=="NNN"){
            month=0;
            for (var i=0; i<MONTH_NAMES.length; i++) {
                var month_name=MONTH_NAMES[i];
                if (val.substring(i_val,i_val+month_name.length).toLowerCase()==month_name.toLowerCase()) {
                    if (token=="MMM"||(token=="NNN"&&i>11)) {
                        month=i+1;
                        if (month>12) {month -= 12;}
                        i_val += month_name.length;
                        break;
                    }
                }
            }
            if ((month < 1)||(month>12)){return 0;}
        }
        else if (token=="EE"||token=="E"){
            for (var i=0; i<DAY_NAMES.length; i++) {
                var day_name=DAY_NAMES[i];
                if (val.substring(i_val,i_val+day_name.length).toLowerCase()==day_name.toLowerCase()) {
                    i_val += day_name.length;
                    break;
                }
            }
        }
        else if (token=="MM"||token=="M") {
            month=_getInt(val,i_val,token.length,2);
            if(month==null||(month<1)||(month>12)){return 0;}
            i_val+=month.length;}
        else if (token=="dd"||token=="d") {
            date=_getInt(val,i_val,token.length,2);
            if(date==null||(date<1)||(date>31)){return 0;}
            i_val+=date.length;}
        else if (token=="hh"||token=="h") {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh<1)||(hh>12)){return 0;}
            i_val+=hh.length;}
        else if (token=="HH"||token=="H") {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh<0)||(hh>23)){return 0;}
            i_val+=hh.length;}
        else if (token=="KK"||token=="K") {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh<0)||(hh>11)){return 0;}
            i_val+=hh.length;}
        else if (token=="kk"||token=="k") {
            hh=_getInt(val,i_val,token.length,2);
            if(hh==null||(hh<1)||(hh>24)){return 0;}
            i_val+=hh.length;hh--;}
        else if (token=="mm"||token=="m") {
            mm=_getInt(val,i_val,token.length,2);
            if(mm==null||(mm<0)||(mm>59)){return 0;}
            i_val+=mm.length;}
        else if (token=="ss"||token=="s") {
            ss=_getInt(val,i_val,token.length,2);
            if(ss==null||(ss<0)||(ss>59)){return 0;}
            i_val+=ss.length;}
        else if (token=="a") {
            if (val.substring(i_val,i_val+2).toLowerCase()=="am") {ampm="AM";}
            else if (val.substring(i_val,i_val+2).toLowerCase()=="pm") {ampm="PM";}
            else {return 0;}
            i_val+=2;}
        else {
            if (val.substring(i_val,i_val+token.length)!=token) {return 0;}
            else {i_val+=token.length;}
        }
    }
    if (i_val != val.length) {return 0;}
    if (month==2) {
        if ( ( (year%4==0)&&(year%100 != 0) ) || (year%400==0) ) { // leap year
            if (date > 29){return 0;}
        }
        else {if (date > 28) {return 0;}}
    }
    if ((month==4)||(month==6)||(month==9)||(month==11)) {
        if (date > 30) {return 0;}
    }
    if (hh<12 && ampm=="PM") {hh=hh-0+12;}
    else if (hh>11 && ampm=="AM") {hh-=12;}
    var newdate=new Date(year,month-1,date,hh,mm,ss);
    return newdate.getTime();
}
function _isInteger(val) {
    var digits="1234567890";
    for (var i=0; i < val.length; i++) {
        if (digits.indexOf(val.charAt(i))==-1) {return false;}
    }
    return true;
}
function _getInt(str,i,minlength,maxlength) {
    for (var x=maxlength; x>=minlength; x--) {
        var token=str.substring(i,i+x);
        if (token.length < minlength) {return null;}
        if (_isInteger(token)) {return token;}
    }
    return null;
}
function getRadStat(layerid, obj)
{
    var cbNo=document.getElementById(layerid).getElementsByTagName('INPUT');
    var counter=0;
    for(i=0; i<cbNo.length; i++)
    {
        if(cbNo[i].checked)
            counter=counter+1;
    }
    document.getElementById("subjectLine_err").style.display="none";
    if(counter == 0 && obj == undefined) {
        document.getElementById("subjectLine_err").style.display = "block";
        document.getElementById("subjectLine_err").innerHTML = "Please select at least one criteria to customize the subject line. If you wish to retain current settings, click on Cancel.";
        document.getElementById('subjectLine_err').className = "error";
        return false;
    }
    else if(obj == undefined) {
        return true;
    }
    else if(counter>4)
    {document.getElementById('hintbox_new').style.display='block';
        obj.checked='';
    }
    else
    {document.getElementById('hintbox_new').style.display='none';}
}
function showHideNew1()
{
    var i=1;
    while(document.getElementById('cs'+i))
    {
        document.getElementById('cs'+i).style.display='none'
        i=i+1;
    }
}
function showHideNew(layerid)
{
    document.getElementById(layerid).style.display='block';
}
function changeSubjectLine(subjectLineTodisplay) {
    try {
        if(subjectLineTodisplay == 'customize') {
            document.getElementById('defaultSubjectLine').style.display='none';
            document.getElementById('customizedSubjectLine').style.display='block';
            var subjectLineContainer = '';
            if(document.getElementById('subLineDesignation').checked)
                subjectLineContainer = ', Sales Manager';
            if(document.getElementById('subLineCompany').checked)
                subjectLineContainer += ', Ranbaxy';
            if(document.getElementById('subLineExperience').checked)
                subjectLineContainer += ', 5.5 years';
            if(document.getElementById('subLineLocation').checked)
                subjectLineContainer += ', Delhi';
            if(document.getElementById('subLineCtc').checked)
                subjectLineContainer += ', 12 lacs';
            if(document.getElementById('subLineIndustry').checked)
                subjectLineContainer += ', Retail';
            document.getElementById('subjectLineContainer').innerHTML=' Naukri.com- job ref, job post - '+subjectLineContainer.substring(2);
            unsetErrorHintBox();
        }
        else if(subjectLineTodisplay == 'default') {
            document.getElementById('customizedSubjectLine').style.display='none';
            document.getElementById('defaultSubjectLine').style.display='block';
        }
    }
    catch(e){}
}
var subLineElements = new Array();
function setSubjectLineValues(layerid) {
    try {
        var cbNo = document.getElementById(layerid).getElementsByTagName('INPUT');
        for(i=0; i<cbNo.length; i++)
        {
            if(cbNo[i].checked)
                subLineElements[i] = 'y';
            else
                subLineElements[i] = 'n';
        }
        unsetErrorHintBox();
    } catch(e){}
}
function resetSubjectLineValues(layerid) {
    try {
        var cbNo = document.getElementById(layerid).getElementsByTagName('INPUT');
        for(i=0; i<cbNo.length; i++)
        {
            if(subLineElements[i] == 'y')
                cbNo[i].checked = 'checked';
            else
                cbNo[i].checked = '';
        }
        unsetErrorHintBox();
    } catch(e){}
}
function displayDefaultSubjectLine(layerid) {
    var cbNo = document.getElementById(layerid).getElementsByTagName('INPUT');
    for(i=0; i<cbNo.length; i++)
    {
        if(cbNo[i].checked)
            cbNo[i].checked = '';
    }
    unsetErrorHintBox();
}
function unsetErrorHintBox() {
    if(document.getElementById("subjectLine_err"))
        document.getElementById("subjectLine_err").style.display="none";
    if(document.getElementById('hintbox_new'))
        document.getElementById('hintbox_new').style.display='none';
}

function disableRadioOptionManageJobs()
{
    if (document.getElementById('recurrenceEndOn').checked == true)
    {
        document.getElementById("refCount").value="1";
        document.getElementById("refCount").disabled="disabled";
        document.getElementById("calDisable").style.visibility = "";
    }
    else
    {
        document.getElementById('date_err').style.display ="none";
        document.getElementById("refCount").disabled="";
        document.getElementById("date").value="";
        document.getElementById("calDisable").style.visibility = "hidden";
    }
}

function fillValues()
{
    //  document.getElementById("submitRefresh").disabled = "disabled";
    document.getElementById("dateE").value=document.getElementById("date").value; // remove dateE
    document.getElementById("fileId").value=document.getElementById("jobId").value;
    document.getElementById("refPattern").value=document.getElementById("refreshPattern").value;
    //  document.getElementById("refDay").value=document.getElementById("every").value;
    if (document.getElementById("recurrenceEndAfter").checked == true)
    {
        document.getElementById("recurrenceEnd").value="after";
        document.getElementById("refEndValue").value=document.getElementById("refCount").value;
    }
    else
    {
        document.getElementById("recurrenceEnd").value="on";
        document.getElementById("refEndValue").value=document.getElementById("date").value;
    }
    if (document.getElementById("checkRefresh").checked == true)
        document.getElementById("checkRefreshVal").value="Y";
    else
        document.getElementById("checkRefreshVal").value="N";

    if (document.getElementById("refNow").checked == true)
        document.getElementById("currentRefStatus").value="Y";
    else
        document.getElementById("currentRefStatus").value="N";


}
function asignValues()
{

    var jobId = document.getElementById("jobId").value;
    document.getElementById("file").value=jobId;
    document.getElementById("refreshPattern").value=document.getElementById("refType"+jobId).value;

    if (document.getElementById("refType"+jobId).value=="")
    {
        document.getElementById("refreshPattern").value="disable";
        document.getElementById("refNow").checked=true;
        changeTab('1', 'loginbutton', 'rSubuser', 'conTab', 'rTabSel', 'rTab');
    }
    else
    {
        document.getElementById("refSchedule").checked=true;
        changeTab('2', 'loginbutton', 'rSubuser', 'conTab', 'rTabSel', 'rTab')
    }
    if (document.getElementById("refreshPattern").value=="Monthly")
    {
        //    document.getElementById("every").disabled="disabled";
    }
    document.getElementById("stDate").value=document.getElementById("refStartDate"+jobId).value;
    var refPattern = document.getElementById("refPattern"+jobId).value;
    if (refPattern == "after")
    {
        document.getElementById("recurrenceEndAfter").checked=true;
        document.getElementById("refCount").value=document.getElementById("refEndCount"+jobId).value;

    }
    else
    {
        document.getElementById("recurrenceEndOn").checked=true;
        document.getElementById("date").value=document.getElementById("refEndDate"+jobId).value;
    }
}

function jp_checkDateRange(start,end)
{
    try
    {
        var startDate = document.getElementById(start).value;
        var from = startDate.split("-");
        var y1 = from[0];
        var m1 = from[1];
        var d1 = from[2];

        var endDate = document.getElementById(end).value;
        var to = endDate.split("-");
        var y2 = to[0];
        var m2 = to[1];
        var d2 = to[2];

        // if both are specified only then check range
        if(startDate!="" && endDate =="")
            return false;
        if(startDate=="" && endDate !="")
            return false;

        if (y1 > y2)
            return false;
        if (y1 < y2)
            return true;

        // This length check is necessary before comparing them
        if(m1 && m2) {
            if (m1.length == 1)
                m1 = "0" + m1;
            if (m2.length == 1)
                m2 = "0" + m2;
        }
        if (m1 > m2)
            return false;
        if (m1 < m2)
            return true;

        /* This length check is necessary before comparing them */
        if(d1 && d2) {
            if (d1.length == 1)
                d1 = "0" + d1;
            if (d2.length == 1)
                d2 = "0" + d2;
        }
        if (d1 && d2 && d1 > d2) // if d1 & d2 are not 0, & d1 >= d2
            return false;

        return true;
    }
    catch(e) {}
}
// Code corresponding to HTML Editor.
var FCKeditorAPI  // need to declare it in order to test it
var intFCKCheck   // our setTimeout pointer
var oFCKeditor    // used for our FCKEditor objects
var arr_fckfields = ["iddescription", "candidateProfile"]; // list of editor fields
var arr_editorinfo = {"iddescription":"info1", "candidateProfile":"info2"}; // list of related info fields

function updateEditorThrobber() {
    for (cntr=0;cntr < arr_fckfields.length;cntr++) {
        var objImageEditorLoading = new Image(128,15);
        objImageEditorLoading.src=imgPath+"/editor-loading.gif";
        var objDivLoading = null;
        objDivLoading = document.createElement('div');
        objDivLoading.id = arr_fckfields[cntr]+'_loading';
        objDivLoading.className = 'remainchar';
        objDivLoading.style.textAlign = 'center';
        objDivLoading.appendChild(objImageEditorLoading);
        gbi(arr_fckfields[cntr]).style.display = 'none';
        gbi(arr_fckfields[cntr]).parentNode.insertBefore(objDivLoading, gbi(arr_fckfields[cntr]).parentNode.firstChild.nextSibling.nextSibling);
    }
    return true;
}
function loadHTMLEditor(objConfig) // called from the body onload event.
{
    var cntr = 0;
    if(subcat == 1 || subcat == 80 || subcat == 81 || subcat == 3) {

        // set the FCK polling timeout
        intFCKCheck = window.setInterval('checkFCKisReady()',100)
        // create the first editor object to kick off the FCK core code.
        var updateThrobber = updateEditorThrobber();
        oFCKeditor = new FCKeditor(arr_fckfields[cntr],  '380px', '150px', 'Basic')
        oFCKeditor.BasePath = jsPath + '/fckeditor/'
        // Override the default configuation values
        if ( typeof objConfig == 'object' && objConfig[arr_fckfields[cntr]].ToolbarSet) {
            oFCKeditor.ToolbarSet = objConfig[arr_fckfields[cntr]].ToolbarSet;
        }
        oFCKeditor.ReplaceTextarea()
    }
}

function checkFCKisReady()  // this is the polling function
{
    if(typeof(FCKeditorAPI) != 'undefined') // it's available now!
    {
        // stop checking already.
        window.clearInterval(intFCKCheck)

        // now create as many more fckeditor objects as you like.
        for (cntr=1;cntr < arr_fckfields.length;cntr++) {
            /*
             var objDivLoading = document.createElement('div');
             objDivLoading.id = arr_fckfields[cntr]+'_loading';
             objDivLoading.className = 'remainchar';
             objDivLoading.style.textAlign = 'center';
             objDivLoading.appendChild(objImageEditorLoading);
             gbi(arr_fckfields[cntr]).style.display = 'none';
             gbi(arr_fckfields[cntr]).parentNode.insertBefore(objDivLoading, gbi(arr_fckfields[cntr]).parentNode.firstChild.nextSibling.nextSibling);

             gbi(arr_fckfields[cntr]).style.display = 'none';*/
            oFCKeditor = new FCKeditor(arr_fckfields[cntr], '380px', '150px', 'Basic')
            oFCKeditor.BasePath = jsPath + '/fckeditor/'
            oFCKeditor.ReplaceTextarea()
        }
    }
}
function strip_tags(str, allowed_tags) {

    if(trim(str) == '')
        return str;
    var key = '', allowed = false;
    var matches = [];
    var allowed_array = [];
    var allowed_tag = '';
    var i = 0;
    var k = '';
    var html = '';

    var replacer = function(search, replace, str) {
        return str.split(search).join(replace);
    };

    // Build allowes tags associative array
    if (allowed_tags) {
        allowed_array = allowed_tags.match(/([a-zA-Z]+)/gi);
    }

    str += '';

    // Match tags
    matches = str.match(/(<\/?[\S][^>]*>)/gi);

    // Go through all HTML tags
    for (key in matches) {
        if (isNaN(key)) {
            // IE7 Hack
            continue;
        }

        // Save HTML tag
        html = matches[key].toString();

        // Is tag not in allowed list? Remove from str!
        allowed = false;

        // Go through all allowed tags
        for (k in allowed_array) {
            // Init
            allowed_tag = allowed_array[k];
            i = -1;

            if (i != 0) {i = html.toLowerCase().indexOf('<'+allowed_tag+'>');}
            if (i != 0) {i = html.toLowerCase().indexOf('<'+allowed_tag+' ');}
            if (i != 0) {i = html.toLowerCase().indexOf('</'+allowed_tag)   ;}

            // Determine
            if (i == 0) {
                allowed = true;
                break;
            }
        }

        if (!allowed) {
            str = replacer(html, "", str); // Custom replace. No regexing
        }
    }

    return str;
}

function getEditorHTML(eleName) {
    try {
        var tvar = 'init';
        var oEditor = eleName.objContDocBody.innerHTML ;
        var origHTML =  eleName.objContDocBody.innerHTML;//oEditor.GetXHTML();
        if(eleName) {
            origHTML = getFCKEditorString(origHTML);
            var origStrippedHTML = strip_tags(origHTML);
            var decodedOrigStrippedHTML = html_entity_decode(origStrippedHTML);
            var textHTML = html_entity_decode(origHTML);
            var strippedHTML = strip_tags(textHTML);
            if (decodedOrigStrippedHTML == strippedHTML) {
                return strippedHTML;
            }
            else {
                return decodedOrigStrippedHTML;
            }
        }
        else {
            return origHTML;
        }
    }catch(e){}
}

function getFCKEditorString(stringVal) {
    var stringval = stringVal;
    var regReplaceHTML = new RegExp('&nbsp;|<p[^>]*>|<br[^>]*>|<\\s*li[^>]*>',"gi");        //Replaces with a whitespace.
    var regRemoveHTML = new RegExp('</p>',"gi");        //Replaces with a whitespace.
    var regReplaceHTMLTags = new RegExp('&lt;\/?html&gt;|&lt;\/?body&gt;|&lt;\/?head&gt;|&lt;\/?title&gt;',"gi");
    stringval = stringval.replace(regReplaceHTML," ");
    stringval = stringval.replace(regReplaceHTMLTags,"&lt;app_htmltag&gt;");
    stringval = stringval.replace(regRemoveHTML,"");
    return stringval;
}
// Code corresponding to Auto Save Notifier.
h = (typeof(window.innerHeight) != 'undefined' ? window.innerHeight : document.documentElement.clientHeight);
var scrOfX = 0, scrOfY = 0;
getScrollXY();
if(gbi('savingD'))
    gbi('savingD').style.top=scrOfY+h-32+"px";
if(gbi('savingDif'))
    gbi('savingDif').style.top=scrOfY+h-32+"px";

function getScrollXY() {
    scrOfX = 0, scrOfY = 0;
    h = (typeof(window.innerHeight) != 'undefined' ? window.innerHeight : document.documentElement.clientHeight);
    if( typeof( window.pageYOffset ) == 'number' ) {
        //Netscape compliant
        scrOfY = window.pageYOffset;
        scrOfX = window.pageXOffset;
    } else if( document.body && ( document.body.scrollLeft || document.body.scrollTop ) ) {
        //DOM compliant
        scrOfY = document.body.scrollTop;
        scrOfX = document.body.scrollLeft;
    } else if( document.documentElement && ( document.documentElement.scrollLeft || document.documentElement.scrollTop ) ) {
        //IE6 standards compliant mode
        scrOfY = document.documentElement.scrollTop;
        scrOfX = document.documentElement.scrollLeft;
    }
    //return [ scrOfX, scrOfY ];
}
function setSavedStatus() {
    getScrollXY();
    var a=setTimeout('getScrollXY', 1000);
    if(gbi('savingD')) {
        gbi('savingD').style.top=scrOfY+h-32+"px";
        gbi('savingD').style.right="2px";
    }
    if(gbi('savingDif'))
        gbi('savingDif').style.top=scrOfY+h-32+"px";
}
window.onscroll=setSavedStatus;
window.onresize=setSavedStatus;

function gbi(layid){
    return document.getElementById(layid);
}

function showAction(idx, jobId, sCId, jState, bool, obj){
    obj1=obj;
    var curleft = curtop = 0;
    if (obj.offsetParent) {
        curleft = obj.offsetLeft
        curtop = obj.offsetTop
        while (obj = obj.offsetParent) {
            curleft += obj.offsetLeft
            curtop += obj.offsetTop
        }
    }
    curleft=curleft-25;
    curtop=curtop-5;

    var crtAnc=document.createElement('div');
    crtAnc.id='actionLayer';
    crtAnc.className='ancCrt';
    crtAnc.style.left=(curleft-5)+"px";
    crtAnc.style.top=(curtop)+"px";
    crtAnc.onclick=function(){hideAction();}


    crtAnc.innerHTML="<div style='background:#8498c5; height:20px; line-height:20px; cursor:pointer; text-align:center'>Action</div>";
    if(jState == "active") {
        if(bool == "true")
            crtAnc.innerHTML+="<a  href='"+jpurl+"/edit?jobId="+jobId+"&subCategoryId="+sCId+"&id="+id+"' class='editAc' target='_blank'>Edit</a><a href='javascript:void(0);' onclick='document.getElementById(\"jobId\").value=\""+jobId+"\", asignValues(), document.getElementById(\"subCategoryId\").value=\""+sCId+"\" , modalwin(\"490\",\"300\",\"autorefresh\","+obj+");checkAutoRefreshOptions();' class='refreshAc'>Refresh</a><span class='repostDs'>Repost</span><span><a href='"+jpurl+"/../ContactList/index?file="+jobId+"' class='shareico' target='_blank'>Broadcast</a></span>";
        else if(bool == "false")
            crtAnc.innerHTML+="<a  href='"+jpurl+"/edit?jobId="+jobId+"&subCategoryId="+sCId+"&id="+id+"' class='editAc' target='_blank'>Edit</a><span class='refreshDs'>Refresh</span><span class='repostDs'>Repost</span><a href='"+jpurl+"/../ContactList/index?file="+jobId+"' class='shareico' target='_blank'>Broadcast</a>";
    }
    else if(jState=="inactive")
        if(bool == "true")
            crtAnc.innerHTML+="<span class='editDs'>Edit</span><span class='refreshDs'>Refresh</span><a href='"+jpurl+"/recall?jobId="+jobId+"&subCategoryId="+sCId+"&id="+id+"' class='repostAc'>Repost</a>";
        else if(bool == "false")
            crtAnc.innerHTML+="<span class='editDs'>Edit</span><span class='refreshDs'>Refresh</span><span class='repostDs'>Repost</span>";

    var objNew1=obj1.parentNode;
    objNew1.lastNode
    objNew1.appendChild(crtAnc);
}
document.onclick=function(e){
    if(navigator.appName=='Microsoft Internet Explorer')
        var element = window.event.srcElement;
    else
        var element = e.target;
    if(element.innerHTML!='Action'){
        hideAction();
    }
}
function hideAction(){
    var crtAnc=document.getElementById('actionLayer');
    if(crtAnc)
        (crtAnc.parentNode).removeChild(crtAnc);

}
function fillLBDetails(name, sid, pgno, totpg, formName) {
    switch(name) {
        case 'unshare':
            document.getElementById("LBHeader").innerHTML = "Unshare";
            document.getElementById("LBmsg").innerHTML = "Other subusers will not be able to manage the selected job(s) and its responses. <br /><strong>Do you wish to un-share selected job(s)?</strong>";
            document.getElementById("LBAction").value = "Unshare";
            document.getElementById("LBAction").onclick = function() {hidemodal();toggleShare(sid,pgno,totpg,formName,'unshare');}
            break;
        case 'share':
            document.getElementById("LBHeader").innerHTML = "Share";
            document.getElementById("LBmsg").innerHTML = "All the subusers will be able to manage the selected job(s) and its responses. <br /><strong>Do you wish to share the selected job(s)?</strong>";
            document.getElementById("LBAction").value = "Share";
            document.getElementById("LBAction").onclick = function() {hidemodal();toggleShare(sid,pgno,totpg,formName,'share');}
            break;
        default:
            break;
    }
}
function toggleShare(sid, currPg, totalPg, formName, option) {
    if(currPg > totalPg)
        currPg = totalPg;
    else if ( currPg == totalPg)
        currPg = totalPg - 1;

    document.getElementById('id_pageno').value = currPg;

    if(formName == 'frmJobListing')
        document.forms[formName].action = devJPListing + "/JobListing/clickedOption?sessionId="+sid+"&option="+option;

    document.forms[formName].method = "post";
    document.forms[formName].submit();
}

function validateCheckBoxStatus(appType) {
    switch(appType) {
        case 'delete':
            var message = "Please select atleast 1 job to "+appType+".";
            break;
        case 'share':
            var message = "Please select atleast 1 job to "+appType+".";
            break;
        case 'unshare':
            var message = "Please select atleast 1 job to "+appType+".";
            break;
        default:
            var message = "Please select atleast 1 job";
            break;
    }
    var arrDeleteEle = document.getElementById('checkBoxes').getElementsByTagName('input');
    var checkCount = 0;
    for(i=0;i<arrDeleteEle.length;i++)
    {
        if(arrDeleteEle[i].type == "checkbox" && arrDeleteEle[i].checked == true && arrDeleteEle[i].value != "checkbox") {
            checkCount++;
        }
    }

    if(checkCount > 0)
        return true;
    else
    {
        if(document.getElementById('greenmess'))
            document.getElementById('greenmess').style.display = "none";
        document.getElementById('errormess').style.display = "block";
        document.getElementById('error_delete').innerHTML = message;
        return false;
    }
}


function selEmail(obj,manageResp){
    var getName=obj.parentNode.parentNode.parentNode.id;
    var getNameArr=getName.split('Area');
    var getN=getNameArr[0];
    if(obj.checked){
        gbi(getN+'Container').style.display='block';
        var getLab=obj.parentNode.getElementsByTagName('div')
        var getL=getLab[0].innerHTML;
        gbi(getN+'disp').innerHTML+="<span>"+getL+"<a id='anc"+getL+"' href='javascript:void(0);' onClick=\"removeEmId(this,\'"+getL+"\',\'"+manageResp+"\');\"><img hspace='4' height='9' border='0' width='9' alt='' src='https://static.naukri.com/rstatic/images/cross_small.gif'/></a> </span>";
    }
    else{
        var getLab=obj.parentNode.getElementsByTagName('div')
        var getL=getLab[0].innerHTML;
        if(gbi("anc"+getL)){
            gbi("anc"+getL).parentNode.parentNode.removeChild(gbi("anc"+getL).parentNode);
        }
    }
}

function removeEmId(obj, email,manageResp){
    if (manageResp=="eapps")
        gbi('autoFwdchk'+email).checked='';
    else
        gbi('chk'+email).checked='';
    obj.parentNode.parentNode.removeChild(obj.parentNode);
}
function checkDefaultEmailVal(obj)
{
    obj.className="w145";
    if ((obj.value=="Add another Email Id") ||  obj.value=="Specify new email id")
    {
        obj.value="";
        obj.style.color = '#000';
    }
}
function removeAllEM(id) {

    var i;
    var length=eappsEmailDD.selValue.length;
    for(i=0;i<length;i++){
        eappsEmailDD.selValue.splice(0,1);
    }


    gbi(id).innerHTML='';
    if(id=="eappsContainerSelector2"){
        gbi('autoFwdEmailContainer').style.display='none';
        gbi('setFilterN').style.display="none";
    }

}


function showHide(show,hide,showTab,hideTab)
{
    if (document.getElementById('errormess'))
        document.getElementById('errormess').style.display="none";
    if (document.getElementById('global_errMsg'))
        document.getElementById('global_errMsg').style.display="none";
    document.getElementById(show).style.display="block";
    document.getElementById(hide).style.display="none";
    document.getElementById(showTab).className="sel";
    document.getElementById(hideTab).className="unsel";
}

function showStatusMsgNetwork(show,showTab)
{
    document.getElementById('statusMsgFacebk').style.display="none";
    // Commenting this to disable Twitter
    //document.getElementById('statusMsgTwitter').style.display="none";
    document.getElementById(show).style.display="block";
    document.getElementById('statusMsgFacebkTab').className='tabUnsel';
    // Commenting this to disable Twitter
    //document.getElementById('statusMsgTwitterTab').className='tabUnsel';
    document.getElementById(showTab).className='tabsel';
}

function showNetworkName(network1,id)
{
    makeNetworkSelUnSel(id);
    if (network1!="savedList")
    {
        document.getElementById('nwEmails').style.display="block";
        //  document.getElementById('networkName').innerHTML=network1;

        document.getElementById('savedList').style.display="none";
        document.getElementById('contBtn').style.display="block";
    }
    else
    {
        document.getElementById('nwEmails').style.display="none";
        document.getElementById('savedList').style.display="block";
        if(document.getElementById('savedListBox').style.display=="none")
            document.getElementById('contBtn').style.display="none";
        else
            document.getElementById('contBtn').style.display="block";


    }
}


function showNetworkNameSecond(network1,id)
{
    makeNetworkSelUnSel(id);
    if (network1!="savedList")
    {
        document.getElementById('nwEmails').style.display="block";
        document.getElementById('savedList').style.display="none";
        document.getElementById('contBtn').style.display="block";
        if(network1!="Linkedin")
        {
            document.getElementById('linkImg').style.display="none";
        }
        else
        {
            if((document.getElementById('showCaptcha').value=="1") && (document.getElementById('nwEmails').style.display=="block"))
            {
                document.getElementById('nwEmails').style.display="none";
                document.getElementById('linkImg').style.display="block";
            }
            else
                document.getElementById('linkImg').style.display="none";
        }
    }
    else
    {
        document.getElementById('linkImg').style.display="none";
        document.getElementById('nwEmails').style.display="none";
        document.getElementById('savedList').style.display="block";
        if(document.getElementById('savedListBox').style.display=="none")
            document.getElementById('contBtn').style.display="none";
        else
            document.getElementById('contBtn').style.display="block";


    }
}


function showNetworkLabels(network)
{
    document.getElementById('site').value=network;
}
function makeNetworkSelUnSel(id)
{
    document.getElementById('getContBrijj').className='tabUnsel';
    document.getElementById('getContGmail').className='tabUnsel';
    //        document.getElementById('getContYahoo').className='tabUnsel';
    // Commenting this to disable LinkedIn
    //        document.getElementById('getContLink').className='tabUnsel';
    document.getElementById('getContSaved').className='tabUnsel';
    document.getElementById(id).className='tabsel';
}

function showSelectedNetwork1(network,flag,LinkdinImage)
{
    document.getElementById('linkImg').style.display="none";
    if(network=="Gmail")
        makeNetworkSelUnSel('getContGmail');
    else if (network=="Brijj")
        makeNetworkSelUnSel('getContBrijj');
        //  else if (network=="Yahoo")
    //              makeNetworkSelUnSel('getContYahoo');
    else if (network=="Linkedin")
    {
        document.getElementById('table'+network).style.display="none";
        document.getElementById('LoginBx').style.display="block";
        document.getElementById('nwEmails').style.display="none";
        document.getElementById('signoutSpan').style.display="none";
        document.getElementById('login'+network).value="login";
        document.getElementById('linkImg').style.display="block";
        //       document.getElementById('showCaptcha').value="1";

        // makeNetworkSelUnSel('getContLink');

        //      makeNetworkSelUnSel('getContLink');
    }
    else
        makeNetworkSelUnSel('getContSaved');

    if(network=="savedList")
    {
        document.getElementById('signoutSpan').style.display='none';
    }
    else
        document.getElementById('signoutSpan').style.display='block';
    if(flag=='1')
    {
        if(network!="Linkedin")
        {
            document.getElementById('networkName'+network).innerHTML=network;
            document.getElementById('table'+network).style.display="block";
            document.getElementById('login'+network).value="email";
        }
    }
}

function changeNetwork(network)
{
    document.getElementById('networkNameLogin').innerHTML=network;
    document.getElementById('site').value=network;
    if(document.getElementById('login'+network).value=="login")
    {
        document.getElementById('LoginBx').style.display="block";
        document.getElementById('tableBrijj').style.display="none";
        document.getElementById('tableGmail').style.display="none";
        document.getElementById('tableLinkedin').style.display="none";
        //    document.getElementById('tableYahoo').style.display="none";
        document.getElementById('tablesavedList').style.display="none";
    }
    else
    {
        document.getElementById('LoginBx').style.display="none";
        document.getElementById('tableBrijj').style.display="none";
        document.getElementById('tablesavedList').style.display="none";
        document.getElementById('tableGmail').style.display="none";
        //                document.getElementById('tableYahoo').style.display="none";
        document.getElementById('tableLinkedin').style.display="none";
        document.getElementById('table'+network).style.display="block";
    }
}
function moveEmailIdShareJob(email)
{
    if (document.getElementById("chk"+email).checked)
    {
        strSelectedEmails=document.getElementById('selectedEmails').value;
        var arrSelectedEmails = new Array();
        arrSelectedEmails = strSelectedEmails.split("##");
        cnt = (arrSelectedEmails.length) -1;
        if (cnt<=999)
        {
            document.getElementById('selItems').innerHTML+="<span >"+email+"<a id='anc"+email+"' href='javascript:void(0);' onClick=\"removeEmailId(this,\'"+email+"\');\"><img hspace='4' height='9' border='0' width='9' alt='' src='https://static.naukri.com/rstatic/images/cross_small.gif'/></a></span>";
            document.getElementById('selectedEmails').value=document.getElementById('selectedEmails').value+"##"+email;
        }
        else
        {
            document.getElementById('errormess').style.display="block";
            document.getElementById('global_errMsg').innerHTML="You can not select more than 10 email ids";
            self.scrollTo(0, 0);

        }
    }
    else
    {
        obj = document.getElementById('anc'+email);
        removeEmailId(obj,email);
    }
}


function moveEmailIdShareJobObj(obj)
{
    email=obj.value;
    if (document.getElementById("chk"+email).checked)
    {
        strSelectedEmails=document.getElementById('selectedEmails').value;
        var arrSelectedEmails = new Array();
        arrSelectedEmails = strSelectedEmails.split("##");
        cnt = (arrSelectedEmails.length) -1;
        if (cnt<=999)
        {
            document.getElementById('selItems').innerHTML+="<span >"+email+"<a id='anc"+email+"' href='javascript:void(0);' onClick=\"removeEmailId(this,\'"+email+"\');\"><img hspace='4' height='9' border='0' width='9' alt='' src='https://static.naukri.com/rstatic/images/cross_small.gif'/></a></span>";
            document.getElementById('selectedEmails').value=document.getElementById('selectedEmails').value+"##"+email;
        }
        else
        {
            document.getElementById('errormess').style.display="block";
            //                document.getElementById('errormess').className="error";
            document.getElementById('global_errMsg').innerHTML="You can not select more than 1000 email ids";
            self.scrollTo(0, 0);
        }
    }
    else
    {
        obj = document.getElementById('anc'+email);
        removeEmailId(obj,email);
    }
}


function removeEmailId(obj,email)
{
    document.getElementById("chk"+email).checked="";
    strSelectedEmails=document.getElementById('selectedEmails').value;
    var arrSelectedEmails = new Array();
    arrSelectedEmails = strSelectedEmails.split("##");
    cnt = (arrSelectedEmails.length);
    strNewEmail="";
    for(x=1;x<cnt;x++)
    {
        if (arrSelectedEmails[x]!=email)
            strNewEmail+="##"+arrSelectedEmails[x];
    }
    document.getElementById('selectedEmails').value=strNewEmail;
    if (obj)
    {
        OBJ= obj.parentNode;
        OBJpr = document.getElementById('selItems');
        OBJpr.removeChild(OBJ)  ;
    }
}
function removeAll1(selItems,pg,pgContainer)
{
    //network=document.getElementById('site').value;
    var arrNetwork = new Array();
    arrNetwork[0]="Gmail";
    //  arrNetwork[1]="Yahoo"; // INCRMENT THE COUNTRT WHEN REMOVING
    arrNetwork[1]="Linkedin";
    arrNetwork[2]="Brijj";
    arrNetwork[3]="savedList";
    for(a=0;a<=3;a++)
    {

        obj =  document.getElementById('table'+arrNetwork[a]);
        var arrInputs =  obj.getElementsByTagName('input');
        cnt1= arrInputs.length-1;
        for(y=1;y<=cnt1;y++)
        {
            if(arrInputs[y].checked)
            {
                arrInputs[y].checked="";
                objAnc = document.getElementById('anc'+arrInputs[y].value);
                removeEmailId(objAnc,arrInputs[y].value);
            }
        }
        document.getElementById('selectall'+arrNetwork[a]).checked="";
    }
    document.getElementById(selItems).innerHTML='';
    document.getElementById('selectedEmails').value="";
}
function signout()
{
    network=document.getElementById('site').value;
    document.getElementById('networkNameLogin').innerHTML=network;
    document.getElementById('login'+network).value="login";
    document.getElementById('table'+network).style.display="none";
    document.getElementById('LoginBx').style.display="block";
    document.getElementById('nwEmails').style.display="block";
    document.getElementById('linkImg').style.display="none";
    document.getElementById('signoutSpan').style.display="none";
}
function checkSignOut(network)
{
    if(network!='savedList')
    {
        if (document.getElementById('login'+network).value=="login")
            document.getElementById('signoutSpan').style.display="none";
        else
            document.getElementById('signoutSpan').style.display="block";
    }
    else
    {
        document.getElementById('signoutSpan').style.display="none";
    }
    if(network=="Linkedin")
    {
        if((document.getElementById('showCaptcha').value=="1") )
        {
            document.getElementById('signoutSpan').style.display="block";
        }
    }

}

function selectAll(network)
{
    if (document.getElementById('selectall'+network).checked)
    {
        obj =  document.getElementById('table'+network);
        var arrInputs =  obj.getElementsByTagName('input');
        cnt1= arrInputs.length-1;
        strSelectedEmails=document.getElementById('selectedEmails').value;
        var arrSelectedEmails = new Array();
        arrSelectedEmails = strSelectedEmails.split("##");
        cntSelected = (arrSelectedEmails.length) -1;
        if (cnt1-cntSelected<=1000)

        {
            for(var x=1;x<=cnt1;x++)
            {
                if (!document.getElementById('chk'+arrInputs[x].value).checked)
                {
                    arrInputs[x].checked="checked";
                    moveEmailIdShareJob(arrInputs[x].value);
                }

            }
        }
        else
        {
            alert("You can not select more than 1000 email ids");
            document.getElementById('selectall'+network).checked="";
        }
    }
    else
    {
        obj =  document.getElementById('table'+network);
        var arrInputs =  obj.getElementsByTagName('input');
        cnt1= arrInputs.length-1;
        for(y=1;y<=cnt1;y++)
        {
            if(arrInputs[y].checked)
            {
                arrInputs[y].checked="";
                objAnc = document.getElementById('anc'+arrInputs[y].value);
                removeEmailId(objAnc,arrInputs[y].value);
            }


        }

    }
}

function validateShare(uname,pwd)
{
    usrname=document.getElementById(uname).value;
    pswd=document.getElementById(pwd).value;
    if(usrname=="")
    {
        document.getElementById(uname+'err').className="error";
        document.getElementById(pwd+'err').innerHTML="Please enter a username";
        return false;
    }
    return false;
}

function validateShareJobs()
{
    document.getElementById('saveList_error').className="";
    document.getElementById('saveList_error').innerHTML="";

    if (document.getElementById('selectedEmails').value=="")
    {
        document.getElementById('saveList_error').className="error";
        document.getElementById('saveList_error').innerHTML="Please select atleast one email id in your list ";
        return false;

    }
    email=document.getElementById('from').value;
    if(!validateEmailAddr(email))
    {
        alert("Please enter a valid email id ");
        return false;
    }
    return true;
}

function validateUnamePwd(uname,pwd)
{
    if (document.getElementById('savedList').style.display=="none")
    {
        usrname=document.getElementById(uname).value;
        pswd=document.getElementById(pwd).value;
        if(usrname=="")
        {
            document.getElementById(uname+'_err').className="error";
            document.getElementById(uname+'_err').innerHTML="Please enter a username";
            return false;
        }
        else
            document.getElementById(uname+'_err').className="noerror";
        if(pswd=="")
        {
            document.getElementById(pwd+'_err').className="error";
            document.getElementById(pwd+'_err').innerHTML="Please enter a password";
            return false;
        }
        else
            document.getElementById(pwd+'_err').className="noerror";
        return true;
    }
    else
    {
        if (document.getElementById('listName').value=="-1")
        {
            document.getElementById('savedList_err').innerHTML='Please select a list.';
            document.getElementById('savedList_err').style.display="block";
            return false;
        }
        return true;
    }
}

function showEmailSelected(strEmailSel){        ///// To Be Removed Probably
    objEmail=document.getElementById('email_1');
    if(objEmail)
    {
        arrEmail=objEmail.getElementsByTagName('input');
        arrEmailSel=strEmailSel.split(",");
        for(x=0;x<arrEmail.length;x++)
        {
            arrEmail[x].checked="";
        }
        for(i=0;i<arrEmailSel.length;i++)
        {
            for(x=0;x<arrEmail.length;x++)
            {
                if(arrEmail[x].value==arrEmailSel[i])
                    arrEmail[x].checked="checked";
            }
        }
        document.getElementById('collectresp_email').checked="checked";
    }
}

function showAutoFwdEmailSelected(strEmailSel){      ///// To Be Removed Probably
    objEmail=document.getElementById('email_2');
    if(objEmail)
    {

        arrEmail=objEmail.getElementsByTagName('input');
        arrEmailSel=strEmailSel.split(",");
        for(x=0;x<arrEmail.length;x++)
        {
            arrEmail[x].checked="";
        }

        for(i=0;i<arrEmailSel.length;i++)
        {
            for(x=0;x<arrEmail.length;x++)
            {
                if(arrEmail[x].value==arrEmailSel[i])
                    arrEmail[x].checked="checked";
            }
        }
        document.getElementById('collectresp_eapps').checked="checked";
    }
    else{
        if(document.getElementById('collectresp_offl')== null){}
        else{
            document.getElementById('collectresp_offl').checked="checked";
        }
    }
}

function checkSelectedContacts(obj)
{
    selEmails = document.getElementById('selectedEmails').value;
    document.getElementById('saveList_error').className="";
    document.getElementById('saveList_error').innerHTML="";
    if (selEmails=="")
    {
        document.getElementById('saveList_error').className="error";
        document.getElementById('saveList_error').innerHTML="Please select atleast one email id in your list ";
        return false;
    }
    modalwin('420','240','lb',obj);
    return true;
}

//-------------------autosuggest_resdex.js start-------------------

function in_array_sugg(arr,str)
{
    for (var i in arr) {if (arr[i] === str) return i;}
    return -1;
}

function createAutoSuggest()
{
    new AutoSuggest(document.getElementById(suggestelement),form_n);
}

function markbold(str1,str2)
{
    index = str2.indexOf(str1);
    var str_ret="";
    str_ret += str2.substr(0,index);
    str_ret += "<b>"+str2.substr(index,str1.length)+"</b>";
    str_ret += str2.substr((index+str1.length),str2.length);
    return str_ret;
}

function setValue(val)
{
    document.getElementById(suggestelement).value=val;
}

function getHTTPObject()
{
    var http_request;

    if (window.XMLHttpRequest) { // For Mozilla and other browsers
        http_request = new XMLHttpRequest();
        if (http_request.overrideMimeType) {
            http_request.overrideMimeType('text/xml');
        }
    }
    else if (window.ActiveXObject) { // For Internet Explorer
        try {
            http_request = new ActiveXObject("Msxml2.XMLHTTP");
        } catch (e) {
            try {
                http_request = new ActiveXObject("Microsoft.XMLHTTP");
            }
            catch (e) {}             }
    }
    if (!http_request) {
        alert('Giving up :( Cannot create an XMLHTTP instance');
        return false;
    }

    return http_request;
}

var http_suggest = new getHTTPObject();

function getdata()
{
    http_suggest.open("GET",url+"set="+set,true);
    http_suggest.onreadystatechange = handleHttpResponse;
    http_suggest.send(null);
}
function call_getdata()
{
    set++;
    http_suggest = null;
    http_suggest = new getHTTPObject();
    getdata();
}
function handleHttpResponse()
{
    if (http_suggest.readyState == 4)
    {
        var doc = http_suggest.responseText;
        if(doc)
        {
            var temp = doc.split('|');
            sample = sample.concat(temp.slice(1,temp.length));

            if(b==0)
            {
                if (document.getElementById(suggestelement))
                {
                    createAutoSuggest();
                }
                else
                {
                    a = 1;
                }
                b=1;
            }

            if(temp[0]=='')
                setTimeout("call_getdata()",2000);
        }
    }
}
var idCounter = 0;

function AutoSuggest(elem, formname)
{
    var me = this;
    this.elem = elem;
    this.eligible = new Array();
    this.inputText = null;
    this.highlighted = -1;
    this.div = document.getElementById("autosuggest");
    this.div.style.zIndex=1000;
    var TAB = 9;
    var ESC = 27;
    var KEYUP = 38;
    var KEYDN = 40;
    var ENTER = 13;
    var cntr = 0;
    var maxlist = 20;
    var flag_ie = false;
    var leftover = "";
    elem.setAttribute("autocomplete","off");
    if(!elem.id)
    {
        var id = "autosuggest" + idCounter;
        idCounter++;
        elem.id = id;
    }
    elem.onblur = function(ev)
    {
        me.hideDiv();
        if(elem.id=='desig' || elem.id=='compName' || elem.id=='hiringFor' || elem.id=='keyword'){
            hidetip();
            if(elem.id=='desig')
                setBlurCont(elem, 'Use Complete words Eg: Type Senior Manager, not Sr. Mgr.');
            if(elem.id=='hiringFor')
                setBlurCont(elem, 'Enter the name/description of the company you are hiring for');
            if(elem.id=='keyword')
                setBlurCont(elem, 'Use Complete words. Eg: Type Customer Executive, not Cust. Exec.');
        }
    }
    elem.onkeydown = function(ev)
    {
        newflag = "";
        var key = me.getKeyCode(ev);

        switch(key)
        {
            case TAB:
                me.useSuggestion();
                break;

            case ENTER:

                newflag = "DOWN";
                var val_ret = me.useSuggestion();
                if(val_ret == 0)
                    newflag = "";
                else
                    return false;
                break;

            case ESC:
                me.hideDiv();
                break;

            case KEYUP:
                if (me.highlighted > 0)
                {
                    me.highlighted--;
                }
                me.changeHighlight(key);
                break;

            case KEYDN:
                if (me.highlighted < (me.eligible.length - 1) && me.highlighted < (maxlist-1))
                {
                    me.highlighted++;
                }
                me.changeHighlight(key);
                break;
        }
    };

    elem.onkeyup = function(ev)
    {
        newflag = "";
        var key = me.getKeyCode(ev);

        switch(key)
        {
            case ENTER:
                newflag = "UP";
            case TAB:
            case ESC:
            case KEYUP:
            case KEYDN:
                return;
            default:
                if(trim(this.value).length > 1)
                {
                    var str_input = this.value;
                    var arr_tmp = str_input.split(',');
                    if(arr_tmp.length>1 && (this.id == 'compName' || this.id == 'desig' || this.id == 'hiringFor'||this.id=='keyword'))
                    {
                        str_input=trim(arr_tmp[arr_tmp.length-1]);
                        if(str_input.length<=1) str_input = '';

                        arr_tmp = arr_tmp.slice(0,arr_tmp.length-1);
                        leftover = arr_tmp.join(',');
                    }
                    delete(arr_tmp);
                    str_input = str_input.replace(/[@;:!&\s]+/g," ");
                    str_input = str_input.replace(/^\s/,"");
                    // CLEANUP END
                    if(str_input.length <= 0)
                    {
                        leftover='';
                        me.hideDiv();
                        return;
                    }

                    me.inputText = str_input;
                    var return_len = me.getEligible();
                    if(return_len > 0)
                    {
                        me.createDiv();
                        me.positionDiv();
                        me.showDiv();
                    }
                    else
                    {
                        me.hideDiv();
                    }
                }
                else
                {
                    leftover='';
                    me.inputText = '';
                    me.hideDiv();
                }
        }
    };
    this.useSuggestion = function()
    {
        if (this.highlighted > -1)
        {
            if(document.getElementById("uen")) document.getElementById("uen").value = this.elem.value;

            if(leftover != '') leftover += ',';
            this.elem.value = leftover+this.eligible[this.highlighted];
            this.hideDiv();
            leftover='';

            if(document.getElementById("usl")) document.getElementById("usl").value = this.elem.value;
            setTimeout("document.getElementById('" + this.elem.id + "').focus()",0);
            return 1;
        }
        else
            return 0;
    };
    this.showDiv = function()
    {
        me.highlighted = -1;
        document.getElementById("uen").value = document.getElementById("usl").value = "";
        this.div.style.display = 'block';

        if(disable && flag_ie)
        {
            var subobj=this.div;
            var ifrRef = document.getElementById("DivShim");
            ifrRef.style.width = subobj.offsetWidth;
            ifrRef.style.height = subobj.offsetHeight;
            ifrRef.style.top = subobj.style.top;
            ifrRef.style.left = subobj.style.left;
            ifrRef.style.marginTop = subobj.style.marginTop;
            ifrRef.style.marginBottom = subobj.style.marginBottom;
            ifrRef.style.marginLeft = subobj.style.marginLeft;
            ifrRef.style.marginRight = subobj.style.marginRight;
            ifrRef.style.display = subobj.style.display;
            ifrRef.style.zIndex = 1;
            subobj.style.zIndex = 2;
        } // end of if()
    };
    this.hideDiv = function()
    {
        this.div.style.display = 'none';
        document.getElementById("DivShim").style.display= 'none';
        this.highlighted = -1;
        this.eligible = new Array();

        if(disable && flag_ie)
        {
            var i;
            for(i=0;i<disable.length;i++)
            {
                document.getElementById(disable[i]).style.visibility = 'visible';}// end of for()
        } // end of if()

    };
    this.changeHighlight = function()
    {
        var lis = this.div.getElementsByTagName('LI');
        for (i in lis)
        {
            var li = lis[i];

            if (this.highlighted == i)
            {
                li.className = "selected";
            }
            else
            {
                li.className = "";
            }
        }
    };
    this.positionDiv = function()
    {
        var el = this.elem;
        var x = 0;
        var y = el.offsetHeight;

        while (el.offsetParent && el.tagName.toUpperCase() != 'BODY')
        {
            x += el.offsetLeft;
            y += el.offsetTop;
            el = el.offsetParent;
        }

        x += el.offsetLeft;
        y += el.offsetTop;
        this.div.style.left = x -(form_n == "form4" && document.getElementById("divfordisplay")?parseInt(document.getElementById("divfordisplay").style.left.substr(0,(document.getElementById("divfordisplay").style.left.length-2))):0) + 'px';
        this.div.style.top = y -(form_n == "form4" && document.getElementById("divfordisplay")?parseInt(document.getElementById("divfordisplay").style.top.substr(0,(document.getElementById("divfordisplay").style.top.length-2))):0) + 'px';
    };
    this.createDiv = function()
    {
        cntr = 0;
        var full_temparr = new Array();
        var ul = document.createElement('ul');
        for (i in this.eligible)
        {
            if(cntr == 20) break;
            var word = this.eligible[i];
            full_temparr[cntr++] = word;
            var li = document.createElement('li');
            var a = document.createElement('a');
            a.href="javascript:setValue(\""+word+"\");";
            a.innerHTML = markbold(this.inputText.toLowerCase(),word.toLowerCase());
            li.appendChild(a);
            if (me.highlighted == i)
            {
                li.className = "selected";
            }
            ul.appendChild(li);
        }
        this.div.replaceChild(ul,this.div.childNodes[0]);
        ul.onmouseover = function(ev)
        {
            var target = me.getEventSource(ev);
            while (target.parentNode && target.tagName.toUpperCase() != 'LI')
            {
                target = target.parentNode;
            }

            var lis = me.div.getElementsByTagName('LI');


            for (i in lis)
            {
                var li = lis[i];
                if(li == target)
                {
                    me.highlighted = i;
                    break;
                }
            }
            me.changeHighlight();
        };
        ul.onmousedown = function(ev)
        {
            me.useSuggestion();
            me.hideDiv();
            me.cancelEvent(ev);
            return false;
        };
        this.div.className="suggestion_list";
        this.div.style.position = 'absolute';
    };
    this.getEligible = function()
    {
        this.eligible = new Array();

        var tmpArr = new Array();
        switch(this.elem.id)
        {
            case 'desig'            :tmpArr = sample1;break;
            case 'compName' :tmpArr = sample2;break;
            case 'hiringFor':tmpArr = sample2;break;
            case 'keyword' :tmpArr = sample4;break;
        }

        for (i in tmpArr)
        {
            var suggestion = tmpArr[i];
            var index = suggestion.toLowerCase().indexOf(this.inputText.toLowerCase());

            if(index == 0 || suggestion.charAt(index-1) == " ")
            {
                this.eligible[this.eligible.length]=suggestion;
            }
        }
        return this.eligible.length;
    };
    this.getKeyCode = function(ev)
    {
        if(ev)      //Moz
        {
            flag_ie = false;
            return ev.keyCode;
        }
        if(window.event)  //IE
        {
            flag_ie = true;
            return window.event.keyCode;
        }
    };
    this.getEventSource = function(ev)
    {
        if(ev)      //Moz
        {
            return ev.target;
        }

        if(window.event)  //IE
        {
            return window.event.srcElement;
        }
    };
    this.cancelEvent = function(ev)
    {
        if(ev)      //Moz
        {
            ev.preventDefault();
            ev.stopPropagation();
        }
        if(window.event)  //IE
        {
            window.event.returnValue = false;
        }
    }
}

function uncheckRadio (mode)
{
    if (mode =='single') {
        for (i=0; i < document.frmJobListing.delrd.length; i++)
        {
            document.frmJobListing.delrd[i].checked = false;
        }
        var errMessName = getPageElementReference('errormess', 'delrd');
        errMessName.style.display = 'none';
        document.getElementById('other').disabled = true;
        resetStyle('other');
        setDefaultValues(['testimonialother1','testimonialother2']);
        resetTestimonial('other');
    } else if (mode == 'multi') {
        for (i=0; i < document.frmJobListing.delrdmul.length; i++)
        {
            document.frmJobListing.delrdmul[i].checked = false;
        }
        var errMessName = getPageElementReference('errormess', 'delrdmul');
        errMessName.style.display = 'none';
        document.getElementById('othermul').disabled = true;
        resetStyle('othermul');
        setDefaultValues(['testimonialothermul1','testimonialothermul2']);
        resetTestimonial('othermul');
    }
}
function showRefreshOpt(){
    if(document.getElementById("refreshPattern").value=="disable")
    {
        document.getElementById('refreshOpt').style.display='none';
        document.getElementById('stopRefreshDate').style.display='none';
        document.getElementById('stopRefresh').style.display='none'

    }
    else{
        document.getElementById('refreshOpt').style.display='block';
        document.getElementById('stopRefreshDate').style.display='block';
        document.getElementById('stopRefresh').style.display='block';
    }
}

function addHiddenElementToPage(isAjax,elemName,elemVal)
{
    if(isAjax==1)
    {
        return elemName + "::"+ elemVal;
    }
    else
        document.getElementById("oldValue").innerHTML+="<input type='hidden' name='"+elemName+"' value='"+elemVal+"' >";
    return "";
}

function mapToOldValue(isAjax, actionType){
    if(!isAjax)
        addLocHiddenVal();

    var roleValue = [];
    var fareaValue = [];
    var indValue = [];
    var deptValue=[];
    var ugValue = [];
    var pgValue = [];
    /*    var cities= [];
        var country= [];
        if(actionType!='replace'){
            var commonCities=intersection(cusNew2.selValue,other_city,1);
            var uncommonCities=intersection(cusNew2.selValue,other_city,0);
            var commonCountries=intersection(intLoc.selValue,other_country,1);
            var uncommonCountries=intersection(intLoc.selValue,other_country,0);
        var commonLocalities=intersection(localitiesDD.selValue,other_locality,1);
            var uncommonLocalities=intersection(localitiesDD.selValue,other_locality,0);
        }*/
    var pageElemsForAjaxForm = Array();
    if (fAreaDD.selValue.length > 0)
    {
        fareaValue[0]= fAreaDD.selValue[0] .replace("#","");
        pageElemsForAjaxForm[pageElemsForAjaxForm.length] = addHiddenElementToPage(isAjax,'selFArea',fareaValue[0]);
    }
    if (roleDD.selValue.length > 0)
    {
        roleValue[0]=roleDD.selValue[0].replace("#","");
        pageElemsForAjaxForm[pageElemsForAjaxForm.length] = addHiddenElementToPage(isAjax,'selRole',roleValue[0]);
    }
    if (indDD.selValue.length > 0)
    {
        indValue[0]=indDD.selValue[0].replace("#","");
        pageElemsForAjaxForm[pageElemsForAjaxForm.length] = addHiddenElementToPage(isAjax,'selIndType',indValue[0]);
    }
    if (deptStatus && deptDD.selValue.length > 0)
    {
        deptValue[0]=deptDD.selValue[0].replace("#","");
        pageElemsForAjaxForm[pageElemsForAjaxForm.length] = addHiddenElementToPage(isAjax,'selDeptType',deptValue[0]);
    }
    if (ugDD.selValue.length > 0)
    {
        ugValue[0]=ugDD.selValue[0].replace("#","");
        pageElemsForAjaxForm[pageElemsForAjaxForm.length] = addHiddenElementToPage(isAjax,'selUgCourse',ugValue[0]);
    }
    if (ugDD2.selValue.length > 0)
    {
        ugValue[0]=ugDD2.selValue[0].replace("#","");
        pageElemsForAjaxForm[pageElemsForAjaxForm.length] = addHiddenElementToPage(isAjax,'selUgCourse',ugValue[0]);
    }
    if (pgDD.selValue.length > 0)
    {
        pgValue[0]=pgDD.selValue[0].replace("#","");
        pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'selPgCourse',pgValue[0]);
    }
    if (pgDD2.selValue.length > 0)
    {
        pgValue[0]=pgDD2.selValue[0].replace("#","");
        pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'selPgCourse',pgValue[0]);
    }
    for(i=0;i< ugDD.selValueDepend.length;i++){
        var str=ugDD.selValueDepend[i].replace('#','');
        var hashPosition=str.indexOf('#');
        str=str.substr(hashPosition);
        str=str.replace('#','');
        pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'ugSpec[]',str);
    }
    for(i=0;i< ugDD2.selValueDepend.length;i++){
        var str=ugDD2.selValueDepend[i].replace('#','');
        var hashPosition=str.indexOf('#');
        str=str.substr(hashPosition);
        str=str.replace('#','');
        pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'ugSpec[]',str);
    }



    for(i=0;i< pgDD.selValue.length;i++){
        pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'pgCourse[]',pgDD.selValue[i].replace('#',''));
    }
    for(i=0;i< pgDD2.selValue.length;i++){
        pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'pgCourse[]',pgDD2.selValue[i].replace('#',''));
    }


    for(i=0;i< pgDD.selValueDepend.length;i++){

        var str=pgDD.selValueDepend[i].replace('#','');
        var hashPosition=str.indexOf('#');
        str=str.substr(hashPosition);
        str=str.replace('#','');
        pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'pgSpec[]',str);
    }
    for(i=0;i< pgDD2.selValueDepend.length;i++){

        var str=pgDD2.selValueDepend[i].replace('#','');
        var hashPosition=str.indexOf('#');
        str=str.substr(hashPosition);
        str=str.replace('#','');
        pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'pgSpec[]',str);
    }

    for(i=0;i< ppgDD.selValue.length;i++){
        pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'doctorateCourse[]',ppgDD.selValue[i].replace('#',''));
    }


    for(i=0;i< ppgDD.selValueDepend.length;i++){

        var str=ppgDD.selValueDepend[i].replace('#','');
        var hashPosition=str.indexOf('#');
        str=str.substr(hashPosition);
        str=str.replace('#','');
        pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'doctorateSpec[]',str);
    }

    /* if(actionType!='replace'){
       for(i=0;i< uncommonCities.length;i++){
         pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'city_sel[]',uncommonCities[i].replace('#',''));
       }
       for(i=0;i< uncommonCountries.length;i++){
         pageElemsForAjaxForm[pageElemsForAjaxForm.length]= addHiddenElementToPage(isAjax,'cntr_sel[]',uncommonCountries[i].replace('#',''));
       }

       for(i=0;i< uncommonLocalities.length;i++){
         pageElemsForAjaxForm[pageElemsForAjaxForm.length]= addHiddenElementToPage(isAjax,'locality[]',uncommonLocalities[i].replace('#',''));
       }

       for(i=0;i< commonCities.length;i++){
         pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'otherCities[]',commonCities[i].replace('#',''));
       }

       for(i=0;i< commonCountries.length;i++){
         pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'otherContries[]',commonCountries[i].replace('#',''));
       }

       for(i=0;i< commonLocalities.length;i++){
         pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'otherLocality[]',commonLocalities[i].replace('#',''));
       }
     }*/
    for(i=0;i< ugDD.selValue.length;i++){
        pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'ugCourse[]',ugDD.selValue[i].replace('#',''));
    }
    for(i=0;i< ugDD2.selValue.length;i++){
        pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'ugCourse[]',ugDD2.selValue[i].replace('#',''));
    }

    if(insta != 1 && actionType!='replace')
    {
        for(i=0;i< emailDD.selValue.length;i++){
            pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'email[]',emailDD.selValue[i].replace('#',''));
        }

        if(validEapps){
            for(i=0;i<eappsDD.selValue.length;i++){
                pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'eappsSubUser[]',eappsDD.selValue[i].replace('#',''));
            }

            for(i=0;i<eappsEmailDD.selValue.length;i++){
                pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'autoFwdEmail[]',eappsEmailDD.selValue[i].replace('#',''));
            }
        }
        if(validSM){
            for(i=0;i<SMEmailDD.selValue.length;i++){
                pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'autoFwdSM[]',SMEmailDD.selValue[i].replace('#',''));
            }
        }

        if(prefLocDD){
            for(i=0;i<prefLocDD.selValue.length;i++){
                pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'locfilter_sel[]',prefLocDD.selValue[i].replace('#',''));
            }
        }

        //document.getElementById("oldValue").innerHTML='';

        if(window.other_locality){
            for(i=0;i< other_locality.length;i++){
                pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'otherLocality[]', trim(other_locality[i].replace('#','')));

            }
        }

        if(window.city_sel){
            for(i=0;i< city_sel.length;i++){
                pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'city_sel[]',city_sel[i].replace('#',''));
            }
        }

        if(window.cntr_sel){
            for(i=0;i< cntr_sel.length;i++){
                pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'cntr_sel[]',cntr_sel[i].replace('#',''));
            }
        }


        if(window.locality){
            for(i=0;i< locality.length;i++){
                if(locality[i] != "50.50.50.50"){
                    pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'localityGeoLoc[]',trim(locality[i].replace('#','')) + '|' + trim(arrLatLong['#'+locality[i]]).replace('#',''));
                }
                pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'locality[]',locality[i].replace('#',''));
            }
        }

        if(window.other_city){
            for(i=0;i< other_city.length;i++){
                pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'otherCities[]',other_city[i].replace('#',''));
            }
        }

        if(window.other_country){
            for(i=0;i< other_country.length;i++){
                pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'otherContries[]',other_country[i].replace('#',''));
            }
        }



        /*    for(i=0;i< localitiesDD.selValue.length;i++){
                pageElemsForAjaxForm[pageElemsForAjaxForm.length]=addHiddenElementToPage(isAjax,'locality[]',localitiesDD.selValue[i].replace('#',''));
            }*/
    }

    if(isAjax)
        return pageElemsForAjaxForm;
}

function mapToOldValueForPSU(){
    var fareaValue = [];
    var indValue = [];
    //var commonCities=intersection(cusNew2.selValue,other_city,1);
    //var uncommonCities=intersection(cusNew2.selValue,other_city,0);
    //var commonCountries=intersection(intLoc.selValue,other_country,1);
    //var uncommonCountries=intersection(intLoc.selValue,other_country,0);
    //var commonLocalities=intersection(localitiesDD.selValue,other_locality,1);
    //var uncommonLocalities=intersection(localitiesDD.selValue,other_locality,0);
    if (fAreaDD.selValue.length > 0)
    {
        fareaValue[0]= fAreaDD.selValue[0].replace("#","");
        document.getElementById("oldValue").innerHTML+="<input type='hidden' name='selFArea' value="+fareaValue[0]+" >";
    }

    if (indDD.selValue.length > 0)
    {
        indValue[0]=indDD.selValue[0].replace("#","");
        document.getElementById("oldValue").innerHTML+="<input type='hidden' name='selIndType' value="+indValue[0]+" >";
    }

    //addLocHiddenVal();

    /*  for(i=0;i< uncommonCities.length;i++){
        document.getElementById("oldValue").innerHTML+="<input type='hidden' name='city_sel[]' value="+uncommonCities[i].replace('#','')+" >";
      }

      for(i=0;i< uncommonCountries.length;i++){
        document.getElementById("oldValue").innerHTML+="<input type='hidden' name='cntr_sel[]' value="+uncommonCountries[i].replace('#','')+" >";
      }

      for(i=0;i< uncommonLocalities.length;i++){
        document.getElementById("oldValue").innerHTML+="<input type='hidden' name='locality_sel[]' value="+uncommonLocalities[i].replace('#','')+" >";
      }

      for(i=0;i< commonCities.length;i++){
        document.getElementById("oldValue").innerHTML+="<input type='hidden' name='otherCities[]' value="+commonCities[i].replace('#','')+" >";
      }

      for(i=0;i< commonCountries.length;i++){
        document.getElementById("oldValue").innerHTML+="<input type='hidden' name='otherContries[]' value="+commonCountries[i].replace('#','')+" >";
      }

      for(i=0;i< commonLocalities.length;i++){
        document.getElementById("oldValue").innerHTML+="<input type='hidden' name='otherLocality[]' value="+commonLocalities[i].replace('#','')+" >";
      }*/
}

function dropDownInit (type)
{  //var prefilledCountry=new Array();
    var ddContWidth = '370px';
    var defaultUgCourse = Array('#18','#17');
    var defaultPgCourse = Array('#19','#20');
    var defaultUgSpec= Array('#114','#109');
    var defaultPgSpec= Array('#130','#139');
    var prefilledCountry= Array();
    var defaultPPGCourse = Array('#00','#0');
    var defaultPPGSpec = Array('#01','#02');


    arrFarea_1  = getSortedArray(arrFarea,FAREA,"FAREA",'',5); //Get Sorted Array on the basis of Predicted values
    fAreaDD.init('fareaContainer2', 'fareaContainerDD2', '', ddContWidth, '200px', 0, '', arrFarea_1, 'fareaValContainer2', 'fAreaDD', 'or start typing a Functional Area',showRolesWhenFareaSelected,'Functional Area');
    if(preFarea.length > 0)
        fAreaDD.setter(preFarea);

    arrInd_1=getSortedArray(arrInd,INDTYPE,"INDTYPE",'',5);  //Get Sorted Array on the basis of Predicted values
    indDD.init('indContainer2', 'indContainerDD2', '', ddContWidth, '200px', 0, '', arrInd_1, 'indValContainer2', 'indDD', 'or start typing an Industry',checkIndustry,'Industry');
    if(preIndustry.length > 0)
        indDD.setter(preIndustry);


    if (type != 'replace') {
        arrCities=getSortedArray(arrCities,CITY,"CITY",'',5);    //Get Sorted Array on the basis of Predicted values
        cusNew2.init('naukContainer2', 'naukContainerDD2', 'naukContainerSelector2', ddContWidth, '200px', 1, '', arrCities, 'valContainer2', 'cusNew2', 'City',countLocation,'Location');
        if(preCities.length > 0)
            cusNew2.setter(preCities);

        if(prefilledOtherCity.length > 0){
            document.getElementById('CityStrSpan').style.display="block";
            for(i=0;i<prefilledOtherCity.length;i++){
                document.getElementById('OtherLocation').value=prefilledOtherCity[i].replace('#','');
                saveLoc('cities');
            }
        }
        arrCountries=getSortedArray(arrCountries,COUNTRY,"COUNTRY",'',5);  //Get Sorted Array on the basis of Predicted values
        intLoc.init('intLocContainer', 'intLocContainerDD', 'naukContainerSelector2', ddContWidth, '200px', 1, '', arrCountries, 'intLocContainerVal', 'intLoc', 'Country',countLocation,'International Location');
        var i=0;
        for(i=0;i<preCountry.length;i++){
            prefilledCountry[i]=preCountry[i];
        }

        if(prefilledCountry.length > 0){
            if (jpAppName == 'Online')
                document.getElementById('intLocation').click();
            intLoc.setter(prefilledCountry);
        }

        if(prefilledOtherCountry.length > 0){
            document.getElementById('OtherCountrySpan').style.display="block";
            for(i=0;i<prefilledOtherCountry.length;i++){
                document.getElementById('OtherCountry').value=prefilledOtherCountry[i].replace('#','');
                saveLoc('countries');
            }
        }
    }
    ugcourse=getSortedArray(ugcourse,UGCOURSE,"UGCOURSE",'',4);  //Get Sorted Array on the basis of Predicted values
    if(isPV != "1")
        ugDD.init('ugContainer2', 'ugContainerDD2', 'ugContainerSelector2', ddContWidth, '200px', 1, ugspec,ugcourse, 'ugValContainer2', 'ugDD', ' UG Qualification-UG Specialization',countUGcourse,'Under Graduate');

    if(jpAppName == 'Offline') {
        if(document.getElementById('actionName').value!="new"){
            if(preUgCourse.length > 0 ){
                ugDD.setter(preUgCourse,preUgSpec);
            }
        }
        else{
            ugDD.setter(defaultUgCourse,defaultUgSpec);
        }

    }

    else{
        if(document.getElementById('actionName').value!="new"){
            if(preUgCourse.length > 0 ){
                ugDD.setter(preUgCourse,preUgSpec);
            }
        }else{
            ugDD.setter(defaultUgCourse,defaultUgSpec);
        }
    }
    pgcourse=getSortedArray(pgcourse,PGCOURSE,"PGCOURSE",'',4);  //Get Sorted Array on the basis of Predicted values
    if(isPV != "1")
        pgDD.init('pgContainer2', 'pgContainerDD2', 'pgContainerSelector2', ddContWidth, '200px', 1, pgspec,pgcourse, 'pgValContainer2', 'pgDD',' PG Qualification-PG Specialization',countPGcourse,'Post Graduate');
    if(jpAppName == 'Offline') {
        if(document.getElementById('actionName').value!="new"){
            if(prePgCourse.length > 0) {
                pgDD.setter(prePgCourse,prePgSpec);
            }
        }
        else{
            pgDD.setter(defaultPgCourse,defaultPgSpec);
        }
    }

    else {
        if(document.getElementById('actionName').value!="new"){
            if(prePgCourse.length > 0) {
                pgDD.setter(prePgCourse,prePgSpec);
            }
        }
        else{
            pgDD.setter(defaultPgCourse,defaultPgSpec);
        }
    }


    ppgcourse=getSortedArray(ppgcourse,'',"PPGCOURSE",'',4);  //Get Sorted Array on the basis of Predicted values
    if(isPV != "1")
        ppgDD.init('ppgContainer2', 'ppgContainerDD2', 'ppgContainerSelector2', ddContWidth, '200px', 1, ppgspec,ppgcourse, 'ppgValContainer2', 'ppgDD',' Qualification- Specialization',countPPGcourse,'Doctorate');
    if(jpAppName == 'Offline') {
        if(document.getElementById('actionName').value!="new"){
            if(prePpgCourse.length > 0) {
                ppgDD.setter(prePpgCourse,prePpgSpec);
            }
        }
        else{
            ppgDD.setter(defaultPPGCourse,defaultPPGSpec);
        }
    }

    else {
        if(document.getElementById('actionName').value!="new"){
            if(prePpgCourse.length > 0) {
                ppgDD.setter(prePpgCourse,prePpgSpec);
            }
        }
        else{
            ppgDD.setter(defaultPPGCourse,defaultPPGSpec);
        }
    }


    if (type != 'replace') {
        if (isPV == '0' && insta != 1)
        {
            if(document.getElementById("emailContainer2")) {
                emailDD.init('emailContainer2', 'emailContainerDD2', 'emailContainerSelector2','200px', '200px', 1, '',emailArr, 'emailValContainer2', 'emailDD', 'email',countEmail,'Email');
            }
            var reqPreFilled= new Array();
            var k=0;
            for(var i=0;i<emailsArray.length;i++){
                for(var j=0;j<prefilledEmails.length;j++){
                    if(emailsArray[i]== prefilledEmails[j]){
                        reqPreFilled[k++]=emailsArray[i];
                    }
                }
            }
            for(var i=0;i< reqPreFilled.length;i++){
                reqPreFilled[i]='#'+reqPreFilled[i];
            }

            if(preEmails.length > 0 && document.getElementById("emailContainer2")){
                emailDD.setter(reqPreFilled);
            }

        }
        if (validEapps && validEapps == '1')
        {
            if(document.getElementById("subUserContainer2")) {
                eappsDD.init('subUserContainer2', 'subUserContainerDD2', 'subUserContainerSelector2', ddContWidth, '200px', 1, '',eappsSubuserArr, 'subUserValContainer2', 'eappsDD', 'subuser',countSubUser,'eApps Subuser');
            }


            if(prefilledSubusers.length > 0) {
                eappsDD.setter(prefilledSubusers);

            }
            if(document.getElementById("eappsContainer2")) {
                eappsEmailDD.init('eappsContainer2', 'eappsContainerDD2', 'eappsContainerSelector2','200px', '200px', 1, '',emailArr, 'eappsValContainer2', 'eappsEmailDD', 'Autoforward',countEapps,'eApps Email');
            }
            if(prefillEappsAutoFwdEmails.length > 0){
                document.getElementById('autofwdeml_chk').onclick();
                eappsEmailDD.setter(prefillEappsAutoFwdEmails);

            }
        }

        if (validSM && isPV != "1")
        {
            if(document.getElementById("SMContainer2")) {
                SMEmailDD.init('SMContainer2', 'SMContainerDD2', 'SMContainerSelector2','200px', '200px', 1, '',emailArr, 'SMValContainer2', 'SMEmailDD', 'Autoforward',countSM,'SM Email');
            }
            if(prefillSMAutoFwdEmails.length > 0){
                document.getElementById('autofwdemlSM_chk').onclick();
                SMEmailDD.setter(prefillSMAutoFwdEmails);
            }
        }
        // defaultValueSetter();
        if (gbi('prefLocContainerSelector2') && insta != 1) {
            prefLocDD.init('prefLocContainer2', 'prefLocContainerDD2', 'prefLocContainerSelector2', ddContWidth, '200px', 1, '',prefLocArr, 'prefLocValContainer2', 'prefLocDD', 'Preferred Location',countPrefLoc,'Preferred Location');
            if((prePreferrdLoc && prePreferrdLoc.length > 0 && newFilter=='locFilter') || newFilter=='noFilter'){
                document.getElementById('respFilter_loc_chkbox2').click();
                prefLocDD.setter(prePreferrdLoc);

            }
        }
    }
    setTimeout('selectRole()',100);
}

function selectRole()
{
    if(preRole!= '#')
        roleDD.setter(preRole);
}



function  showRolesWhenFareaSelected()
{
    var curSelInput=fAreaDD.gbi(fAreaDD.id).getElementsByTagName('input')[0];
    if(previousFareaValue &&  (previousFareaValue != fAreaDD.selValue[0])){
        if(fAreaDD.selValue[0] == "#41"){
            document.getElementById("fareaSpan").style.display="block";
        }
        else{
            document.getElementById("fareaSpan").style.display="none";
        }
        if (fAreaDD.selValue[0]) {
            var fareaId = fAreaDD.selValue[0].replace("#","");
            fareaId = (fareaId.split('.'))[0];
        }
        document.getElementById('rowarea').style.display='block';
        gbi('roleValContainer2').innerHTML="";
        roleDD.init('roleContainer2', 'roleContainerDD2', '', '370px', '200px', 0, '', arrRoles[fareaId], 'roleValContainer2', 'roleDD', 'or start typing a Role','','Role');
        roleDD.gbi(roleDD.id).getElementsByTagName('input')[0].value="Select or start typing a Role";
        previousFareaValue=fAreaDD.selValue[0];
        roleDD.selValue.length = 0;
        document.getElementById('inpRoleContainerDD2').readOnly=false;

    }
}


var ugCountFlag = 0;
var countUGcourse=function(){
    /*
     var len=0;
     while(ugDD.selValue[len])
     {
     len++;
     }
     if (!ugCountFlag && len > 2) {
     var a=ugDD.gbi(ugDD.ddCont).getElementsByTagName('a');
     if (a.length > 2) {
     for(var i=0; i < a.length; i++){
     if(a[i].rel=='#17' || a[i].rel=='#18'){
     a[i].onclick();
     }
     }
     }
     ugCountFlag = 1;
     }
     */
    showHideContainersWhenEmpty("ugContainerSelector2",'ugContainer');
    filterinstitute('ugContainerDD2', 'ugFilterCheck', 'ugFilterCont', ugDD, "#11");
}

var pgCountFlag = 0;
var countPGcourse=function(){
    /*
     var len=0;
     while(pgDD.selValue[len])
     {
     len++;
     }
     if (!pgCountFlag && len > 2) {
     var a=pgDD.gbi(pgDD.ddCont).getElementsByTagName('a');
     if (a.length > 2) {
     for(var i=0; i < a.length; i++){
     if(a[i].rel=='#19' || a[i].rel=='#20'){
     a[i].onclick();
     }
     }
     }
     pgCountFlag = 1;
     }
     */
    showHideContainersWhenEmpty("pgContainerSelector2","pgContainer");
    filterinstitute('pgContainerDD2', 'pgFilterCheck', 'pgFilterCont', pgDD, "#13");
}
var countPPGcourse=function(){
    showHideContainersWhenEmpty("ppgContainerSelector2","ppgContainer");
}

var countEmail= function(){
    showHideContainersWhenEmpty("emailContainerSelector2","emailContainer");
}

var countEapps= function(){
    showHideContainersWhenEmpty("eappsContainerSelector2","autoFwdEmailContainer");
}

var countSM = function(){
    showHideContainersWhenEmpty("SMContainerSelector2","autoFwdSMContainer");
}

var countSubUser= function(){

    showHideContainersWhenEmpty("subUserContainerSelector2","subUserContainer");
    allusersSelect();
}

function allusersSelect(){
    $n("#subUserContainerDD2 a").addEvent("click", function(){
        var currentRel = $n(this).attr("rel");
        if(currentRel == "0"){
            $n('#subUserContainer a[rel="remove"]').click();
            $n(this).click();
        }else{
            if(gbi('subUserContainer20') && gbi('subUserContainer20').getElementsByTagName('a')[0]){
                $n('#subUserContainer a[rel="remove"]').click();
                $n(this).click();
            }
        }
    });
}


var countPrefLoc=function(){
    var countSpan = document.getElementById('prefLocContainerSelector2').getElementsByTagName("span");
    showHideContainersWhenEmpty("prefLocContainerSelector2","preflocContainer");
    if(countSpan.length > 9){
        document.getElementById("locfilter_sel_err").style.display="block";
        document.getElementById("locfilter_sel_err").className = 'error2';
        document.getElementById("locfilter_sel_err").innerHTML ="You cannot select more than 9 locations";
    }
    else{
        document.getElementById("locfilter_sel_err").style.display="none";
    }

}

/*var countLocation=function(){
   if(typeof this.ddId != undefined && this.ddId == "naukContainerDD2") {
        var unselectedLocation = $n('#valContainer2 a[rel="' + this.unselectedItem + '"]').currObj();
        if(typeof unselectedLocation != "undefined" && unselectedLocation.className == "")
            refreshLocalities(this.unselectedItem);
  }

  var countSpan = document.getElementById("naukContainerSelector2").getElementsByTagName("span");
  var coll=document.getElementById("naukContainerSelector2").getElementsByTagName("span");
  var curSelInput=cusNew2.gbi(cusNew2.id).getElementsByTagName('input')[0];
  var i=0;
  var isOtherSelected = false;



  if(cusNew2.selValue.length)
    for(var x=0; x<cusNew2.selValue.length; x++){
      if(cusNew2.selValue[x]=='#50.50.50'){
        cusNew2.otherFlag=1;
        break;
      }
    }
  else{
    document.getElementById('CityStrSpan').style.display="none";
    cusNew2.otherFlag=0;
  }

  if(intLoc.selValue.length)
    for(var x=0; x<intLoc.selValue.length; x++){
      if(intLoc.selValue[x]=='#26.0.0'){
        intLoc.otherFlag=1;
        break;
      }
    }
  else{
    document.getElementById('OtherCountrySpan').style.display="none";
    intLoc.otherFlag=0;
  }

  for(i=0;i< countSpan.length;i++){
    var str=coll[i].innerHTML;
    str=str.replace(/<\/?[^>]+(>|$)/g, '')
      str = getTextString(str);
    if(str == "Other National Locations")
    {
      document.getElementById("CityStrSpan").style.display="block";
      coll[i].parentNode.removeChild(coll[i]);
      cusNew2.otherFlag=1;
    }
    else{
      for(var x=0; x<cusNew2.selValue.length; x++){
        if(cusNew2.selValue[x]=='#50.50.50'){
          cusNew2.otherFlag=1;
          document.getElementById("CityStrSpan").style.display="block";
          break;
        }
        else{
          cusNew2.otherFlag=0;
          document.getElementById("CityStrSpan").style.display="none";
        }
      }
    }

    if(str=='Other International Location')
    {
      document.getElementById("OtherCountrySpan").style.display="block";
      coll[i].parentNode.removeChild(coll[i]);
      intLoc.otherFlag=1;
    }
    else{
      for(var x=0; x<intLoc.selValue.length; x++){
        if(intLoc.selValue[x]=='#26.0.0'){
          intLoc.otherFlag=1;
          document.getElementById("OtherCountrySpan").style.display="block";
          break;
        }
        else{
          intLoc.otherFlag=0;
          document.getElementById("OtherCountrySpan").style.display="none";
        }
      }
    }


  }
  console.log('jobIndicatorCount',1);
  jobIndicatorCount();
  hideShowLocationContainer();
  hideShowLocalityContainer();
}
*/
var checkIndustry= function(){
    if(indDD.selValue[0] == "#29"){
        document.getElementById("industrySpan").style.display="block";
    }
    else{
        document.getElementById("industrySpan").style.display="none";
    }

}





/*function saveLoc(str){
  var city= trim(document.getElementById('OtherLocation').value);
  var country= trim(document.getElementById('OtherCountry').value);
  var locality = trim(document.getElementById('OtherLocality').value);
  var locationPattern=/^([A-Za-z ])*$/;
  var localityPattern=/^([A-Za-z0-9 ])* ?- ?([0-9])*$/;
  if(city!= ""|| country!=""||locality!=""){
    if(str == 'cities' && city!=''){
      if(!locationPattern.test(city)){alert('No Special Characters allowed. Use only Alphabets (A-Z, a-z) or Single Space');}
      else if(city.split(' ').length-1 > 1 ){alert("Only Single Space can be entered.");}
      else{
      if(document.getElementById('OtherLocation').value!= 'Enter Other Location'){
        document.getElementById("naukContainerSelector2").innerHTML+="<span id='"+city+"'>"+document.getElementById('OtherLocation').value+"<a href='javascript:void(0)' onclick=\"removeCity('"+city+"');\"><img src='https://static.naukri.com/rstatic/images/cross_small.gif' border='0' /></a>&nbsp&nbsp</span>";
        document.getElementById('OtherLocation').value="";
        cusNew2.selValue.push(city);
        other_city.push(city);
        cusNew2.showSelected_Value();
      }
      else{
        alert("Please enter a valid City Name");
      }
    }
    jobIndicatorCount();
    hideShowLocationContainer();
}
    else if(str=='countries'&& country!=''){
      if(!locationPattern.test(country)){alert('No Special Characters allowed. Use only Alphabets (A-Z, a-z) or Single Space');}
      else if(country.split(' ').length-1 > 1 ){alert("Only Single Space can be entered.");}
     else{
      if(document.getElementById('OtherCountry').value!= 'Enter Other Location'){
        document.getElementById("naukContainerSelector2").innerHTML+="<span id='"+country+"'>"+document.getElementById('OtherCountry').value+"<a href='javascript:void(0)' onclick=\"removeCountry('"+country+"');\"><img src='https://static.naukri.com/rstatic/images/cross_small.gif' border='0'/></a>&nbsp&nbsp</span>";
        document.getElementById('OtherCountry').value="";
        intLoc.selValue.push(country);
        other_country.push(country);
        intLoc.showSelected_Value();
      }
      else{
        alert("Please enter a valid City Name");
      }
    }
    }
    else if(str == 'localities' && locality!=''){
      var localityOtherVal = document.getElementById('OtherLocality').value;
      if(!localityPattern.test(locality)){alert('No Special Characters allowed. You must mention locality name followed by hyphen and its pincode');}
      else{
      if(localityOtherVal!= 'Enter locality name - pincode'){
        document.getElementById("localitiesContainerSelector2").innerHTML+="<span id='"+locality+"'>Other - "+trim(localityOtherVal.split('-')[0])+"<a href='javascript:void(0)' onclick=\"removeLocality('"+locality+"');\"><img src='https://static.naukri.com/rstatic/images/cross_small.gif' border='0' /></a>&nbsp&nbsp</span>";
        document.getElementById('OtherLocality').value="";
        localitiesDD.selValue.push(locality);
        other_locality.push(locality);
        localitiesDD.showSelected_Value();
      }
      else{
        alert("Please enter a valid Locality Name");
      }
    }
}


  }
  else{
    alert("Please enter a valid City Name");
  }
  console.log('jobIndicatorCount',2);
  jobIndicatorCount();
  hideShowLocationContainer();
}*/



function dropDownInit (type)
{  //var prefilledCountry=new Array();
    var ddContWidth = '370px';
    var defaultUgCourse = Array('#18','#17');
    var defaultPgCourse = Array('#19','#20');
    var defaultUgSpec= Array('#114','#109');
    var defaultPgSpec= Array('#130','#139');
    var prefilledCountry= Array();
    var defaultPPGCourse = Array('#00','#0');
    var defaultPPGSpec = Array('#01','#02');


    arrFarea_1  = getSortedArray(arrFarea,FAREA,"FAREA",'',5); //Get Sorted Array on the basis of Predicted values
    fAreaDD.init('fareaContainer2', 'fareaContainerDD2', '', ddContWidth, '200px', 0, '', arrFarea_1, 'fareaValContainer2', 'fAreaDD', 'or start typing a Functional Area',showRolesWhenFareaSelected,'Functional Area');
    if(preFarea.length > 0)
        fAreaDD.setter(preFarea);
    if(deptStatus){

        if(!Object.keys(deptName).length){
            $n("#noDept").html('No Departments exist. Add them under <a href="'+referralSettingURL+'" target="_blank">Referral Settings</a>');
            $n("#deptContainer").css({width:'370px'});
        }
        else{
            deptDD.init('deptContainer', 'deptContainerDD', '', ddContWidth, '200px', 0, '', deptName, 'deptValContainer', 'deptDD', ' or start typing department(s)',null,'Department');
        }

    }
    if(Object.keys(arrDept).length){
        deptDD.setter(arrDept);
    }
    arrInd_1=getSortedArray(arrInd,INDTYPE,"INDTYPE",'',5);  //Get Sorted Array on the basis of Predicted values
    indDD.init('indContainer2', 'indContainerDD2', '', ddContWidth, '200px', 0, '', arrInd_1, 'indValContainer2', 'indDD', 'or start typing an Industry',checkIndustry,'Industry');
    if(preIndustry.length > 0)
        indDD.setter(preIndustry);


    if (type != 'replace') {
        //localitiesDD.init('localitiesContainer2', 'localitiesContainerDD2', 'localitiesContainerSelector2', ddContWidth, '200px', 1, '', arrLocalities, 'localitiesValContainer2', 'localitiesDD', 'Locality', showLocalitiesForLocationSelected, 'locality');
        /*if (preLocalities.length > 0) {
            localitiesDD.setter(preLocalities);
}*/
        /*  if(typeof prefilledOtherLocality != "undefined" && prefilledOtherLocality.length > 0){
              document.getElementById('LocalityStrSpan').style.display="block";
              for(i=0;i<prefilledOtherLocality.length;i++){
                document.getElementById('OtherLocality').value=prefilledOtherLocality[i].replace('#','');
                saveLoc('localities');
              }
          } */

        //arrCities=getSortedArray(arrCities,CITY,"CITY",'',5);    //Get Sorted Array on the basis of Predicted values
//    cusNew2.init('naukContainer2', 'naukContainerDD2', 'naukContainerSelector2', ddContWidth, '200px', 1, '', arrCities, 'valContainer2', 'cusNew2', 'City',countLocation,'Location');
        /* if(preCities.length > 0)
           cusNew2.setter(preCities);

         if(prefilledOtherCity.length > 0){
           document.getElementById('CityStrSpan').style.display="block";
           for(i=0;i<prefilledOtherCity.length;i++){
             document.getElementById('OtherLocation').value=prefilledOtherCity[i].replace('#','');
             saveLoc('cities');
           }
         }*/
        //arrCountries=getSortedArray(arrCountries,COUNTRY,"COUNTRY",'',5);  //Get Sorted Array on the basis of Predicted values
        //  intLoc.init('intLocContainer', 'intLocContainerDD', 'naukContainerSelector2', ddContWidth, '200px', 1, '', arrCountries, 'intLocContainerVal', 'intLoc', 'Country',countLocation,'International Location');
        /*   var i=0;
           for(i=0;i<preCountry.length;i++){
             prefilledCountry[i]=preCountry[i];
           }

           if(prefilledCountry.length > 0){
             if (jpAppName == 'Online')
               document.getElementById('intLocation').click();
             intLoc.setter(prefilledCountry);
           }*/

        /* if(prefilledOtherCountry.length > 0){
           document.getElementById('OtherCountrySpan').style.display="block";
           for(i=0;i<prefilledOtherCountry.length;i++){
             document.getElementById('OtherCountry').value=prefilledOtherCountry[i].replace('#','');
             saveLoc('countries');
           }
         }*/
    }
    if(isPV=="0"){
        ugcourse=getSortedArray(ugcourse,UGCOURSE,"UGCOURSE",'',4);  //Get Sorted Array on the basis of Predicted values
        ugDD.init('ugContainer2', 'ugContainerDD2', 'ugContainerSelector2', ddContWidth, '200px', 1, ugspec,ugcourse, 'ugValContainer2', 'ugDD', ' UG Qualification-UG Specialization',countUGcourse,'Under Graduate');
    }

    if(jpAppName == 'Offline') {
        if(document.getElementById('actionName').value!="new"){
            if(preUgCourse.length > 0 ){
                ugDD.setter(preUgCourse,preUgSpec);
            }
        }
        else{
            ugDD.setter(defaultUgCourse,defaultUgSpec);
        }

    }

    else{
        if(document.getElementById('actionName').value!="new"){

            if(preUgCourse.length > 0 ){
                if(isPV != "1")
                    ugDD.setter(preUgCourse,preUgSpec);
            }
        }else{
            if(isPV != "1")
                ugDD.setter(defaultUgCourse,defaultUgSpec);
        }
    }
    if(isPV != "1"){
        pgcourse=getSortedArray(pgcourse,PGCOURSE,"PGCOURSE",'',4);  //Get Sorted Array on the basis of Predicted values

        pgDD.init('pgContainer2', 'pgContainerDD2', 'pgContainerSelector2', ddContWidth, '200px', 1, pgspec,pgcourse, 'pgValContainer2', 'pgDD',' PG Qualification-PG Specialization',countPGcourse,'Post Graduate');
    }
    if(jpAppName == 'Offline') {
        if(document.getElementById('actionName').value!="new"){
            if(prePgCourse.length > 0) {
                if(isPV != "1")
                    pgDD.setter(prePgCourse,prePgSpec);
            }
        }
        else{
            if(isPV != "1")
                pgDD.setter(defaultPgCourse,defaultPgSpec);
        }
    }

    else {
        if(document.getElementById('actionName').value!="new"){
            if(prePgCourse.length > 0) {
                if(isPV != "1")
                    pgDD.setter(prePgCourse,prePgSpec);
            }
        }
        else{
            if(isPV != "1")
                pgDD.setter(defaultPgCourse,defaultPgSpec);
        }
    }

    if(isPV != "1"){
        ppgcourse=getSortedArray(ppgcourse,'',"PPGCOURSE",'',4);  //Get Sorted Array on the basis of Predicted values
        ppgDD.init('ppgContainer2', 'ppgContainerDD2', 'ppgContainerSelector2', ddContWidth, '200px', 1, ppgspec,ppgcourse, 'ppgValContainer2', 'ppgDD',' Qualification- Specialization',countPPGcourse,'Doctorate');
    }
    if(jpAppName == 'Offline') {
        if(document.getElementById('actionName').value!="new"){
            if(prePpgCourse.length > 0) {
                ppgDD.setter(prePpgCourse,prePpgSpec);
            }
        }
        else{
            ppgDD.setter(defaultPPGCourse,defaultPPGSpec);
        }
    }

    else {
        if(document.getElementById('actionName').value!="new"){
            if(prePpgCourse.length > 0) {
                if(isPV != "1"){
                    ppgDD.setter(prePpgCourse,prePpgSpec);
                }
            }
        }
        else{
            if(isPV != "1"){
                ppgDD.setter(defaultPPGCourse,defaultPPGSpec);
            }
        }
    }


    if (type != 'replace') {
        if (isPV == '0' && insta != 1)
        {
            if(document.getElementById("emailContainer2")) {
                emailDD.init('emailContainer2', 'emailContainerDD2', 'emailContainerSelector2','200px', '200px', 1, '',emailArr, 'emailValContainer2', 'emailDD', 'email',countEmail,'Email');
            }
            var reqPreFilled= new Array();
            var k=0;
            for(var i=0;i<emailsArray.length;i++){
                for(var j=0;j<prefilledEmails.length;j++){
                    if(emailsArray[i]== prefilledEmails[j]){
                        reqPreFilled[k++]=emailsArray[i];
                    }
                }
            }
            for(var i=0;i< reqPreFilled.length;i++){
                reqPreFilled[i]='#'+reqPreFilled[i];
            }

            if(preEmails.length > 0 &&   document.getElementById("emailContainer2")){
                emailDD.setter(reqPreFilled);
            }

        }
        if (validEapps && validEapps == '1')
        {
            if(document.getElementById("subUserContainer2")) {
                eappsDD.init('subUserContainer2', 'subUserContainerDD2', 'subUserContainerSelector2', ddContWidth, '200px', 1, '',eappsSubuserArr, 'subUserValContainer2', 'eappsDD', 'subuser',countSubUser,'eApps Subuser');
            }


            if(prefilledSubusers.length > 0){
                eappsDD.setter(prefilledSubusers);
                if(isPV == "1"){
                    if(prefilledSubusers[0] != "0"){
                        $n("#subUsr").html(" Subusers("+prefilledSubusers.length +")");
                    }
                    else{
                        $n("#subUsr").html(" All Subusers");
                    }
                }
            }
            if(document.getElementById("eappsContainer2")) {
                eappsEmailDD.init('eappsContainer2', 'eappsContainerDD2', 'eappsContainerSelector2','200px', '200px', 1, '',emailArr, 'eappsValContainer2', 'eappsEmailDD', 'Autoforward',countEapps,'eApps Email');
            }
            if(prefillEappsAutoFwdEmails.length > 0){
                document.getElementById('autofwdeml_chk').onclick();
                eappsEmailDD.setter(prefillEappsAutoFwdEmails);
                if(isPV == "1"){
                    $n("#frwrdEml").html(prefillEappsAutoFwdEmails.length +" email(s) attached for forwarding");
                }
            }
        }
        if(validSM && isPV != "1"){
            if(document.getElementById("SMContainer2")) {
                SMEmailDD.init('SMContainer2', 'SMContainerDD2', 'SMContainerSelector2','200px', '200px', 1, '',emailArr, 'SMValContainer2', 'SMEmailDD', 'Autoforward',countSM,'SM Email');
            }
            if(prefillSMAutoFwdEmails.length > 0){
                document.getElementById('autofwdemlSM_chk').onclick();
                SMEmailDD.setter(prefillSMAutoFwdEmails);
            }
        }
        // defaultValueSetter();
        if (gbi('prefLocContainerSelector2') && insta != 1) {
            prefLocDD.init('prefLocContainer2', 'prefLocContainerDD2', 'prefLocContainerSelector2', ddContWidth, '200px', 1, '',prefLocArr, 'prefLocValContainer2', 'prefLocDD', 'Preferred Location',countPrefLoc,'Preferred Location');
            if((prePreferrdLoc && prePreferrdLoc.length > 0 && newFilter=='locFilter') || newFilter=='noFilter'){
                document.getElementById('respFilter_loc_chkbox2').click();
                prefLocDD.setter(prePreferrdLoc);

            }
        }
    }
    setTimeout('selectRole()',100);
}

function selectRole()
{
    if(preRole!= '#')
        roleDD.setter(preRole);
}



function  showRolesWhenFareaSelected()
{
    var curSelInput=fAreaDD.gbi(fAreaDD.id).getElementsByTagName('input')[0];
    if(previousFareaValue &&  (previousFareaValue != fAreaDD.selValue[0])){
        if(fAreaDD.selValue[0] == "#41"){
            document.getElementById("fareaSpan").style.display="block";
        }
        else{
            document.getElementById("fareaSpan").style.display="none";
        }
        if (fAreaDD.selValue[0]) {
            var fareaId = fAreaDD.selValue[0].replace("#","");
            fareaId = (fareaId.split('.'))[0];
        }
        document.getElementById('rowarea').style.display='block';
        gbi('roleValContainer2').innerHTML="";
        roleDD.init('roleContainer2', 'roleContainerDD2', '', '370px', '200px', 0, '', arrRoles[fareaId], 'roleValContainer2', 'roleDD', 'or start typing a Role','','Role');
        roleDD.gbi(roleDD.id).getElementsByTagName('input')[0].value="Select or start typing a Role";
        previousFareaValue=fAreaDD.selValue[0];
        roleDD.selValue.length = 0;
        document.getElementById('inpRoleContainerDD2').readOnly=false;

    }
}

function showHideContainersWhenEmpty(elemId,containerId)
{
    var countSpan = document.getElementById(elemId).getElementsByTagName("span");
    if(countSpan.length > 0){
        document.getElementById(containerId).style.display="block";
        if(containerId =='autoFwdEmailContainer' && document.getElementById('autofwdeml_chk').checked && document.getElementById('collectresp_eapps').checked) {
            document.getElementById('setFilterN').style.display="block";
        }
    }
    else{
        document.getElementById(containerId).style.display="none";
        if(containerId =='autoFwdEmailContainer') {
            document.getElementById('setFilterN').style.display="none";
        }
    }
}

var ugCountFlag = 0;
var countUGcourse=function(){
    /*
     var len=0;
     while(ugDD.selValue[len])
     {
     len++;
     }
     if (!ugCountFlag && len > 2) {
     var a=ugDD.gbi(ugDD.ddCont).getElementsByTagName('a');
     if (a.length > 2) {
     for(var i=0; i < a.length; i++){
     if(a[i].rel=='#17' || a[i].rel=='#18'){
     a[i].onclick();
     }
     }
     }
     ugCountFlag = 1;
     }
     */
    showHideContainersWhenEmpty("ugContainerSelector2",'ugContainer');
    filterinstitute('ugContainerDD2', 'ugFilterCheck', 'ugFilterCont', ugDD, "#11");
}

var pgCountFlag = 0;
var countPGcourse=function(){
    /*
     var len=0;
     while(pgDD.selValue[len])
     {
     len++;
     }
     if (!pgCountFlag && len > 2) {
     var a=pgDD.gbi(pgDD.ddCont).getElementsByTagName('a');
     if (a.length > 2) {
     for(var i=0; i < a.length; i++){
     if(a[i].rel=='#19' || a[i].rel=='#20'){
     a[i].onclick();
     }
     }
     }
     pgCountFlag = 1;
     }
     */
    showHideContainersWhenEmpty("pgContainerSelector2","pgContainer");
    filterinstitute('pgContainerDD2', 'pgFilterCheck', 'pgFilterCont', pgDD, "#13");
}
var countPPGcourse=function(){
    showHideContainersWhenEmpty("ppgContainerSelector2","ppgContainer");
}

var countEmail= function(){
    showHideContainersWhenEmpty("emailContainerSelector2","emailContainer");
}

var countEapps= function(){
    showHideContainersWhenEmpty("eappsContainerSelector2","autoFwdEmailContainer");
}

var countSM= function(){
    showHideContainersWhenEmpty("SMContainerSelector2","autoFwdSMContainer");
}

var countSubUser= function(){

    showHideContainersWhenEmpty("subUserContainerSelector2","subUserContainer");
    allusersSelect();
}

var countPrefLoc=function(){
    var countSpan = document.getElementById('prefLocContainerSelector2').getElementsByTagName("span");
    showHideContainersWhenEmpty("prefLocContainerSelector2","preflocContainer");
    if(countSpan.length > 9){
        document.getElementById("locfilter_sel_err").style.display="block";
        document.getElementById("locfilter_sel_err").className = 'error2';
        document.getElementById("locfilter_sel_err").innerHTML ="You cannot select more than 9 locations";
    }
    else{
        document.getElementById("locfilter_sel_err").style.display="none";
    }

}

var countLocalityNew = function() {
    var countSpan = document.getElementById("localitiesContainerSelector2").getElementsByTagName("li");
    var coll=document.getElementById("localitiesContainerSelector2").getElementsByTagName("li");
    var curSelInput=localitiesDD.gbi(localitiesDD.id).getElementsByTagName('input')[0];
    var i=0;
    var isOtherSelected = false;

    if(localitiesDD.selValue.length) {
        for(var x=0; x<localitiesDD.selValue.length; x++){
            if(localitiesDD.selValue[x]=='#50.50.50.50'){
                localitiesDD.otherFlag=1;
                break;
            }
        }
    }
    else{
        document.getElementById('LocalityStrSpan').style.display="none";
        localitiesDD.otherFlag=0;
    }

    for(i=0;i< countSpan.length;i++){
        var str=coll[i].innerHTML;
        str=str.replace(/<\/?[^>]+(>|$)/g, '')
        str = getTextString(str);
        if(str == "Other National Locality")
        {
            document.getElementById("LocalityStrSpan").style.display="block";
            coll[i].parentNode.removeChild(coll[i]);
            localitiesDD.otherFlag=1;
        }
        else{
            for(var x=0; x<localitiesDD.selValue.length; x++){
                if(localitiesDD.selValue[x]=='#50.50.50.50'){
                    localitiesDD.otherFlag=1;
                    document.getElementById("LocalityStrSpan").style.display="block";
                    break;
                }
                else{
                    localitiesDD.otherFlag=0;
                    document.getElementById("LocalityStrSpan").style.display="none";
                }
            }
        }
    }
}

var countLocality = function() {
    var countSpan = document.getElementById("localitiesContainerSelector2").getElementsByTagName("span");
    var coll=document.getElementById("localitiesContainerSelector2").getElementsByTagName("span");
    var curSelInput=localitiesDD.gbi(localitiesDD.id).getElementsByTagName('input')[0];
    var i=0;
    var isOtherSelected = false;

    if(localitiesDD.selValue.length) {
        for(var x=0; x<localitiesDD.selValue.length; x++){
            if(localitiesDD.selValue[x]=='#50.50.50.50'){
                localitiesDD.otherFlag=1;
                break;
            }
        }
    }
    else{
        document.getElementById('LocalityStrSpan').style.display="none";
        localitiesDD.otherFlag=0;
    }

    for(i=0;i< countSpan.length;i++){
        var str=coll[i].innerHTML;
        str=str.replace(/<\/?[^>]+(>|$)/g, '')
        str = getTextString(str);
        if(str == "Other National Locality")
        {
            document.getElementById("LocalityStrSpan").style.display="block";
            coll[i].parentNode.removeChild(coll[i]);
            localitiesDD.otherFlag=1;
        }
        else{
            for(var x=0; x<localitiesDD.selValue.length; x++){
                if(localitiesDD.selValue[x]=='#50.50.50.50'){
                    localitiesDD.otherFlag=1;
                    document.getElementById("LocalityStrSpan").style.display="block";
                    break;
                }
                else{
                    localitiesDD.otherFlag=0;
                    document.getElementById("LocalityStrSpan").style.display="none";
                }
            }
        }
    }
}

var countLocation=function(){
    var countSpan = document.getElementById("naukContainerSelector2").getElementsByTagName("span");
    var coll=document.getElementById("naukContainerSelector2").getElementsByTagName("span");
    var curSelInput=cusNew2.gbi(cusNew2.id).getElementsByTagName('input')[0];
    var i=0;
    var isOtherSelected = false;



    if(cusNew2.selValue.length)
        for(var x=0; x<cusNew2.selValue.length; x++){
            if(cusNew2.selValue[x]=='#50.50.50'){
                cusNew2.otherFlag=1;
                break;
            }
        }
    else{
        document.getElementById('CityStrSpan').style.display="none";
        cusNew2.otherFlag=0;
    }

    if(intLoc.selValue.length)
        for(var x=0; x<intLoc.selValue.length; x++){
            if(intLoc.selValue[x]=='#26.0.0'){
                intLoc.otherFlag=1;
                break;
            }
        }
    else{
        document.getElementById('OtherCountrySpan').style.display="none";
        intLoc.otherFlag=0;
    }

    for(i=0;i< countSpan.length;i++){
        var str=coll[i].innerHTML;
        str=str.replace(/<\/?[^>]+(>|$)/g, '')
        str = getTextString(str);
        if(str == "Other National Locations")
        {
            document.getElementById("CityStrSpan").style.display="block";
            coll[i].parentNode.removeChild(coll[i]);
            cusNew2.otherFlag=1;
        }
        else{
            for(var x=0; x<cusNew2.selValue.length; x++){
                if(cusNew2.selValue[x]=='#50.50.50'){
                    cusNew2.otherFlag=1;
                    document.getElementById("CityStrSpan").style.display="block";
                    break;
                }
                else{
                    cusNew2.otherFlag=0;
                    document.getElementById("CityStrSpan").style.display="none";
                }
            }
        }

        if(str=='Other International Location')
        {
            document.getElementById("OtherCountrySpan").style.display="block";
            coll[i].parentNode.removeChild(coll[i]);
            intLoc.otherFlag=1;
        }
        else{
            for(var x=0; x<intLoc.selValue.length; x++){
                if(intLoc.selValue[x]=='#26.0.0'){
                    intLoc.otherFlag=1;
                    document.getElementById("OtherCountrySpan").style.display="block";
                    break;
                }
                else{
                    intLoc.otherFlag=0;
                    document.getElementById("OtherCountrySpan").style.display="none";
                }
            }
        }


    }
    jobIndicatorCount();
    hideShowLocationContainer();
}

var countLocationNew=function(){
    var countSpan = document.getElementById("naukContainerSelector2").getElementsByTagName("li");
    var coll=document.getElementById("naukContainerSelector2").getElementsByTagName("li");
    var curSelInput=cusNew2.gbi(cusNew2.id).getElementsByTagName('input')[0];
    var i=0;
    var isOtherSelected = false;



    if(cusNew2.selValue.length)
        for(var x=0; x<cusNew2.selValue.length; x++){
            if(cusNew2.selValue[x]=='#50.50.50'){
                cusNew2.otherFlag=1;
                break;
            }
        }
    else{
        document.getElementById('CityStrSpan').style.display="none";
        cusNew2.otherFlag=0;
    }

    if(intLoc.selValue.length)
        for(var x=0; x<intLoc.selValue.length; x++){
            if(intLoc.selValue[x]=='#26.0.0'){
                intLoc.otherFlag=1;
                break;
            }
        }
    else{
        document.getElementById('OtherCountrySpan').style.display="none";
        intLoc.otherFlag=0;
    }

    for(i=0;i< countSpan.length;i++){
        var str=coll[i].innerHTML;
        str=str.replace(/<\/?[^>]+(>|$)/g, '')
        str = getTextString(str);
        if(str == "Other National Locations")
        {
            document.getElementById("CityStrSpan").style.display="block";
            coll[i].parentNode.removeChild(coll[i]);
            cusNew2.otherFlag=1;
        }
        else{
            for(var x=0; x<cusNew2.selValue.length; x++){
                if(cusNew2.selValue[x]=='#50.50.50'){
                    cusNew2.otherFlag=1;
                    document.getElementById("CityStrSpan").style.display="block";
                    break;
                }
                else{
                    cusNew2.otherFlag=0;
                    document.getElementById("CityStrSpan").style.display="none";
                }
            }
        }

        if(str=='Other International Location')
        {
            document.getElementById("OtherCountrySpan").style.display="block";
            coll[i].parentNode.removeChild(coll[i]);
            intLoc.otherFlag=1;
        }
        else{
            for(var x=0; x<intLoc.selValue.length; x++){
                if(intLoc.selValue[x]=='#26.0.0'){
                    intLoc.otherFlag=1;
                    document.getElementById("OtherCountrySpan").style.display="block";
                    break;
                }
                else{
                    intLoc.otherFlag=0;
                    document.getElementById("OtherCountrySpan").style.display="none";
                }
            }
        }


    }
    jobIndicatorCountNew();
    hideShowLocationContainer();
}

var checkIndustry= function(){
    if(indDD.selValue[0] == "#29"){
        document.getElementById("industrySpan").style.display="block";
    }
    else{
        document.getElementById("industrySpan").style.display="none";
    }

}


/*function removeLocality(str){
  id = document.getElementById(str);
  id.parentNode.removeChild(id);
  for(var i=0; i<localitiesDD.selValue.length;i++ )
  {
    if(localitiesDD.selValue[i]==str)
      localitiesDD.selValue.splice(i,1);
  }
  localitiesDD.showSelected_Value();
  for(i=0;i<other_locality.length;i++){
    if(other_locality[i]== str){
      other_locality.splice(i,1);
    }

  }
}




function removeCountry(str){
    id = document.getElementById(str);
    id.parentNode.removeChild(id);
    for(var i=0; i<intLoc.selValue.length;i++ )
    {
        if(intLoc.selValue[i]==str)
            intLoc.selValue.splice(i,1);
    }
    intLoc.showSelected_Value();
    for(i=0;i<other_country.length;i++){
        if(other_country[i]== str){
            other_country.splice(i,1);
        }

  }
console.log('jobIndicatorCount',8);
  jobIndicatorCount();
  hideShowLocationContainer();
}*/
/*
   function cancelLoc(loc){
   if(loc=='city')
   document.getElementById('OtherLocation').value="";
   else if(loc=='country')
   document.getElementById('OtherCountry').value="";

   }*/

function cancelOperation (type) {
    obj = document.getElementById(type);
    obj.value="";
    obj.style.color = '#000';
}


/*function removeCity(str){
  id = document.getElementById(str);
  id.parentNode.removeChild(id);
  for(var i=0; i<cusNew2.selValue.length;i++ )
  {
    if(cusNew2.selValue[i]==str)
      cusNew2.selValue.splice(i,1);
  }
  cusNew2.showSelected_Value();
  for(var i=0;i<other_city.length;i++){
    if(other_city[i]== str){
      other_city.splice(i,1);
    }
  }
  console.log('jobIndicatorCount',9);
  jobIndicatorCount();
  hideShowLocationContainer();
  hideShowLocalityContainer();
}*/

/*function emptySelValue(){
  if(intLoc!=''){
    intLoc.otherFlag=0;
  }
  if(cusNew2!=''){
    cusNew2.otherFlag=0;
  }
  for(var i=0; i<cusNew2.selValue.length;i++ )
  {
    cusNew2.selValue.splice(i,1);
  }
  cusNew2.showSelected_Value();
  for(var i=0;i<other_city.length;i++){
    other_city.splice(i,1);
  }
  for(var i=0; i<intLoc.selValue.length;i++ )
  {
    intLoc.selValue.splice(i,1);
  }
  intLoc.showSelected_Value();
  for(i=0;i<other_country.length;i++){
    other_country.splice(i,1);
  }
  console.log('jobIndicatorCount',10);
  jobIndicatorCount();
  hideOtherLocationBox();
  hideShowLocationContainer();
  hideShowLocalityContainer();
}
*/
function hideOtherLocationBox(){
    document.getElementById('CityStrSpan').style.display="none";
    document.getElementById('OtherCountrySpan').style.display="none";
}

function hideShowLocationContainer(){

    var countSpan = document.getElementById("naukContainerSelector2").getElementsByTagName("span");
    if(countSpan.length > 0 ){
        document.getElementById('locationContainer').style.display="block";
    }
    else{
        document.getElementById('locationContainer').style.display="none";
    }
}


function getTextString(stringVal) {
    var stringval = new String("");
    var subCategoryId = document.getElementById('subCategoryId').value;
    if(subCategoryId == 1 || subCategoryId ==3)
        stringval = removeWordChars(stringVal);

    else
        stringval = stringVal;
    stringval = stringval.replace(regexp1,"");
    regexp2=new RegExp ('&[^;]*;',"gi");
    stringval = stringval.replace(regexp2," ");
    stringval = stringval.replace(/<p [^>.]*>/gi,"");
    stringval = stringval.replace(/<ul [^>.]*>/gi,"");
    stringval = stringval.replace(/<ol [^>.]*>/gi,"");
    stringval = stringval.replace(/<li [^>.]*>/gi,"");
    stringval = trim(stringval);
    return stringval;
}


function intersection(cities,other_cities,common){
    var i=0;var k=0;var j=0;var m=0;
    var common_arr=new Array();
    var uncommon_arr=new Array();
    for(i=0;i<cities.length;i++){
        var flag=0  ;
        for(j=0;j<other_cities.length;j++){
            if(cities[i]==other_cities[j]){
                flag=1;
                break;
            }
        }
        if(flag==1){
            common_arr[m++]=cities[i];
        }
        else if(flag==0){
            uncommon_arr[k++]=cities[i];
        }
    }
    if(common==1){
        return common_arr;

    }

    else if(common==0){
        return uncommon_arr;
    }
}

function removeLoaderPhoto(){

    document.getElementById("loaderPhoto").style.display="none";
    document.getElementById("iframeLoaderPhoto").style.display="block";
    if(document.getElementById("uploadPhotoClose"))
        document.getElementById("uploadPhotoClose").style.display="block";
}

function removeLoaderPPT(){
    document.getElementById("loaderPPT").style.display="none";
    document.getElementById("iframeLoaderPPT").style.display="block";
    if(document.getElementById("uploadPresentClose"))
        document.getElementById("uploadPresentClose").style.display="block";
}

function getPhotoLoadingMsg(){
    document.getElementById("loaderPhoto").style.display="block";
    document.getElementById("iframeLoaderPhoto").style.display="none";
    document.getElementById("uploadPhotoClose").style.display="none";

}


function getPPTLoadingMsg(){
    document.getElementById("loaderPPT").style.display="block";
    document.getElementById("iframeLoaderPPT").style.display="none";
    document.getElementById("uploadPresentClose").style.display="none";

}


function jobIndicatorCount(){
    var countSpan = document.getElementById("naukContainerSelector2").getElementsByTagName("span");
    if(document.getElementById("naukContainerSelector2").getElementsByTagName("span").length <= 9){
        if(document.getElementById('loc_count_span')){
            document.getElementById("location_err").style.display="none";
            document.getElementById('loc_count_span').innerHTML= countSpan.length;
            document.getElementById('tot_job_count_span').innerHTML=Math.ceil((countSpan.length)/3);
            document.getElementById('loc_count').value= countSpan.length;
            var addjob_count_temp = Math.ceil((countSpan.length)/3)- document.getElementById('job_count').value;
            if(addjob_count_temp < 0)
                addjob_count_temp = 0;
            if(document.getElementById("addjob_count_span"))
                document.getElementById("addjob_count_span").innerHTML = addjob_count_temp;
            document.getElementById("addjob_count").value = addjob_count_temp;
            if (document.getElementById('loc_count_span').innerHTML >= 3){
                document.getElementById('jobindicator').style.display='block';
            }
            else{
                document.getElementById('jobindicator').style.display='none';
            }
        }
    }
    else{
        if(document.getElementById('loc_count_span'))
        {
            document.getElementById('loc_count_span').innerHTML= countSpan.length;
            document.getElementById('tot_job_count_span').innerHTML=Math.ceil((countSpan.length)/3);
            document.getElementById('loc_count').value= countSpan.length;
            var addjob_count_temp = Math.ceil((countSpan.length)/3)- document.getElementById('job_count').value;
            if(addjob_count_temp < 0)
                addjob_count_temp = 0;
            if(document.getElementById("addjob_count_span"))
                document.getElementById("addjob_count_span").innerHTML = addjob_count_temp;
            document.getElementById("addjob_count").value = addjob_count_temp;


            document.getElementById("location_err").style.display="block";
            document.getElementById("location_err").className = 'error';
            document.getElementById("location_err").innerHTML ="You cannot select more than 9 locations";
        }
    }
    showLocalitiesForLocationSelected();
}
//OFFLINE PHASE II STARTS


function jobIndicatorCountNew(){
    var countSpan = document.getElementById("naukContainerSelector2").getElementsByTagName("li");
    if(document.getElementById("naukContainerSelector2").getElementsByTagName("li").length <= 9){
        if(document.getElementById('loc_count_span')){
            document.getElementById("location_err").style.display="none";
            document.getElementById('loc_count_span').innerHTML= countSpan.length;
            document.getElementById('tot_job_count_span').innerHTML=Math.ceil((countSpan.length)/3);
            document.getElementById('loc_count').value= countSpan.length;
            var addjob_count_temp = Math.ceil((countSpan.length)/3)- document.getElementById('job_count').value;
            if(addjob_count_temp < 0)
                addjob_count_temp = 0;
            if(document.getElementById("addjob_count_span"))
                document.getElementById("addjob_count_span").innerHTML = addjob_count_temp;
            document.getElementById("addjob_count").value = addjob_count_temp;
            if (document.getElementById('loc_count_span').innerHTML >= 3){
                document.getElementById('jobindicator').style.display='block';
            }
            else{
                document.getElementById('jobindicator').style.display='none';
            }
        }
    }
    else{
        if(document.getElementById('loc_count_span'))
        {
            document.getElementById('loc_count_span').innerHTML= countSpan.length;
            document.getElementById('tot_job_count_span').innerHTML=Math.ceil((countSpan.length)/3);
            document.getElementById('loc_count').value= countSpan.length;
            var addjob_count_temp = Math.ceil((countSpan.length)/3)- document.getElementById('job_count').value;
            if(addjob_count_temp < 0)
                addjob_count_temp = 0;
            if(document.getElementById("addjob_count_span"))
                document.getElementById("addjob_count_span").innerHTML = addjob_count_temp;
            document.getElementById("addjob_count").value = addjob_count_temp;


            document.getElementById("location_err").style.display="block";
            document.getElementById("location_err").className = 'error';
            document.getElementById("location_err").innerHTML ="You cannot select more than 9 locations";
        }
    }
    //showLocalitiesForLocationSelectedNew();
    if(document.getElementById('loc_count_span') && document.getElementById('refreshPattern')) {
        if(document.getElementById('refreshPattern').value !='disable') {
            creditCalulation();
        }
    }
}



function validateEmail(email)
{
    if(email) {
        var result = validateEmailAddr(email);
        if(!result) {
            alert('Please enter a valid email id');
            return false;
        } else if (email.length > 50){
            alert('The email address cannot be more than 50 characters.');
            return false;
        } else {
            return true;
        }
    }
}
//OFFLINE PHASE II ENDS

/*Create Predictor array*/
function getSortedArray(arrOriginal,predictedIdString,feildName,perc,minElements) {
    //minElements is the minimum number of elemenets taht much be there in the suggested list
    if(predictedIdString=='') { //If this string is blank return thr original array
        return arrOriginal;
    }

    var finalArr='';
    var object = eval(arrOriginal);
    predictedIdString=predictedIdString.replace('\n',''); // Faltu ---- ???
    var predictedId=predictedIdString.split(',');
    if(feildName=='UGCOURSE'||feildName=='PGCOURSE') {
        finalArr+="{'a666':'--Frequently Used--',";
    }

    if(feildName=="FAREA"|| feildName=="INDTYPE") {    // ?????? - prec should be passed

        if((FAREAPERC > 0.9 && feildName=="FAREA") || ((INDTYPEPERC > 0.7 || INDTYPEPERC == -1) && feildName=="INDTYPE")){
            finalArr+="{'a666':'--Suggested--',";
        }
        else{
            finalArr+="{'a666':'--Frequently Used--',";
        }

    }

    if(feildName=="CITY"|| feildName=="COUNTRY") {
        finalArr+="{'a666':'--Suggested--',";
    }
    var count=0;
    for (i in object)
    {
        if(count < (minElements-predictedId.length) && !ifPresent(i,predictedId) && i[0]!='a') {
            predictedIdString+=","+i ;
            count++;
        }
    }
    if(feildName=="UGCOURSE"){
        predictedIdString+=","+"#17";
        predictedIdString+=","+"#18";
    }

    if(feildName=="PGCOURSE"){
        predictedIdString+=","+"#19";
        predictedIdString+=","+"#20";
    }


    predictedId=predictedIdString.split(',');
    for(var i=0;i< predictedId.length;i++){
        predictedId[predictedId[i]]=predictedId[i];
    }

    for(id in predictedId){
        for (i in object)
        {
            if(i==id){
                finalArr+="'"+i+"':'"+object[i]+"',";
            }
        }
    }
    finalArr+="'a2000':'-------------------------------------------------------------',";  //Normal Values
    for (i in object)
    {
        if(!predictedId[i]) {
            if(feildName=="FAREA" || feildName=="INDTYPE") {
                if(i!="a666" && i != 'a2000')
                {
                    finalArr+="'"+i+"':'"+object[i]+"',";
                }
            }
            else {
                finalArr+="'"+i+"':'"+object[i]+"',";
            }
        }
    }

    finalArr=finalArr+'}';
    finalArr=finalArr.replace(',}','}');
    var finalArrForField = eval('(' +finalArr+ ')');
    return finalArrForField;
}

/*
 * Function to check if value is present in an array or not
 */
function ifPresent(element,arr) {
    for(var i=0;i<arr.length;i++){
        if(arr[i]==element){
            return true;
        }
    }
    return false;
}


function setEducationVar(doctorateCourseString,doctorateSpecString)
{
    ppgDD= new cusDropdown();
    prePpgCourse=[];
    doctoratecourseArr= doctorateCourseString.split(",");

    k=0;
    for(i=0;i<doctoratecourseArr.length;i++){
        if(doctoratecourseArr[i]!='')
            prePpgCourse[k++]="#"+doctoratecourseArr[i];
    }

    doctoratespecialization= doctorateSpecString.split(",");

    prePpgSpec=[];
    k=0;
    for(i=0;i<doctoratespecialization.length;i++){
        if (doctoratespecialization[i]!='')
            prePpgSpec[k++]='#'+doctoratespecialization[i];
    }
}

function setTodayDate(tDate)
{
    todayDate = tDate;

}


function setDefaultValues(fEls){
    var placeholderSupport = function(){var p = document.createElement('input');return ('placeholder' in p)}
    if(!placeholderSupport){
        for(var x=0;x<fEls.length;x++){
            var elm=$n('#'+fEls[x]);
            if(elm.attr('value')=='' || elm.attr('value')==elm.attr('placeholder')){elm.val(elm.attr('placeholder'));elm.css({'color':'#666'})}                                         elm.addEvent('focus',function(){defTextFocus($n(this),'f')})
            elm.addEvent('blur',function(){defTextFocus($n(this),'b')})
        }
        var defTextFocus=function(obj,e){
            if(obj.val()==obj.attr('placeholder') && e=='f'){obj.val('');obj.removeAttr('style')}
            else if((obj.val()=='' || obj.val()==obj.attr('placeholder')) && e=='b'){obj.val(obj.attr('placeholder'));obj.css({'color':'#666'})}
        }
    }
}

function showViewQuestionnaire(elem){
    if(typeof elem == "undefined")
        return false;
    var value = document.getElementById(elem) ? document.getElementById(elem).value : "-1";
    if(value !="-1" && value.length>0){
        viewTemplateUrl = EappsQuestionnaire+"previewQuestion?csmQuestId="+value+"&eAppsQuestId="+value;
        templateText = $n("#"+elem+" option:selected").text();
        if(templateText.length > 6){
            previewText = templateText.substring(0,6)+" ...";
        }else{
            previewText = templateText;
        }
        if(document.getElementById(elem+'Side')){
            document.getElementById(elem+'Side').innerHTML = "<a target='_blank' href='"+ viewTemplateUrl +"'>Preview "+previewText+"</a> <a href='javascript:void(0);' onClick=" + "resetEappsDD('" +elem+ "');><img src='https://static.naukri.com/rstatic/images/cross_small.gif' border='0'></img></a>";
        }
    }else{
        createTemplateUrl = EappsQuestionnaire+"showList?_REF=1";
        if(document.getElementById(elem+'Side')){
            document.getElementById(elem+'Side').innerHTML = "<a target='_blank' href='"+ createTemplateUrl +"'>Create Questionnaire</a>";
        }
    }
}

function resetEappsDD(elem){
    if(typeof elem == "undefined")
        return false;
    document.getElementById(elem).value = '-1';
    showViewQuestionnaire(elem);
}

function textareaLimit(selector){
    if($n.browser().name.match('msie') && $n.browser().version.match(/(9|7|8)\.0/)){
        $n(selector).addEvent('keypress',function(e){
            if ($n(this).val().length == $n(this).attr('maxlength') && !document.selection.createRange().htmlText.length)
                $n.preventDefault(e);
        }).addEvent('paste',function(){
            var seln = document.selection.createRange().htmlText.length;
            var org = clipboardData.getData('Text');
            clipboardData.setData('Text',org.substring(0,seln||($n(this).attr('maxlength')-$n(this).val().length)));
            setTimeout(function(){clipboardData.setData('Text',org);},0);
        });
    }
}

function showLogoPreview () {
    if (undefined != document.getElementById("logosel")) {
        logo_url = previewLogoUrl + document.getElementById("logosel").value + ".gif";
        if (document.getElementById("logosel").value != -1) {
            document.getElementById("previewLogo").innerHTML = "&nbsp;&nbsp;&nbsp;<a href='" + logo_url + "' target='_blank'>Preview Logo</a>";
            $n("#logoMessage").hide();
        } else {
            document.getElementById("previewLogo").innerHTML = "";
            $n("#logoMessage").show();
        }
    }
}

//Radio toggle function
function radioButtonToggle(showButtonId,hideButtonId,removeError,str,buttonId){
    $n('#'+showButtonId).show();
    $n('#'+hideButtonId).hide();
    $n('#'+removeError).hide();
    $n('#'+buttonId).removeAttr("disabled");
    $n('#'+showButtonId).childrens('option[value="'+str+'"]').attr({ 'selected':'selected'});
}

function showHideSMTemplate(input){
    if(input=='rd_exPro'){
        document.getElementById('SMTemplate').style.display = 'none';
    }else{
        document.getElementById('SMTemplate').style.display = 'block';
    }
}

function validateRPEmail () {
    var errorMsg = 'recProfEmail: ';
    if(document.getElementById('recProfEmail').value != '') {
        if (document.getElementById('recProfEmail').value.length > 100) {
            errorMsg += "The email address cannot be more than 100 characters.<br />";
        } else if (!validateEmailAddr (document.getElementById('recProfEmail').value)) {
            errorMsg += "Please enter a valid email address.<br />";
        }
    }else{
        return errorMsg;
    }
    return errorMsg;
}

function publicJobtoPrivate(url, obj){
    document.getElementById("privateJobLink").href=url;
    modalwin(500, 'privateJobLB', obj);
}

function convertJobToIJP(url, obj){
    globalUrl = url;
    document.getElementsByName('IJPShareFlag')[0].checked = true;
    document.getElementById("IJPLink").href=globalUrl + '&ijpType=' + document.getElementsByName('IJPShareFlag')[0].value;
    modalwin(500, 'IJPJobLB', obj);
}

function RemoveFromIJP(url, sessionId, currPage, TotalPages, tab){
    document.getElementById("RemoveIJPLink").href=url;
    modalwin(500, 'RemoveIJPJobLB', obj);
}

function updateIJPUrl(url){
    var radioButtons = document.getElementsByName('IJPShareFlag');
    for (var j = 0; j < radioButtons.length; j++) {
        if (radioButtons[j].checked) { //index has to be j.
            document.getElementById("IJPLink").href=globalUrl + '&ijpType=' + document.getElementsByName('IJPShareFlag')[j].value;
            break;
        }
    }

}

function showCpyTip(id){
    $n('#'+id).css({'display':'inline-block','opacity':'', 'filter':''});
    setTimeout(function(){$n('#'+id).fadeOut()},8000);
}

function clearPredictions(){
    setTimeout(function(){
        if(document.getElementById('tagValArr')){
            if((document.getElementById('tagValArr').value).replace(/^[\s]+/gi, '')==''){
                gbi('sugg').style.display='none';
                return false;
            }
        }
        else{
            if((document.getElementById('keyword').value).replace(/^[\s]+/gi, '')==''){
                gbi('sugg').style.display='none';
                return false;
            }
        }
        getPrediction();
        if(document.getElementById('tagValArr'))
            getRelatedConceptSuggestion(AJAX_REQUEST_URL+'/Job/getRelatedConceptSuggestion',document.getElementById('tagValArr').value,"Online")
        else{
            getRelatedConceptSuggestion(AJAX_REQUEST_URL+'/Job/getRelatedConceptSuggestion',document.getElementById('keyword').value,"Online")
        }
    },100);
}


function changeEmailPageSM(obj){

    if(obj){
        document.getElementById("id_ToppageChange").value=obj.value;
        document.getElementById("id_BottompageChange").value = obj.value;
        document.frmAutoSavedJobs.action = devJPListing + "/JobListing/emailsSM";
        document.frmAutoSavedJobs.method = "post";
        document.frmAutoSavedJobs.submit();
    }
}

function changeEmailPageRMJ(obj){
    if(obj){
        document.getElementById("id_ToppageChange").value=obj.value;
        document.getElementById("id_BottompageChange").value = obj.value;
        document.frmJobListing.action = devJPListing + "/JobListing/rMJJobs";
        document.frmJobListing.method = "post";
        document.frmJobListing.submit();
    }

}

function setCookie(cname,cvalue,exdays)

{

    var d = new Date();

    d.setTime(d.getTime()+(exdays*24*60*60*1000));

    var expires = "expires="+d.toGMTString();

    document.cookie = cname + "=" + cvalue + "; " + expires;

}



function getCookie(cname)

{

    var name = cname + "=";

    var ca = document.cookie.split(';');

    for(var i=0; i<ca.length; i++){

        var c = ca[i];

        if (c.indexOf(name)==0)

            return c.substring(name.length,c.length);

    }

    return "";

}



function showQuestionnaireLB(respMethod){

    if(getCookie("qsJpNaukri") == ""){

        if(respMethod == "eapps" && $n('#eappsTemplate').val()=="-1"){

            return true;

        }

        if(respMethod == "SM" && $n('#SMTemplate').val()=="-1"){

            if($n('#SMTemplate').currObj().style.display == "block"){

                return true;

            }

        }

        if(respMethod == 'applyIntegration' && $n('#aiTemplate').val()=="-1"){
            return true;
        }

        if(respMethod == 'offl' && $n('#walkinTemplate').val()=="-1"){
            return true;
        }

    }

    return false;

}



//scripts for questionnaire

/* checkbox on off */

var ckhtogle;



var checkboxSwitch=function(_callback){

    $n('.on_off').css({'display':'none'});

    var i,rbtn,inpbtn,button;

    rbtn=$n('input[type=checkbox].on_off');

    for(i=0;i<rbtn.length;i++){

        if(rbtn.eq(i).val()=='on'){

            rbtn.eq(i).parent().css({'backgroundPosition':'left 0'});}

        else if(rbtn.eq(i).val()=='off'){

            rbtn.eq(i).parent().css({'backgroundPosition':'left -31px'});}

    }



    ckhtogle = function switchToggleEvent() {

        inpbtn=$n(this).childrens('input[type=checkbox]');

        button=null;

        button=inpbtn.val();

        if(button == 'on'){inpbtn.attr('value','off');$n(this).css({'backgroundPosition':'left -31px'}); }

        else{inpbtn.attr('value','on'); $n(this).css({'backgroundPosition':'left 0'}); }

        if(_callback && typeof _callback == 'function'){

            _callback($n(this));

        }

    }

    $n(".switchN").click(ckhtogle);

}



function mycallback(a){

    setTimeout(function(){checkboxSwitch()}, 100);

}



function makeEducationArray(educationArr){
    var eduArr = {};

    for(var i = 0; i<educationArr.length; i++){
        var key = (educationArr[i].firstChild.textContent)?(educationArr[i].firstChild.textContent):(educationArr[i].firstChild.innerText);
        var allSubNodes = educationArr[i].getElementsByTagName("i");
        var subArr = [];
        for(var k = 0; k<allSubNodes.length; k++){
            var res = (allSubNodes[k].textContent)?(allSubNodes[k].textContent):(allSubNodes[k].innerText);
            res = res.replace(/[-, ]+/g, "").trim();
            subArr.push(res);
        }
        eduArr[key] = subArr;
    }
    return eduArr;

}



function skipQuestionnaire(subCat){

    logSkipClicksQuestionnaire("skip", subCat);

    // submitJPForm(subCat);

}



function skipQstnrForFifteenDays(subCat){

    cname = "qsJpNaukri";

    cvalue= "qsJpNaukri";

    exdays = 15;

    setCookie(cname,cvalue,exdays);

    logSkipClicksQuestionnaire("skip15", subCat);

    // submitJPForm(subCat);

}



function submitJPForm(subCat){
    if (typeof(jpAppName) != "undefined" && jpAppName == "Online") {
        if($n("#txtAreaVenue").length && trim($n("#txtAreaVenue").val()).length > 0) {
            var venueObj = venueStorage();
            venueObj.setVenuesStorage();
        }
    }
    if(subCat !=2){

        $editor.viewSrc() ;
        if(isPV != "1")
            $editorCP.viewSrc();

    }

    mapToOldValue();

    document.jpFirstPage.method = 'post';

    document.jpFirstPage.submit();

}



function getQuestionnaireName(){

    questionnaireName = document.getElementById("saveQuesAs").value;

    //questionnaireName = questionnaireName;

    response = new Array();

    if(questionnaireName.length > 0){

        error = validateQuestionnaire(questionnaireName);

        if(error.length>0){

            document.getElementById("saveQuesAs_err").innerHTML = error;

            response['TYPE'] = false;

        }else{

            document.getElementById("saveQuesAs_err").innerHTML = '';

            response['TYPE'] = true;

        }

    }else{

        currDate = date;
        month_names_short= ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

        titleDesig = document.getElementById("desig").value;

        caseTitle = titleDesig.toCamelCase();

        dayDate = ("0" + currDate.getDate()).slice(-2);

        month  = month_names_short[currDate.getMonth()];//("0" + (currDate.getMonth() + 1)).slice(-2);

        hours = ("0" + currDate.getHours()).slice(-2);

        minute = ("0" + currDate.getMinutes()).slice(-2);

        year = currDate.getFullYear();

        questionnaireName = caseTitle.substr(0,35)+"_"+dayDate+month+"_"+year.toString().substr(2,2)+"_"+hours+minute;

        document.getElementById("saveQuesAs").value = questionnaireName;

        response['TYPE'] = true;

    }

    response['NAME'] = escape(questionnaireName);

    return response;

}



function validateQuestionnaire(questionnaireName){

    error = '';

    if(!textValidator(questionnaireName, /^[\w\s ,.?@&!#~\*\'-;+]*$/)){

        error = "Special characters other than ,.?@&!#'~*_-;+ are not allowed.";

    }

    else if(testHtmTag(questionnaireName, false) == true || testHtmlCommentTag(questionnaireName) == true){

        error = "HTML tags are not supported in this field.";

    }

    return error;

}



String.prototype.toCamelCase = function() {

    return this.replace(/^([A-Z])|\s(\w)/g, function(match, p1, p2, offset) {

        if (p2) return p2.toUpperCase();

        return p1.toLowerCase();

    });

};



function textValidator(stringToCheck, checkon) {

    var flag = false;

    var regexp = checkon;

    flag = regexp.test(stringToCheck);

    return flag ;

}

function validateEmailDomain(updateSetVal) {

    var regEx = /^[a-z0-9\-]+(\.[a-z0-9\-]+)*(\.[a-z]{2,4})$/;
    var error = '';
    if (updateSetVal.length == 0) {
        error = 'Please provide a valid Value.';
        return error;
    }
    result = updateSetVal.match(regEx);
    if (result == null) {
        error = 'Only alphanumeric characters with dot allowed.';
        return error;
    }
    if (updateSetVal.length > 70) {
        error = 'Max length allowed - 70 characters.';
        return error;
    }
    return error;
}

function stripHTML(arg){
    //var re= /<[^><]*>/g;
    var re = /\&lt;.+\&gt;/gi;
    arg=arg.replace(re, "");
    return arg;
}

tagsAllowed = '<b>,<p>,<i>,<li>,<ul>,<ol>,<u>,<div>,<strong>,<span>,<em>,<br>,<br/>';
function handleEditor(){
    var ele = $n('#iddescription_err');
    var eleCP = $n('#candidateProfile_err');
    if($editor.checkHTMLTags(tagsAllowed)){
        setEditorError(ele);
    }else{
        resetEditorError(ele);
    }
    if(isPV != "1"){
        if($editorCP.checkHTMLTags(tagsAllowed)){
            setEditorError(eleCP);
        }else{
            resetEditorError(eleCP);
        }
    }
}

function setEditorError(element){
    element.removeClass('noerror');
    element.addClass('error');
    element.html('HTML tags are not allowed in this field');
}
function resetEditorError(element){
    element.removeClass('error');
    element.addClass('noerror');
    element.html('');
}

function onDateInput(ths){
    document.getElementById('frmDt').innerText = formatDDMMMYYYY($n("#id_timeStart1").val());
    document.getElementById('toDt').innerText = formatDDMMMYYYY($n("#id_timeEnd1").val());
    document.getElementById('id_timeStart_hidden').value = formatDDMMMYYYY($n("#id_timeStart1").val(), 1);
    document.getElementById('id_timeEnd_hidden').value = formatDDMMMYYYY($n("#id_timeEnd1").val(), 1);
}
function formatDDMMMYYYY(dtStr, defaultFormat){
    var m_names = new Array("Jan", "Feb", "Mar",
        "Apr", "May", "Jun", "Jul", "Aug", "Sep",
        "Oct", "Nov", "Dec");

    dtStr = dtStr.split("-");
    var d = new Date(dtStr[0], dtStr[1]-1, dtStr[2]);

    d.setDate(d.getDate()- (30*payoutPeriod));

    var curr_date = ("0" + d.getDate()).slice(-2);
    var curr_month = d.getMonth();
    var curr_year = d.getFullYear();
    if(defaultFormat) {
        return curr_year + "-" + (curr_month + 1) + "-" + curr_date;
    } else {
        return curr_date + "-" + m_names[curr_month] + "-" + curr_year;
    }
}

var countFields = function () {
    var countSpan = document.getElementById("naukContainerSelector3").getElementsByTagName("span");
    var coll = document.getElementById("naukContainerSelector3").getElementsByTagName("span");
    var curSelInput = cusNew4.gbi(cusNew4.id).getElementsByTagName('input')[0];
    var i = 0;
    var isOtherSelected = false;



    if (cusNew4.selValue.length)
        for (var x = 0; x < cusNew4.selValue.length; x++) {
            if (cusNew4.selValue[x] == '#50.50.50') {
                cusNew4.otherFlag = 1;
                break;
            }
        }
    else {
        cusNew4.otherFlag = 0;
    }

    fieldIndicatorCount();
    hideShowFieldsContainer();
}

function hideShowFieldsContainer() {

    var countSpan = document.getElementById("naukContainerSelector3").getElementsByTagName("span");
    if (countSpan.length > 0) {
        document.getElementById('fieldContainer').style.display = "block";
    } else {
        document.getElementById('fieldContainer').style.display = "none";
    }
}


function fieldIndicatorCount() {
    var countSpan = document.getElementById("naukContainerSelector3").getElementsByTagName("span");
    if (document.getElementById("naukContainerSelector3").getElementsByTagName("span").length <= 9) {
        if (document.getElementById('loc_count_span')) {
            document.getElementById("location_err").style.display = "none";
            document.getElementById('loc_count_span').innerHTML = countSpan.length;
            document.getElementById('tot_job_count_span').innerHTML = Math.ceil((countSpan.length) / 3);
            document.getElementById('loc_count').value = countSpan.length;
            var addjob_count_temp = Math.ceil((countSpan.length) / 3) - document.getElementById('job_count').value;
            if (addjob_count_temp < 0)
                addjob_count_temp = 0;
            if (document.getElementById("addjob_count_span"))
                document.getElementById("addjob_count_span").innerHTML = addjob_count_temp;
            document.getElementById("addjob_count").value = addjob_count_temp;
            if (document.getElementById('loc_count_span').innerHTML >= 3) {
                document.getElementById('jobindicator').style.display = 'block';
            } else {
                document.getElementById('jobindicator').style.display = 'none';
            }
        }
    } else {
        if (document.getElementById('loc_count_span'))
        {
            document.getElementById('loc_count_span').innerHTML = countSpan.length;
            document.getElementById('tot_job_count_span').innerHTML = Math.ceil((countSpan.length) / 3);
            document.getElementById('loc_count').value = countSpan.length;
            var addjob_count_temp = Math.ceil((countSpan.length) / 3) - document.getElementById('job_count').value;
            if (addjob_count_temp < 0)
                addjob_count_temp = 0;
            if (document.getElementById("addjob_count_span"))
                document.getElementById("addjob_count_span").innerHTML = addjob_count_temp;
            document.getElementById("addjob_count").value = addjob_count_temp;


            document.getElementById("location_err").style.display = "block";
            document.getElementById("location_err").className = 'error';
            document.getElementById("location_err").innerHTML = "You cannot select more than 9 locations";
        }
    }
}

function emptySelectedFieldValue() {

    if (cusNew4 != '') {
        cusNew4.otherFlag = 0;
    }
    for (var i = 0; i < cusNew4.selValue.length; i++)
    {
        cusNew4.selValue.splice(i, 1);
    }

    cusNew4.showSelected_Value();
    fieldIndicatorCount();
    hideShowFieldContainer();
}

function hideShowFieldContainer() {
    var countSpan = document.getElementById("naukContainerSelector3").getElementsByTagName("span");
    if (countSpan.length > 0) {
        document.getElementById('fieldContainer').style.display = "block";
    } else {
        document.getElementById('fieldContainer').style.display = "none";
    }
}

/*function showLocalitiesForLocationSelected()
{
  countLocality();
  var locations = document.getElementById("naukContainerSelector2").getElementsByTagName("span");
  var curLocation = locations[locations.length-1];
  if(previousLocationValue && typeof curLocation != "undefined") {
      if (curLocation.id) {
          var locationId = curLocation.id.split("#")[1];
          var show = 0;
	  for(var key in arrLocalities) {
 	      if(key.includes(locationId)) {
	  	  show = 1;
		  break;
	      }
	  }
	  if(show) {
	      document.getElementById('rowLocality').style.display='block';
              document.getElementById('inpLocalitiesContainerDD2').readOnly=false;
	  }
	}
	previousLocationValue=curLocation.id;
      }
}
*/
/*function showLocalitiesForLocationSelectedNew()
{
  countLocalityNew();
  var locations = document.getElementById("naukContainerSelector2").getElementsByTagName("li");
  var curLocation = locations[locations.length-1];
  if(previousLocationValue && typeof curLocation != "undefined") {
      if (curLocation.id) {
          var locationId = curLocation.id.split("#")[1];
          var show = 0;
    for(var key in arrLocalities) {
        if(key.includes(locationId)) {
        show = 1;
      break;
        }
    }
    if(show) {
        document.getElementById('rowLocality').style.display='block';
              document.getElementById('inpLocalitiesContainerDD2').readOnly=false;
    }
  }
  previousLocationValue=curLocation.id;
      }
}
*/

function hideShowLocalityContainer(){
    var countSpan = document.getElementById("localitiesContainerSelector2").getElementsByTagName("span");
    if(countSpan.length > 0 ){
        document.getElementById('rowLocality').style.display="block";
    }
    else{
        document.getElementById('rowLocality').style.display="none";
    }
}

/*function refreshLocalities(value) {
    var localities = document.getElementById("localitiesContainerSelector2").getElementsByTagName("span");
    var length = localities.length;
    var localitiesForThisLocation = new Array();;
    for(var i=0; i < length; i++) {
	    if(localities[i].id.includes(value)) {
	        localitiesForThisLocation.push(localities[i]);
        } else {
	        //localitiesParent.removeChild(localities[i]);
        }
    }
    for (var locality in localitiesForThisLocation) {
    	dropDownItems = $n('#localitiesValContainer2 a');
    	for(var i=0; i < dropDownItems.length; i++) {
    	    if(dropDownItems.eq(i).currObj().rel == ('#'+localitiesForThisLocation[locality].id.split('#')[1])) {
    		    $n('#localitiesValContainer2 a').eq(i).click();
    	    }
    	}
    	hideShowLocalityContainer();
    }
    hideErrors(value);
}*/

function hideErrors(value) {
    var error = document.getElementById("locality_err");
    var localities = $n('#localitiesValContainer2 a[rel="' + value + '"]').currObj().innerHTML;
    if(error.innerHTML.includes(localities) > 0) {
        error.innerHTML = "";
        error.style.display = "none";
    }
}

function validateJobLocality()
{
    var errorMsg = new String('');
    var tempErr = "";
    var locations = document.getElementById("naukContainerSelector2").getElementsByTagName("li");
    var localities = document.getElementById("localitiesContainerSelector2").getElementsByTagName("li");
    //var commonLocalities=intersection(localitiesDD.selValue,other_locality,1);
    if(document.getElementById('LocalityStrSpan').style.display == 'block' && other_locality.length <= 0){

        return "locality: Please enter the locality in the text box. ";
    }

    for(var i=0; i <localities.length; i++) {
        var exists = 0;
        for(var j=0; j <locations.length; j++) {
            if(localities[i].id.split('#')[1].includes(locations[j].id.split('#')[1])) {
                exists = 1;
            }
        }
        if(!exists) {
            return "locality: " + localities[i].innerText + " does not belong to locations mentioned above";
        }
    }
    return 'locatity:';
}

function addppgNew(showLayerID) {
    if(document.getElementById(showLayerID).style.display=='none') {
        document.getElementById(showLayerID).style.display='block';
        if(!window.interLoc)
            intLocCall();
    }
    else {
        document.getElementById(showLayerID).style.display='none';
        interLoc.removeAllTags();
        $('#inpIntLocContainerDD').val('');
        $('.tagTxt.interNatLoc').parent().remove();
        hideshowOtherCountryBox();
    }
}

function LocationCount() {
    if($('#naukContainerSelector2').length) {
        var LocCount = $('#naukContainerSelector2').find('li').length;
        $('#locationContainer .slocation1').html('Selected Locations ('+LocCount+')');
    }
}
function LocalityCount() {
    if($('#localitiesContainerSelector2').length) {
        var LocalityCount = $('#localitiesContainerSelector2').find('li').length;
        $('#localitiesContainer .slocation1').html('Selected Locality ('+LocalityCount+')');
    }

}

function removeLocalityNew(str){
    document.getElementById(str).parentNode.parentNode.removeChild(document.getElementById(str).parentNode);
    for(i=0;i<other_locality.length;i++){
        if(($.trim(other_locality[i])).replace(/ /g,"_") == str){
            other_locality.splice(i,1);
        }
    }
    jobIndicatorCountNew();
    LocationCount();
    LocalityCount();
    hideShowLocalityContainerN();
    hideShowLocationContainerN();
}

function removeCountryNew(str){
    document.getElementById(str).parentNode.parentNode.removeChild(document.getElementById(str).parentNode);
    for(var i=0;i<other_country.length;i++){
        if(($.trim(other_country[i])).replace(/ /g,"_") ==str){
            other_country.splice(i,1);
        }
    }
    jobIndicatorCountNew();
    LocationCount();
    LocalityCount();
    hideShowLocalityContainerN();
    hideShowLocationContainerN();

}

function removeCityNew(str){
    document.getElementById(str).parentNode.parentNode.removeChild(document.getElementById(str).parentNode);
    for(var i=0;i<other_city.length;i++){
        if(($.trim(other_city[i])).replace(/ /g,"_") == str){
            other_city.splice(i,1);
        }
    }
    jobIndicatorCountNew();
    LocationCount();
    LocalityCount();
    hideShowLocalityContainerN();
    hideShowLocationContainerN();
}

function removeAllLocation(){
    mainLoc.removeAllTags();
    $('#inpNaukContainerDD2').val('');
    if(window.interLoc){
        interLoc.removeAllTags();
        $('#inpIntLocContainerDD').val('');

    }
    /*var myNode = document.getElementById("naukContainerSelector2").getElementsByTagName("li");
      myNode[0].parentNode.removeChild(myNode[0]);*/
    document.getElementById("naukContainerSelector2").innerHTML='';

    if(window.other_city)
        window.other_city.splice(0,other_city.length);

    if(window.city_sel)
        window.city_sel.splice(0,city_sel.length);

    if(window.cntr_sel)
        window.cntr_sel.splice(0,cntr_sel.length);

    if(window.other_country)
        window.other_country.splice(0,other_country.length);

    jobIndicatorCountNew();
    LocationCount();
    LocalityCount();
    hideShowLocalityContainerN();
    hideShowLocationContainerN();
    hideshowOtherLocationBox();
}

function removeAllLocality(){
    locDD.removeAllTags();
    $('#inpLocalitiesContainerDD2').val('');
    /*var myNode = document.getElementById("localitiesContainerSelector2");
      myNode.parentNode.removeChild(myNode);*/
    document.getElementById("localitiesContainerSelector2").innerHTML='';
    other_locality.splice(0,other_locality.length);
    locality.splice(0,other_locality.length);

    jobIndicatorCountNew();
    LocationCount();
    LocalityCount();
    hideShowLocalityContainerN();
    //hideShowLocationContainerN();
}

function saveLocNew(str){
    var city= trim(document.getElementById('OtherLocation').value);
    var locality = trim(document.getElementById('OtherLocality').value);
    var country= trim(document.getElementById('OtherCountry').value);
    var otherINLocErr = document.getElementById("OtherIntLocation_err");
    var locationPattern=/^([A-Za-z ])*$/;
    var localityPattern=/^([A-Za-z0-9 ])* ?- ?([0-9])*$/;

    var othLocNotAllowed = window.otherLocNotAllowed || [];
    var othLocNotAllowedLowercase = othLocNotAllowed.map(function(value) {
        return value.toLowerCase();
    });

    if(city!= ""|| country!=""||locality!=""){
        if(str == 'cities' && city!=''){
            var otherLocErr = document.getElementById("OtherLocation_err");
            if(!locationPattern.test(city)){alert('No Special Characters allowed. Use only Alphabets (A-Z, a-z) or Single Space');}
            else if(city.split(' ').length-1 > 1 ){alert("Only Single Space can be entered.");}
            else{
                if(document.getElementById('OtherLocation').value!= 'Enter Other Location'){
                    // document.getElementById("naukContainerSelector2").innerHTML+="<li class='tagit'><span class='tagTxt' id='"+trimAll(city)+"11'>"+document.getElementById('OtherLocation').value+"</span><a onclick=\"removeCityNew('"+trimAll(city)+"');\"></a></span>";
                    var indx = -1;
                    if(othLocNotAllowedLowercase.length) {
                        indx = othLocNotAllowedLowercase.indexOf(document.getElementById('OtherLocation').value.toLowerCase());
                    }
                    if(indx !== -1 && otherLocErr) {
                        otherLocErr.innerHTML = "Enter locations other than - Ahmedabad, Delhi/NCR, Mumbai and suburbs (including Navi Mumbai and Thane), Hyderabad/ Secunderabad, Chennai, Bengaluru, Pune, Kolkata";

                    } else {
                        otherLocErr.innerHTML = "";
                        $("#naukContainerSelector2").append("<li class='tagit'><span class='tagTxt' id='"+($.trim(city)).replace(/ /g,"_")+"'>"+document.getElementById('OtherLocation').value+"</span><a onclick=\"removeCityNew('"+($.trim(city)).replace(/ /g,"_")+"');\"></a></span>");
                        document.getElementById('OtherLocation').value="";
                        other_city.push(city);
                    }
                }
                else{
                    alert("Please enter a valid City Name");
                }
            }
        }
        else if(str=='countries'&& country!=''){
            if(!locationPattern.test(country)){alert('No Special Characters allowed. Use only Alphabets (A-Z, a-z) or Single Space');}
            else if(country.split(' ').length-1 > 1 ){alert("Only Single Space can be entered.");}
            else{
                if(document.getElementById('OtherCountry').value!= 'Enter Other Location'){
                    var ix = -1;
                    if(othLocNotAllowedLowercase.length) {
                        ix = othLocNotAllowedLowercase.indexOf(document.getElementById('OtherCountry').value.toLowerCase());
                    }
                    if(ix !== -1 && otherINLocErr) {
                        otherINLocErr.innerHTML = "Enter locations other than - Ahmedabad, Delhi/NCR, Mumbai and suburbs, Hyderabad/ Secunderabad, Chennai, Bengaluru, Pune, Kolkata";
                    }else {
                        otherINLocErr.innerHTML = "";
                        $("#naukContainerSelector2").append("<li class='tagit'><span class='tagTxt interNatLoc' id='"+($.trim(country)).replace(/ /g,"_")+"'>"+document.getElementById('OtherCountry').value+"<a onclick=\"removeCountryNew('"+($.trim(country)).replace(/ /g,"_")+"');\"></a></span>");
                        document.getElementById('OtherCountry').value="";
                        other_country.push(country);
                    }
                }
                else{
                    alert("Please enter a valid City Name");
                }
            }
        }
        else if(str == 'localities' && locality!=''){
            var localityOtherVal = document.getElementById('OtherLocality').value;
            if(!localityPattern.test(locality)){alert('No Special Characters allowed. You must mention locality name followed by hyphen and its pincode');}
            else{
                if(localityOtherVal!= 'Enter locality name - pincode'){
//        document.getElementById("localitiesContainerSelector2").innerHTML+="<li class='tagit'><span class='tagTxt' id='"+trimAll(locality)+"'>"+trim(localityOtherVal.split('-')[0])+"</span><a href='javascript:void(0)' onclick=\"removeLocalityNew('"+trimAll(locality)+"');\"></a>&nbsp&nbsp</span>";
                    $("#localitiesContainerSelector2").append("<li class='tagit'><span class='tagTxt' id='"+($.trim(locality)).replace(/ /g,"_")+"'>"+trim(localityOtherVal.split('-')[0])+"("+trim(localityOtherVal.split('-')[1])+")"+"</span><a href='javascript:void(0)' onclick=\"removeLocalityNew('"+($.trim(locality)).replace(/ /g,"_")+"');\"></a>&nbsp&nbsp</span>");
                    document.getElementById('OtherLocality').value="";
                    other_locality.push(locality);
                    trackUserIntraction({
                        "module": "OTHER_LOCALITY",
                        "action": locality
                    });
                }
                else{
                    alert("Please enter a valid Locality Name");
                }
            }
        }

    }
    else{
        alert("Please enter a valid City Name");
    }
    jobIndicatorCountNew();
    LocationCount();
    LocalityCount();
    hideShowLocationContainerN();
    hideShowLocalityContainerN();

}


function addLocHiddenVal(){
//$( "input[value='Hot Fuzz']" )

    document.getElementById("oldValue").innerHTML='';
    if(window.city_sel){
        var _citySel = [];
        _citySel = $.unique(window.city_sel);
    }

    if(window.cntr_sel){
        var _cntrSel = [];
        _cntrSel = $.unique(window.cntr_sel);
    }

    if(window.locality){
        var _locality =[];
        _locality = $.unique(window.locality);
    }

    if(window.other_city){
        var _othCity = [];
        _othCity =  window.other_city;
    }

    if(window.other_country){
        var _othCountry =[];
        _othCountry = window.other_country;
    }

    if(window.other_locality){
        var _othLocality =[];
        _othLocality = window.other_locality;
    }

    if(_citySel){
        for(i=0;i< _citySel.length;i++){
            document.getElementById("oldValue").innerHTML+="<input type='hidden' name='city_sel[]' value='"+trim(_citySel[i])+"'>";
        }
    }

    if(_cntrSel){
        for(i=0;i< _cntrSel.length;i++){
            document.getElementById("oldValue").innerHTML+="<input type='hidden' name='cntr_sel[]' value='"+trimAll(_cntrSel[i])+"'>";
        }
    }


    if(_locality){
        for(i=0;i< _locality.length;i++){
            if(_locality[i] != "50.50.50.50")
                document.getElementById("oldValue").innerHTML+="<input type='hidden' name='localityGeoLoc[]' value='"+trim(_locality[i].replace('#','')) + '|' + trim(arrLatLong['#'+_locality[i]])+"'>";
            document.getElementById("oldValue").innerHTML+="<input type='hidden' name='locality[]' value='"+trim(_locality[i])+"'>";
        }
    }

    if(_othCity){
        for(i=0;i< _othCity.length;i++){
            document.getElementById("oldValue").innerHTML+="<input type='hidden' name='otherCities[]' value='"+trim(_othCity[i])+"'>";
        }
    }

    if(_othCountry){
        for(i=0;i< _othCountry.length;i++){
            document.getElementById("oldValue").innerHTML+="<input type='hidden' name='otherContries[]' value='"+trim(_othCountry[i])+"'>";
        }
    }

    if(_othLocality){
        for(i=0;i< _othLocality.length;i++){
            document.getElementById("oldValue").innerHTML+="<input type='hidden' name='otherLocality[]' value='"+trim(_othLocality[i])+"'>";
        }
    }


}


var statusCountFields = function () {
    var countSpan = document.getElementById("naukContainerSelector4").getElementsByTagName("span");
    var coll = document.getElementById("naukContainerSelector4").getElementsByTagName("span");
    var curSelInput = cusNew5.gbi(cusNew5.id).getElementsByTagName('input')[0];
    var i = 0;
    var isOtherSelected = false;



    if (cusNew5.selValue.length)
        for (var x = 0; x < cusNew5.selValue.length; x++) {
            if (cusNew5.selValue[x] == '#50.50.50') {
                cusNew5.otherFlag = 1;
                break;
            }
        }
    else {
        cusNew5.otherFlag = 0;
    }

    statusFieldIndicatorCount();
    statusHideShowFieldsContainer();
}

function statusHideShowFieldsContainer() {

    var countSpan = document.getElementById("naukContainerSelector4").getElementsByTagName("span");
    if (countSpan.length > 0) {
        document.getElementById('statusFieldContainer').style.display = "block";
    } else {
        document.getElementById('statusFieldContainer').style.display = "none";
    }
}


function statusFieldIndicatorCount() {
    var countSpan = document.getElementById("naukContainerSelector4").getElementsByTagName("span");
    if (document.getElementById("naukContainerSelector4").getElementsByTagName("span").length <= 9) {
        if (document.getElementById('loc_count_span')) {
            document.getElementById("location_err").style.display = "none";
            document.getElementById('loc_count_span').innerHTML = countSpan.length;
            document.getElementById('tot_job_count_span').innerHTML = Math.ceil((countSpan.length) / 3);
            document.getElementById('loc_count').value = countSpan.length;
            var addjob_count_temp = Math.ceil((countSpan.length) / 3) - document.getElementById('job_count').value;
            if (addjob_count_temp < 0)
                addjob_count_temp = 0;
            if (document.getElementById("addjob_count_span"))
                document.getElementById("addjob_count_span").innerHTML = addjob_count_temp;
            document.getElementById("addjob_count").value = addjob_count_temp;
            if (document.getElementById('loc_count_span').innerHTML >= 3) {
                document.getElementById('jobindicator').style.display = 'block';
            } else {
                document.getElementById('jobindicator').style.display = 'none';
            }
        }
    } else {
        if (document.getElementById('loc_count_span'))
        {
            document.getElementById('loc_count_span').innerHTML = countSpan.length;
            document.getElementById('tot_job_count_span').innerHTML = Math.ceil((countSpan.length) / 3);
            document.getElementById('loc_count').value = countSpan.length;
            var addjob_count_temp = Math.ceil((countSpan.length) / 3) - document.getElementById('job_count').value;
            if (addjob_count_temp < 0)
                addjob_count_temp = 0;
            if (document.getElementById("addjob_count_span"))
                document.getElementById("addjob_count_span").innerHTML = addjob_count_temp;
            document.getElementById("addjob_count").value = addjob_count_temp;


            document.getElementById("location_err").style.display = "block";
            document.getElementById("location_err").className = 'error';
            document.getElementById("location_err").innerHTML = "You cannot select more than 9 locations";
        }
    }
}

function statusEmptySelectedFieldValue() {

    if (cusNew5 != '') {
        cusNew5.otherFlag = 0;
    }
    for (var i = 0; i < cusNew5.selValue.length; i++)
    {
        cusNew5.selValue.splice(i, 1);
    }

    cusNew5.showSelected_Value();
    statusFieldIndicatorCount();
    statusHideShowFieldContainer();
}

function statusHideShowFieldContainer() {
    var countSpan = document.getElementById("naukContainerSelector4").getElementsByTagName("span");
    if (countSpan.length > 0) {
        document.getElementById('statusFieldContainer').style.display = "block";
    } else {
        document.getElementById('statusFieldContainer').style.display = "none";
    }
}

function prefillRequirement() {
    var title = document.getElementById("desig").value;
    if(title != 'Use Complete words Eg: Type Senior Manager, not Sr. Mgr.' && document.getElementById('cmNewProj'))
        document.getElementById('cmNewProj').value = document.getElementById("desig").value;
}

//Code Added for feedback widget on the page
document.addEventListener("DOMContentLoaded", function (event) {
    //Now DOM is loaded and ready
    (function () {
        var hideFeedback = window.localStorage.getItem('hideFeedback');
        var fromMJR = false;
        var enableFeedbackLink = false;
        if(typeof document.forms["frmJobListing"] != 'undefined'){
            fromMJR = true;
            if(typeof document.forms["frmJobListing"]["enableFeedbackLink"] != 'undefined' && document.forms["frmJobListing"]["enableFeedbackLink"] != null){
                enableFeedbackLink = document.forms["frmJobListing"]["enableFeedbackLink"].value;
            }
        }
        if (enableFeedbackLink || (!fromMJR && !hideFeedback)) {
            var feedbackDiv = document.createElement('a');
            feedbackDiv.innerHTML = '<em id="feedbackLink" class="feedbackIcon"></em> <div class="feedback_ttip" style="display: none;"> Tell us what you think about Naukri Job Posting<br><span class="survey_link">Take our 2 min Survey</span> </div>';
            feedbackDiv.setAttribute('class', 'feedbackDiv');
            feedbackDiv.setAttribute('href', 'javascript:');
            feedbackDiv.style.display = 'inline';
            feedbackDiv.addEventListener("click", function () {
                window.localStorage.setItem('hideFeedback', true);
                var url = "";
                if(enableFeedbackLink)
                 url = "https://forms.office.com/Pages/ResponsePage.aspx?id=-bXpDrNSUUOBmMSATNZraH8a3o2xC5JDuHYEyqb3bjhUNkVVQkhXTlpONVVFSkxLUk84M0I5WFY3Ti4u";
                else
                  url = "https://www.surveymonkey.com/r/NaukriJobPostingFeedback";
                 if (window.location.search.indexOf('insta=1') > -1) {
                    url = "https://www.surveymonkey.com/r/NaukriInstaJobFeedback";
                }
                window.open(
                    url,
                    '_blank'
                )
                if(!enableFeedbackLink)
                 feedbackDiv.style.display = 'none';
            });
            document.body.appendChild(feedbackDiv);
            var css = '.feedbackDiv .feedbackIcon {right: 6px;width: 58px;height: 49px;position: fixed;bottom: 0;background: url(https://css.naukri.com/s/4/112/i/scrolling-icons_v2.png) no-repeat;background-position-y: -231px;border: 1px solid #4a90e2;}.feedbackDiv {position: fixed;bottom: 0;display: none;right: 8px;height: 82px;z-index: 100;width: 58px}.feedbackDiv:hover .feedback_ttip {display:block!important;}.feedbackDiv .feedback_ttip {position: absolute;bottom: 65px;right: 2px;display: none;background: #4A90E2;width: 162px;border-radius: 3px;padding: 16px;color: #fff;font-size: 13px;line-height: 17px;font-weight: 400;box-shadow: 0 2px 4px 0 rgba(0,0,0,.15)}.feedbackDiv .feedback_ttip .survey_link {color: inherit;cursor: pointer;text-decoration: underline;padding-top: 14px;display: block;font-weight: inherit}.feedbackDiv .feedback_ttip:after,.feedbackDiv .feedback_ttip:before {top: 100%;left: 50%;border: solid transparent;content: " ";height: 0;width: 0;position: absolute;pointer-events: none}.feedbackDiv .feedback_ttip:after {border-color: rgba(136,183,213,0);border-top-color: #4A90E2;border-width: 10px;margin-left: 60px}';
            var style = document.createElement('style');
            style.type = 'text/css';
            style.appendChild(document.createTextNode(css));
            document.head.appendChild(style);
        }
        window.setTimeout(function () {
            document.querySelectorAll('.feedback_ttip')[0].style.display = 'block';
        }, 60000)
    })();
});
